%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: Adobe Illustrator Artwork
%%Creator: Adobe Illustrator(R) 24.2
%%For:  
%%CreationDate: 4/15/2022
%%BoundingBox: 0 0 581 400
%%HiResBoundingBox: 0 0 580.9493 400
%%CropBox: 0 0 580.9493 400
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 24.2.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 24.2.0 x490 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 88 8%%BeginData: 12711 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FDFCFFFDFCFFFDFCFFFD17FFA8FD10FFA8277DA8FD15FF7DA8FD30
%FFA8FFA8FD20FFA8A876A8FD0EFF52FD04F8A8FD12FF27F8F87DFD2DFFCB
%7DA87DA8A8FFFFFFA8A87DFD19FFCBA1A07DFD0EFFA19976F8F87DFD11FF
%A827204B76FD2DFFA1A17DA8AFFD04FFC9A1A8A8FD18FFCAA09AC9FD0EFF
%A19A9AF8F87DFD11FFA8209A99A0A8FD07FFA8FD24FFA1999AA1FD05FF99
%A076A1A8FD17FFCFA19AA7FD0EFFCA9AA126F852FD11FF7DF86F9A52FD07
%FFA8A8A8FD23FFA19AA1FD05FFA8A16FA17EFD16FFCAA06F9A9A9AA1FD05
%FFC39A9ACAFFCFA876A0C9759A4A52FD11FFA84AA0A176A1FD07FF7EA87D
%FD20FFCA75767CA075A7FFFFAFA7A09AA1A7A1FD15FF9A6F9A6F9A6F9ACA
%FD04FFCA999A9ACFA1C29AA1769A759A76FD10FFCA759A75CAA175A1FD06
%FFA19A9AA1FD1FFF76995158759A6FCAFFC9C1C9C9C8C2C8CAFD13FFA16F
%996F996F996F9AFD05FFCAC2C1C1A0BC9A6F756F9A6F75A8FD0FFF6F7675
%756FA07575A1FD05FFA29A9AFD1FFF757575582D76757575C9C1C29FC8C2
%C2C1C8CAFD12FF6F9A9AA19A9A6F9A6FCAFD05FFCFC1C2C2C3C2A06FA076
%9A75CAFD0EFFA17576A1769A6F7675A076CAFFFFCFCF76A0CFFD1DFFA175
%759A587C999A767699C8C2C8C2C8C2C8C1C8FD11FFA86F6F9A9A9A76A16F
%6F6FFD05FFCAC1C1C2C2C89FA076756F75A1FD0EFFA06F7576A0769A999A
%6F756EA1C8C79EA09FC7A7FD19FFA8A16FA17575517C759A9AA16FA0A0C8
%C2C29FC9C9C29FC9FD11FF6F9A6F9A6F9A9AC29A9A9ACACAFFFFFFC9C1C1
%C2C2C8C8C9769A75CAFD0EFFA075759A75769AC39AA17CA19FC7C7C8FD04
%C7C9FD17FFCA9A6F9A759A9AA0759A9AC275769AC9C2C8C8C9C9C9C2C8C8
%FD11FFA76F996F996F9A9AC26F9A9975A8FFFFFFC2C199C2C2C8C2C97675
%A8FD0EFFCA6F756F9A6F9ABCC3A8A87DC7C7C79FC7C7C79FC7C9FD15FFC3
%C299756F996FC29A76759A6F766FA0C2C8C2C9A0C8C1C29FC9FD12FFCA9A
%9A6F9A6FC3BC9A75756FA0FD04FFCAA175C2C2C8C2C2A1FD10FFCA769A75
%9A7599A1FFA9A7C7C79FA6C7C7C7A59FC8FD14FFC8C87576759A9AA19AC2
%6F9A759A75A0C9C2BCC2C2C8C2C8C2C2C9FD13FFCF9F9F99997599A1FF7C
%A7A1CFFD04FF767575A099A075CFFD11FFA0759A759A6FA1FFFF9FC79FC7
%9F9F9FC79F9F9ECFFD12FFCAC9CAA0A7CAA8FFA0757B756F7675C2A0C29A
%C2BCC8C2C29FC9C9FD14FFCFC8A5FD04C7CFFFCAA7FD05FFA89A759A759A
%99A0CAFD11FF9A9A75A0999A9AFFFFC9C7C8C7C7A5C8FD04C7C9FD15FFC8
%FD04FFCEC7C7C7C89FC7CFCA6F769A7CA0A0A7FD17FFCE9FC7C7C79FA5C8
%FFA1A8FD05FFA075A0759A759A75CAFD10FFA89A759A75A0759AA8FFA7C7
%C0C7C7C7BCC299C2C0C9A9FD13FFCFC8CFFFFFFFA5FD06C7CF7D5875762D
%585184FD17FFC9A5A5C7C7A59FCDFFA8A1FD04FFCA759A99A0759A759AA8
%FD10FFCA759A75A0759A75CAFFFFCFC8A5C7C1C39A76BCC2CAFFA8FD13FF
%C8FFFFFFCFFD07C7C959517C7558517C7DFD17FFCE9EC79FC79FC7A5FFA1
%A7FD04FF7699759A759A759A6FCAFD10FFA899759A75997599A1FFA8FF58
%587C5851769A582D58A8FFA8FD11FFCAC8CFFFFFCF9EC79FC79FC7C0A62E
%5851762D58517DFD17FFC9C7A5C8C7C8A5C8FFCAA1FFFFFFA89A759A75A0
%759A759AA8FD10FFCA75A075A099A075A1A9CBA88452835858518358582D
%587DFFA8FD11FFC8FFFFFFC9C7C7C8FD04C7A0582E7C7558527C58FD17FF
%CE9FC79FC79FC79FCFA1A7FFFFFFA16F9A759A759A759A6FCAFD10FFA799
%759A759A75A0A1FFFFA8FD047D2D582D7D52582D58FFFFA8FD0FFFCAC8FF
%FFFFC9C1C79FFD04C77C2D5851762D58517C83FD16FFC8FD04C7C8C7C7CE
%CAA1FFFFFF9A9A759A75A0759A7599A1FD10FFCA759A75A0999A7DA1FFFF
%FFA87DA8FD05587C525851FFFFFFA8FD0FFFC2FFFFFFC8FD07C77B585876
%75585858577CFD16FFC89EC7C7C79FC7C0CEA1A7FFFFA89A759A75A07599
%759A6FA7FD10FFA199759A759976A075FFFFFFA9A87D7D2D582D7C51582D
%58A8FFFFCBA8FD0DFFCAC8CAFFCFC79EC79FC79FC7C17C2D5851762D582D
%585184FD15FFC8FD04C7C8C7C7CECAA7FFFFFF9A9A75A0A0A175A07599A1
%FD10FFCA759A75A099A175A0FD05FF837DFD04587C585858FD13FFC2FFFF
%FFFD05C7C8C7C75758587675585858527C58FD15FFC89FC7C7C79FC7C0CE
%A1A8FFFFFFA0759A759A7699759A6FA7FD10FFA199759A75A07D9A75FFA8
%FFFFFF7D7D2D582D7D52585158A8FFFFFFA8FD0DFFCFC8CFFFCFC79FC7C7
%C79FC7A5582D58519A51585158517C58FD14FFC8A5FD06C7CECAA1FFFFFF
%9A9A759A759A759A759AA1FD10FFC9759A759AA0A176A1A8A8A8FFA87D7D
%5851585858515852A8FD04FFA9FD0DFFC8FFFFFFC8C7C1C7C7C8C1C85858
%2D76757C2D585858577C83FD12FFCFC89FC79FC79FC79ECFA1A7FFFFFFA0
%6F9A759A759A759A6FA1FD10FFA175759A75A0769975A87EA8FFFF587D52
%582D7D52582D58A8FFFFFFA8FD0DFFCAC8CFFFFFC3BCC29ACFC3BC9A582D
%58517658582D582D585158A8FD12FFC8C7C7C8C7C8C7C7CFCAA1FFFFFFA0
%9A759A75A0759A759AA1FD10FFCA75A0759AA0A175A0A8A8A8FFFF837D7C
%51587C58515858A8FD04FFCBFD0DFFC8FFFFFFC3C2BCC3FFFFBCC3585858
%7C75AF7C58585852587BAEFD12FFC89FC79FC79FC79FCFA1A7FFFFFFA16F
%9A759A759A759A6FA1FD10FFA175759A75A076A076FFA8FFFFFF587D5258
%2D7D2E582D58A8FFA8FFA8FD0DFFCAC8FFFFFFCABCC29AFFFFCA9A585158
%5176A8FF5258515851A0C3FD12FFA5C7C7C7A5C8C7C7CFCAA1FFFFFFA199
%99A09A9A75A0999AA1FD10FFCA759A759A9AA175A0FD05FFA87D7C527C7C
%A07CA083FD13FFC2FFFFFFCAC2BCC3CAFFFFCA5158587651AEFFFF585852
%C2BCC29AFD11FFC89FC79FC79FC8C8FFA1A7FFFFFFA79AA0999A9AA0759A
%75A1FD10FFA8A1759A9AC2A1C2A8FFA9FFA8FFA9A1C1C2A0FD04C1CAA9FF
%FFFFA8FD0DFFCAC8CAFFFFFF9AC2BCFFFFFFA8582D5851517DFFFFFF58A1
%BCC29399CAFD10FFCAC2C2C2BCC2C2FFFFCAA7FD05FF7C7C75A8AE7D7C7C
%A8FD11FFA19A93C39AC39ACAFD06FFA0C8C9FFCAC8C1C8CFFFC9FFA9FD0F
%FFC2FFFFFFA1C2C2C3CAFFFFCA517C7C9A76FD05FFC3C399BBCAFD11FFC9
%FD04C199C1C2FFA1A8FD04FF83582D2D587DA8832D83FD10FFA89AA1A06F
%996FA176A1A1FFAFFFA8C8C1C9C9C9C2C1C1C2C1C1C1C9FD0EFFCFC8FFCF
%7675759A75CAFFFF9ABCBCC399A1FD04FFA1BB9993A1FD12FFC1C1C1C8FD
%05C1C2A1FFFF83527C51522D58587C58587DFD10FFA16FA19A9A6F9376A1
%769375CAA8FFC9C8C1C8C2C8FD07C1FD0FFFA0A0759A759A759AA8FF9ABB
%C2C3BCBCA1FD04FFCA93B5C3FD12FFA8FD05C19EC198C198C2A858272D2D
%522D582D582D582DA8FD0EFFA8FF75936F996F9A769A76A176A1A1FFA8A8
%A0C29FC2A0C2A1C9A1A7A1C9CAFD0BFFA8FFA7756F756F996F756FA89AB5
%92BB93936E9AA8FFA8FFA1939AFFA8FFA8FD10FFC8C8C2C8C8C9C9CAC9C9
%C9FFA8A8A8AEA8FFA8FFA8FFA8FD12FFCAA7CAA1CACBFFCBFFA8FFCBFFCB
%FFA9FFA8FFCAFFA8FFAFFFA9FD11FFA0A1A0FD04A1A7CAC39AC3A1C3A1C3
%A1FFA9FFFFCAA0FDFCFFFDFCFFFDFCFFFD45FFA87DFD43FFAFFD3AFFF8F8
%27FD40FF84F8277DFD38FF524BF8F8A8FD3FFF7C20F827A8FD37FF7D6FC2
%4BF852FD3EFFCA6F7627FD38FF276F9A75F8F87DFD3DFFCA9A9ACAFD31FF
%CAFD06FF5275C89976207DFD3DFFCF9AC2CAFD30FF9A926FA1FFFFFFCA75
%997576757575FD32FFCBA8FD07FFA8A06FC2997575A1FD2EFFCABC9A4ACA
%FFCA6F9A7576759A757575FD31FFA0A0A2FD06FFA06F9A7576759A6FA1FD
%21FFA8FD0DFFCABC9AC375756F766F756F766F7576FD07FFA8FFA8FD25FF
%CA76767DA8FD04FFA76F756F766F756F766FA7FD1FFFA8A8A8FD0DFFC3C2
%BC9A759A759A759A999A6F9AFD06FFFD04A8A9FD1FFFA1C3FD04FFA8A8A1
%FD05FF769A759A759A759A759A76FD12FFA8A87EA8A8A9A8FFA8A9A8FFA8
%A1769AA8A9A8FFA8FD09FFC3C29975757675756F9A99C3A8FFA8CBA8FFA1
%A07DA8A8A9A8FFA8FFA8A8A2A8A8FD14FFCA939A6FC3FFFFA8A89AA884FF
%FFFFA17575996F767575759A7575A1FD12FFA2A8A8FFA8FFA8FFA8FFA8FF
%76A17CFFA8FFA8FFA8FD09FFCACAA1A06F9A759A75C2CAFFA8FFA8FFA9A1
%6FA07DFFA8FFA8FFA8FFA8A8A2FD15FFCACAC2A051AEA8587CA77D5151FF
%FFC39AC27576759A9AC29AC39ACAFD11FFA8A87EA8A8FFA8A9A8FFA8FFA8
%CA7EA8A8FFA8A9A8FFCACACAFD09FF76756F766F759ACAA8A9A8FFA8AFA1
%9A9AA8A8FFA8A9A8FFA8A87EA8A8FD16FF832D2D52582D522D582D2D2DC3
%BCC29A9A9AC29AC3BCC29ABCCAFD12FFA8A8A8FFA8FFA8FFAFCBA09A76A8
%7DA1A8FFA8FFA9A1759AC3FD08FFA0759A759A75C9CBFFA8FFA8FFA8C9C2
%C8C2CFA9FFA8FFA8FFA8A8A8FD17FF83512D5851582D582D582D587CC3A1
%A2BCC3C2C3C2C3BCC3C3FD12FFA8A8A2A8A8FFA8CBA8A86F936F7658766F
%99A1FFA8C999BCA0FD09FF9A9A759A75999AFFA8CAA8FFA8C8C1C7C1C1C1
%CAA8CBA8FFA8A87EA8A8FD16FFA82D512D582D512D582D512D58A8FFA19A
%BC9A759A75A1CAFD14FFA2A8A8FFA8FFA9FF759A6F9A7558A7C8A19A9AC3
%BCC2C9FD0AFFA0A0A0759A75A0FFCFC9FFA7C8C8C8C1C8C1C1C1FFA9FFA8
%FFA8A8A2FD18FF582D582D582D582D837D582DAEFFCA759A759A7599A1FD
%14FFA8A87EA8A8A9A8FFA16F6F996F752DA7C9FFA1939AC29AFD0BFF759A
%9A99759A75CAA0FFCFC1C1C8C1C1C1C8C1C1A1FFA8A9A8A87EA8A8FD17FF
%83512D582D522D5858582D2D84FFA0A0769A759A6FA7FD15FFA2A8A8FFA8
%FFA8A19AC29ABC9AC3C29A769A6FC2BCCAFD0AFFCAA09AA175A075A0766F
%CACFC1C8C8C8C1C9C9C7C1C9A9FFA8FFA8A8A2FD19FFA8A858582D585858
%2D5852FFFFA075A19A9A759AA1FD14FFA8A87EA8A8CBA8FFC3C2BCC3BCC2
%BCC39A9A6F9A9ACAFD0BFFCA759A9A99759A9ACA9AC3C1C1C1C8C2C8FD04
%C1A0FFA8CBA8A8A2A8A8FD17FFA8FFA87C2D342D522D342D83FFCA759976
%A0759A6FA1FD15FFA8A8A8FFA8FFA8CABCC2BCC3BCA0519AA1A8A2FFAFFD
%0BFFA89A76A0759A75A1FFFFA7C9C2C2BCC8C1C7C1C7C1CAA8FFA8FFA8A8
%A8FD04FFAE58A8FD10FFA8FFCAC8C1C17BA0C2A051A7CBFFA19A75A1769A
%7599A1FD14FFA8A8A2A8A2A8A8A9A8C3A1C299C1999F98C19FC2A0C9A8FD
%0AFFCA6FA0769A7599A1FFA8A87D769AC29FC19F9F75A7FD06A87EA8A8FF
%FFFF585858FD0FFFA8FFC8C1C0C19FC7999ABCC2CFCBA8A06F9A9A9A759A
%6FA1FD15FFFD05A8FFA8FFA9FFC1C8FD06C1BAC1BAC1A1FD09FFA199A0A0
%759AA1FF837C5158527C52585858517DA8FFA8FFA8837DA8A8CBFFFF8383
%58A8FD0EFFA8CFC1C1C1C2C1C7C19A75C2A1A8A8FFA09A75A176A0759AA0
%FD14FFA8A8A2A8A2CBA8A27DA9A8C198C199C198C199C198C198BAA7FD08
%FFA16FA0759A76FF7D582D582D582D582D582D587DFF7EA2A883587C58A8
%A8FFAE837D7CA8FD0DFFA8FFC8C1C1C199C1C1C19FC3A0A7A8FFA8A17699
%9A9A759A75A1FD15FFA2FD04A8CB7EA8A8FFA0C1C0C1C1C1BAFD05C198C1
%FD08FFA099A0A075A1A97D2D585258515858582D5852A8A8A87EA8837D58
%8358A8FFFF7D837D8358A8FD0AFFA8FFFFC9C1C8C1C1C1C8C1C8A1C9A8FF
%FFCA75A176A19A9A759AA0FD14FFA8A87EA8A2FD04A8A97EA2A0C198C198
%C19FC198C198C198C9FD04FFCAFFCFA06FA0767575A852582D58517C5158
%527D587D7DA9A2A8A8A87D7D587D7DFFFFCF7C7D7C587DFD09FFA8FFAFFF
%C8C1C1C19FFD04C1A1A8FFA8FF769976A1759A759A6FA0FD15FFA2A9A8A8
%A8FFA8FFA8A8A2A87EA8A1C2C2C8C1C1A0C9A7CAA7FFFFFFC9C8C1C9A8CA
%A8CAA1A17658525858587C7C517DA2A8A2A8A8FFA8FFA8A97D837DFFFFFF
%A8A77D7D7DFD0EFFC9C1C8C1C2C1C8C1C8A0FD04FFA1759AA1A0999A759A
%A0FD14FFA87D7DA87EA87DA87EA27DA87DA87DA87EC198C1A0A9A9AFA8A9
%A8FFA8CAA7CAA8A9A8FFA8AFA27C2D582D5851582D522D7D7EA87DA27DA8
%7EA8FD057DFFFFA8587D7DFD0BFFA8FFFFFFA0C1C1C19FC1C1C1A0A1A8FF
%FFA8759A76A1A1A0759A75A0FD14FFCB7DA27DA8A2A87DA8A2A87EA8A2A8
%7EA8FD04C1A0A1A1A8A1A8A8A9A8A9A8A9A1A8A1A8A1A051585858517C51
%522D5852A87EA8A2A87DA8A2A8588358A8CBFFFFFFA8FD0BFFA8FFFFFFA9
%C9C1C7C1C2C1C7C1C9C1FFFFFFA8A176A09ACA759A759A75FD14FFA87D7D
%A27DA87DA27DA87DA27DA87DA27CC198C198C198BAA0C298CAFD04FFA899
%76A0759A6F582D582D5851522D522D2E7DA87DA87DA27DA87DA27DFD04A8
%FFA8FD0CFFA8A8FFFFA9A0C1C1C199C1C1C1A0C2CFFFA8A87D996FA0A89A
%759A759AA8FD14FF7DA27DA8A2A87DA87EA87DA87EA87EC9FD06C198C99F
%C1C1FD05FFA0A1A0A0A1A151585858517D52582D7C76A87EA87EA87DA8A2
%A87DA2A8FFA8FFA8A9FD0CFFA8FFFFFFA9C9C1C7C1C2C1C7C1C9C2FFFFFF
%A8A176A0A0FF759A759A76FD15FFA87DA8A8A8A2FD08A8A9A0C199C198C8
%A0BAA0C298C2FD05FFCEA0C39FCF7C342D582D58A88451A0BCC29AFD05A8
%A2A8A8A87DFD04A8CBA8FD0CFFCBA8FFFFFFA1C7C1C19FC7C1C1A0C9A8FF
%A8A8759A76A1A89A759A759AA8FD14FFA8A2FFFF7DCBFD09FFC8BAC1C1C1
%C9FF9FA19A9A7CFFFFFFCFC89EC9A6C7C7A0527C515858FFFFC3C2C26FA1
%FD06FF7DFFFFA87EFFA8CBA8CBFD0CFFA9FFFFFFA9FFA79A99A099C2C1A1
%A8FFCFC9A0C39A9AA1FF759A759A75FD15FFA87DFFA8A2A8FFA8FFA8FFA8
%FFA8FFA099759975A8FFA7769A755175A7A6C79EC0A0C89E9F99C3BCC2A1
%A8A8A193BC6FA1A8FFA8FFA8FFA8A2A8FF7EA8A8A9A8A8A8FD0DFFA8FFFF
%FFCB9A6F6F6F996F9A76A79EC79FC7A0C2A1A9A8A0999A99CACFFD18FFA8
%FFFFFFA9FFFFFFCBFFFFA7759A767652FFA1A1769A999A6F9FC7C8C7C9C3
%C293C3C2C3BCFFA9FF9A9A76CAFFFFCBFFA8FFCBFFA8FFFFFFA8FFA8FFA8
%FD11FFA19A6F9A6F9A999A999AA1C7C1C89FC8C6CFA9CEC7C7C1C8CFFD25
%FFA87599757575A8A8A8A1CAA7A8A8FFA8FFA8A193996F9A939AA8FFA89A
%76FFFFFFA9FFFFFFCBFD1AFFA89A936F6F6F9A6F996F9A6FA8A7C89FC69F
%C8A7C79EC7C7C79ECFFD26FFCF9AA09A9AA0FFA9FFA9FFFFFFA9FFFFCBA8
%CAA8A8A1CAA1FFFFFFA8FD23FFA26F6F9A6F9A6F9A939A6FA1CBFFA8CFA7
%C9A1C7C6FD05C7CAFD28FFA8FFCAFFA8FFFFFFA8FFFFFFA8FD2FFFCBFFFD
%06A8A1A1A1A8A8FFA8CBA8A9A8CAA6C9A7C9A7CFA7FFA8FDFCFFFDFCFFFD
%10FFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 6.0-c002 79.164460, 2020/05/12-16:04:17        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
    xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
    xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
    xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
    xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
    xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
   dc:format="application/postscript"
   xmp:CreatorTool="Adobe Illustrator 24.2 (Windows)"
   xmp:CreateDate="2022-04-15T14:25:07+03:00"
   xmp:ModifyDate="2022-04-15T14:25:08+03:00"
   xmp:MetadataDate="2022-04-15T14:25:08+03:00"
   xmpMM:OriginalDocumentID="uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7"
   xmpMM:DocumentID="xmp.did:62f2e64a-d6ea-f044-b6da-5d81530e4b6e"
   xmpMM:InstanceID="xmp.iid:62f2e64a-d6ea-f044-b6da-5d81530e4b6e"
   xmpMM:RenditionClass="proof:pdf"
   illustrator:StartupProfile="Basic RGB"
   illustrator:CreatorSubTool="Adobe Illustrator"
   xmpTPg:NPages="1"
   xmpTPg:HasVisibleTransparency="True"
   xmpTPg:HasVisibleOverprint="False"
   pdf:Producer="Adobe PDF library 15.00">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">2204.w037.n003.311B.p1.311</rdf:li>
    </rdf:Alt>
   </dc:title>
   <xmp:Thumbnails>
    <rdf:Alt>
     <rdf:li
      xmpGImg:width="256"
      xmpGImg:height="176"
      xmpGImg:format="JPEG"
      xmpGImg:image="/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAsAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUJqepW+nWh&#xA;uZ6lQQqqvUse2ICqWia5ZaxavcWpPGNzG4NKhgAexPjgEgeTZkxSgakKTDC1uxV2KvFtT/5yw/Ln&#xA;SvNOo6DqdrqFsmnySwjUPRV4pZIWKNwVHL8WKni1N+9MAKSCOb0/yd5y8u+cdBh13y/dfW9OnLIs&#xA;nFkZXQ8WR0cKykHxHv0woTrFXYq7FXYq8ys/+cjPysvPO0flC11CSa/mnFpDdpEzWj3DNwWJZRWt&#xA;X+ENx4n+bFXpuKuxV2KuxV2KuxV2KuxV2KuxV2KpdqWv6fp1xHBcFuci8vhFQFrSp+7thATXVdp2&#xA;tWWoTTRW3I+jSrkUU18Pu74kIV76/tLGH1rl/TjJ4g0JqSCaUFfDAAq6zvbW8h9a2kEkdaVFRuOx&#xA;BoRjSq2KuxV2KuxV2KsA/Mrzb5ajtTor37LqnqRyRpA1FSRGBVbiToiN0fvx7Zj5soAoHd2eg0k5&#xA;SEzG4ef6EJ+T+paGiahYpPFFq13cNdTWaNG6tRQvqRyR/A9VUV/a/m3yOmkKrqz7TxSvio8Pee96&#xA;VmU6lI387eV1uzZ/pCL62HVPQJox5P6dVrTkK9xlPjw73M/IZuddLRmreYdH0mxmvb+6SG3gbhIe&#xA;rczuECirFj4ZOWSIFktEME5EADm+Yfzf8r/pTRNRubBbeuq3RvdKW5Yib07gBpWCoi8en7Zf4j1H&#xA;EAa+GUDITvTvMkTPDwADi/A+3zv7maf84dQajY+Qdb0u/iaKa01iQhWNdpLaA7dqfDWo8c2MZCQs&#xA;OhnAxNHm96yTB2KuxVAeYLySy0HUryI0ltrWaWMn+ZI2YfiMVAt8d+RPK5sPLdrraeX5Le9if/SZ&#xA;jJEzLIk0fpzr8QZfQSQvwK8q0O5FRgSncvq9Lv8AFiiMJ9Hrr+z8fpfZtle2l9aRXlpKs1tOoeKV&#xA;dwynM4EEWHRSiYmjzdfTTQ2k0sMfqyopZI/Ej5YQxSXTPN0F5eQ2jwmOWUUVuQILAVO3WmEikgGr&#xA;ZBgQ7FXYq7FXYq7FXYqsmmigheaZxHDEpeSRjRVVRUkk9ABiSkC9g8U8461Zat5pk1TRb2aSyFoI&#xA;Lq8jFI7cqSeYSZkDNRiR+7YMaCq71wMmU8VxOzvdNigMfBkHq94+Fb/oL1LyffeX7rR4v0NdpeJG&#xA;qrPMAFlZ6ULSpRSrNSvT5bZmQmJDY26bNjlCW4ph/wCaetXsdzbRW8XqR2k0fqJSYkmQAk/uVc/C&#xA;P5loehIrUYetu48M+Ej3fcXYdm4oz4hIc/f8dwEz8h3l7FdvaXci0nDSIgjMRXuikFpPiVNmNaGl&#xA;aDpmXhyCUedycLU4uCZABpnOWOO7FXYq7FWNfmN5iudA8pXl9abXbcYYH/kaQ8ef+xFSPfKs0+GN&#xA;uXocAy5RE8nzlDYJeQSXcupW6XLMS0E7SiV2J68uBTcnqW+ea6r6vVmfCa4TS6zk1XQ7+11SABZL&#xA;eVXhnRhJEWU1480JU1GxFemIuJtEhHJExPV9O+WvMFlr+jW2qWZ/dzr8cZ+0kg2dG91ObSExIWHk&#xA;M+E4pmJ6MT85+RdFiVtatYWjuVnSabixALUKB6j4v2qUJpQ0zUdqwMMRnD4+7+13PZuulOQxzryP&#xA;Xb9jD9VtLvV5Z2uJS7yRLGJHoacRRT4k7CvyGazDrbgOI3IO58OEIkAc2EahpepR3NzJqrPyiSvr&#xA;sS/qMfgjVWP+YUHwzPx5BMWC4JHDQDPvyF1KRdU1PTCaxywLcgeDROEP3+qMztHLch1vacNhL4Pa&#xA;Mz3TuxV2KvG/zs8zXL6pb+XUlaGxVEmvCvV2cmgIqOQRRWlevyzA1WTfh6O47OwjhM+rz5P0hpbT&#xA;paXMN1aTn0ZEjkR1nU7CsJIk77HiCOxzG3DsB6uhtkXkT8wtQ8pLLa3kUtxYOylbRhxKE7uyM3TY&#xA;g8aUPtlmHPwe5o1ei8TfkXsej+e/LWracb61uCEU8HhkUrKrUrTjvXr1FR75dm7Rw4o8U5V9/wAn&#xA;Uy0OUGq+PR5np2jaNH+YcLyxTyaRYcBbXcpld+aATxh3pyPF/Fztt+0RmuHamAkTMvT58+7l73Zn&#xA;IfCMBH18tuXfz93m9qiljljWSNg6MKqw3BGbyGSM4iUTYLopRINFdk0OxV2KuxV2Koa/1LT9Ptzc&#xA;X1zHawL1klYIPkK9TgMgObKMDI0Bbxr80fzDbV7OKy0aZf0PMWE8qtSWR4z9hozR1TowqPi+gjMD&#xA;UZ+IUOTuNFpOA3L6nm0cDPHyJCJUjm3SoBam1ewrmP0a4Y5ZdWZfww2+NftZP5W1LWfKeuW8sciD&#xA;69WCaAOH+BiAruo2BDNyWu+xwCcoAmPOnY58MZ+mQ5M6NxOZGlMjGR92epqa+JzQ+JK7vdyRAVVb&#xA;L4DdwlbyEMvpOKTAbBuvXJYzOPrje3VjMQl6Zdej0PQtWXU7BZiOMqnhMo6Bh3Hsc6rR6nxoX16v&#xA;NavT+FOunRMMy3GdirsVSzzJ5fsdf0a40q8qIpwKOv2kdTVXX3ByM4CQot2DMcUxIdHz75r/AC08&#xA;xeX7oRlBfW8gLRT24Y/CDT4kIqrd6CvzzUamcMJAnIC+T1Gm1sMovlSC0G0a0nm/SNrLGGXigkhc&#xA;/wCt+yaZQc8DykPmHOhOPem1la/mfoNjbDSrR7ePVZ09KeJ2WH1JUJiHpSPEzcgo3p1NONBmbGMh&#xA;uLr73VZtTikSCIykLs1dPdtFvW1zQEkvrV7aWUSQXdrJsVkjYxuKjtyWoIzN4RkhUhz2LoJ/uslx&#xA;PLcPN/PdhN5VayukmW4hnmZPR+zI0YWrGnT4SRnOz7J8In1WDy73oMHaHjCqojn3IGTVPL99YtHd&#xA;SxS2soDPDI3FwRWhA+0rLU0I/VmPj8THLYN84iXvT/8AJvyzBaNqOtwSNJZ3J+r2BkHGQxo1ZCwH&#xA;+UAB40rQVpnR6OG3F3uk7Ry2RDuem5murdirsVeWfnN5JF3A3ma3mWOS1jSO7heo5rz4oyH+ar0o&#xA;ev68LVYtuJ2nZ+oo8B6vHbdZobiKYLUxur0qP2TXNfbuomjb1fyVoWk+YdC1TUrjnHPC3ptbgRMr&#xA;JFH6iF+UbNuzsKcu21Mz9HAEH3ut7V1J4xQ6c+q+1sbextZfqNtHHJIPUaNAIw8nGgrQeAArnDdp&#xA;6gZtTK9oA0PID8W34hIY++VIiG4SWoFVkWnOJtmWviP4jbNdPGY+7vbIzB96Z+RtZ9O6Wy5Obdvg&#xA;VTXgvP4oqV2rw4g/POl7J1k8WYQkfRk/3XK/idnW6jFGcCRzj939j0DOzdU7FXYq7FUPqN21nZyX&#xA;CxNOyUpEnUlmC/xyjU5jjgZAcVdG3Bi45iN15vEvPumedtf1ua2Om3F1Jp6xyPIlDFGLktSJKbM1&#xA;FRjxrQbtTaurjPJkJ4hUgeXOtrHJ6COXBjgBDYHr396RTeTNf8vJZ6jrNvHb2txKYTBIBNKxZKpx&#xA;VOQXcb13/jZkxGMbk2afV45ToG657JJqPO11GYRJwjLFkR46D4kKmiuP5XYdO+UxmCNjbOM4WTDk&#xA;fJMtH0S7uLqLU9QmW2shJzNxIwHNx8YRQO7HK5ZOg5sjcizq01GN5yqxqwoeJffcHwBp9+YEsJhG&#xA;zu5GTDUbtGtcXUoEXNmWvwxLstT4KNvwyk5JS2v4fsaBCI3Zp5P026s7SWS4UxmdlKRtswCg7kdq&#xA;1zouytPLHAmW3E6LtLPGcgI70yDNo612KuxV2KsH8+0k1OxhYnhQFlBIB2dgDT3QZx3tDkrNXdj+&#xA;+VO10Mbj/nfoSK4MtYkjbh6j8WcAEgBWbau37PfOZxgbk9B+l2MydgOrJNZm9bSfK79f9ylmp/2H&#xA;Nf4Z6FoMnHpsR9w+WzqDGsmQeRZjm1cB8+fmB5kj1zzPcSci9hbVt7Qof2VO8gHQ8mqflTNNqchn&#xA;Lbo9Ho8PhwF8yxk84JyAfjjYivaoPvlHMOW9z/J+cy+TlHT07iVQOwqQ23/BZttH9DoO0R+9+DNs&#xA;ynAdirsVYZ+bsrJ5JuFHSSWFW+QcN/xrmNqz6HN7PH70PC7fiPUcqGZE5IDuK8gNx7AnNLk6B6B6&#xA;P+SN4Df6rp7gMlxCk3A9P3bcG29/VGbLQmiQ6vtSPpBTXzI1nocFtdXcwS3vGZIyFY8WXsaV2p3z&#xA;ne1ew8niGePcSN11a8PaMIxAnsxrVvNFrbzMlo6y3UIP7k/CXY7qgZgBQ+IOU6XsaQBGYV8eXns7&#xA;HBq9POxxDi6dPvb8t+c7RLqzXVZE0+5LJI5ZHKRtsVDgCvh8u+ZcOyBHNCcT6YyBN+W7j67WYYRM&#xA;L9dUR8HsWnah9aBVjGzcVkSWFucUkb14ujeG2dc6FG4q7FXYq7FUq0z/AI7ms/61v/yZGa7S/wCM&#xA;Zv8AM/3Lm6j+5x/53+6SvzpP8dtAOwaRh89h+o5ofajLvCHvP4+1yezY7EsWkhhk2kjVx/lAH9ec&#xA;rGRHIu0SH8xNSgi8saZpEKpHzu5Ll+IAp6ShVJoO/qn7s7PsbMZ6ajvUj+v9Loe0s08WW4miQ87t&#xA;7q4tEjgtZmiitiwh9JmUfGSWYV3qeRzYcIkNww7R1eUcHDIgGAOxIG5L3T8nb4XWk6gkp9S4iuy6&#xA;u27+jNGrRipqabHMnQxiIbAW45yykTZJ/a9AzNQ7FXYq7FXYqwTzo3LXLcfy0+7033/4bOG7fP8A&#xA;hEv6g+93OiHoH9Y/cks/99be0hJ/5Fvmihyl7v0hzZ8x7/0FOJ5C+k6Cv++9ct1H/DN/xtnZ9gz4&#xA;tMB/NnX6f0uv1EayS84J9591CbT/ACfql1C3CURCNH7gysI6j3+PbN7nlUCXB0kBLJEF85qjtXip&#xA;biOTUFaAdzmlt6Zfd/71Tf67dfmcYigh7V+SsnLylOtKcL2Rfn+7jb+ObXRfR8XRdpj94Pd+tn2Z&#xA;br3Yq7FWCfnN/wAogn/MXF/xF8xNZ9Hxdh2b/efB4nbdZB3MbU+gV/UM0+Tp73esx/LmOC2161ik&#xA;5G5vYZXZVYrSFEMgQ07yenX5fPNnpQIyH86X3Ot1xMoGvpift/Yzjzv5KhuYXe1iE0QUyTWx6oAd&#xA;2jbqD1p/TbNhIcQoukkOIUXjnmi3ig1CJY2MgNtD+8Ipz4oEDU9wuYWYUfg4WUUUJdOZdMtJZPil&#xA;V5YfUPUxxrGUU+PHmae23QDKzyYF6L+SzfWItXtZassYga2NSGjeRnUlSNx2J+WZOmkdw5GnJ3D1&#xA;uzlmSZ7OduckYDxSnq8Z2qf8pTscyS5KMwIdirsVSrTP+O5rP+tb/wDJkZrtL/jGb/M/3Lm6j+5x&#xA;/wCd/umPea5eesMv++kRfvHL/jbOS9ocnFqiP5sQP0/pdhoI1j96TZonNedef5zJraRV+GGFRT3Y&#xA;lj+sZ2HYcawX3yP6HmO15XmruDGF6t8824Ydocsf/Co/peiflN5kj0zXoop2422oqtnMx6LMhJt2&#xA;PzBKDJ6afDMx79/x8fvaIS5H4H9H2fc93zYt7sVdirsVdirAfNpJ8yBT0WIkfQEH/Gxzg+3j/hE/&#xA;837ndaL6I/FKJN7qEdwrt9AoP+Ns0sfpPwcyX1D4pq4P6L0b3162p/wOdf7PD/B/+Sn6A4Op/vD/&#xA;AMLTr8y1DeR9VBFRwjP0iVCM6DU/3ZcHRf3sXz1HJJG4eNijjoymh+8ZpiLekX3U7XFzLOwo0rs5&#xA;HuxrkibLGIoU9m/JJ1Pli8T9oXrk/IxRAfqzZaL6D73Sdp/3g9363oWZjrnYq7FWAfnW7L5TtwOj&#xA;3sYb5elKf4Zia36Pi7Hsz+8Pu/U8ZsUL3IQdXV1H0oRmomLoeY+8O7kaFsu8o3don5hQTmqiB54z&#xA;GakNGsLxjj4UXsfv7ZsoEHN8f2OuzRI0/vA++3rej6g2oWU37us5/ckVPEIF2LN82ObIinSl89a9&#xA;R4LaTjxMbz225qaROGG//PTMDJyHxcLJyCCl/wCORbf8xE//ABCHK+jX0ehfkdKI9T1AtUqVi4qo&#xA;qS/7ygp8q5kaYc3I0/V65cCYXllcPRayNF6Y7K6E7t3PJB0zKclMMCHYq7FUq0z/AI7ms/61v/yZ&#xA;Ga7S/wCMZv8AM/3Lm6j+5x/53+6Yl5svIINeuElYhiEYbHoUHhnM9sdn5Z6mUoiwa+4O37PwylhB&#xA;Hn96XyzLHZR3pBNtK7RpIB1Zeo9s1w7I1FWRQ94cmMCZmH8QeYebrhbjX7mRRRaIFr12Rc6js7Ac&#xA;WERPPf73k+1omOokD0r7glscReweRU3gmpI4HaVfhr8jGfvzKiDxE9Px+Pgy7Qrgxd/hj9P4+Lra&#xA;ZY3KvX0pBxenUb1DD3U74ziTuOYdfjkBseRfQP5b+cxrmm/Ub1wdYsVAnNf76P8AYnXx5D7Xv88z&#xA;9PmE4uVE9DzZll7N2KuxV2KsA82A/wCJq0/3Sd/+RecF29/fz/zP9yXdaL6Y/wCd94SeWSNbyIs6&#xA;qPTcbkDclKfqzUQxylA0Cdx+lzuAmQIHQ/oT69geHSPL3NSrPrVuxBFD1cfwztuxsRhpo2KJlbq8&#xA;0wck6/mJ556habyhqyL9o27kUFfs79vlm5zj0Fw9Kayx9753azKmjSKp8Csg/wCNM0lnuemG636v&#xA;TZ3WMnoGD7jxFFO2JJ7kPZPyVjMeg3wqGBuqggMB/dr/ADAZs9D9J97pe1PrHueh5musdirsVYN+&#xA;cVjdXflSP6vE8pgukmkCKWIQRyKWNOgHLrmLrIkw+Ln9myAye8PF9Piu1n9WOCST0gxbipNKjiCf&#xA;AcmGakgnl0IP2u/MCdu9nXkjy9czedWuhaFtPhaWS6uXYDis0cnphQCDuT75sccf3pIH4Lq9TIjA&#xA;OI7nYfDm9Q0TS1tLdo1dlmJWTn02dRQEdDQgjNiS6Yl4p5r8o6nFdNZ26iURXFxKzVA/vWWg+5M1&#xA;mpzQxkRJ35ssfZuXLG41V96VDytrD2UVu6xxNHJJJ8b9RIqD9kN/JmBPtLFHa2/H2DnkP4R8f1Av&#xA;Q/yq8rTaYJLu6mikW5lWELEzhlKxswqSE/m7Zs+z88ckDKLRPRz08jGf2PRLhZvrllAziRfUaXkR&#xA;8QVEI3psficb7ZnMUwwIdirsVSrTP+O5rP8ArW//ACZGa7S/4xm/zP8AcubqP7nH/nf7phX5kwcN&#xA;bhlHSWBfvVmB/CmQ1o9d+Tvew53iI7pJ95V0y11LyZHZ3K1jkaTcdVYOaMPcZkYICWKi67tDPLFq&#xA;zKPMV9zwvzjYNp/mbULJnEhgkC816H4RTKODh2dD2hm8XNKffX3Mn/JmwstUv9a0q+jEtpdWf71D&#xA;1+GRKEHsQWqD45dpxZIcvVC/DH+1R+8pT5q/LrXtC1M26wvdWUhJtrxF+EqN/wB5T7DAda/RkckD&#xA;H3OBDTTnMQiLJTryrrkfk2SOd4/rjz0gaJVBlbkwPCE9RRt6d8xYajgldc3sMfYEPC4b9Y/i6e73&#xA;f2vc435xq/EpyAbiwowqK0I8c3IeZIo0uxQ7FXYq8387TR3WuuCAwt0WJT9HI/i2cd2xrZ+OYxNC&#xA;NPWdkw4cIP8AONsVuLZI5RIopXcHwIzWfnMv84uzu2RzecJ9TGlQXyKr2moW9zJcLsCkZIaq+Pxd&#xA;s3ul7b4qjlG98x+p0eXsrg4pY+sTsmXnb83NE8vSNY26td6ptzjUfBFUVBepWp3rxB+kZ0c8gGzz&#xA;E8gDxDzV5tvNc1iS9jluIhIaBXmLVANF+FQqpt1C7Zizom2I1WQChKQHvKdv5zF7psVpq9u10bO1&#xA;jtdOZZZEEJjTi0pCsvNnoK8vAYDMEbhr/MS3Nn5vTvyRmuW8rXCz1obtzAzndlMaVpXsGBzI049L&#xA;dilKQs7vQ8vbHYq4kAVPTFWBfm/5nGm+W/qNu7C51NjF6kZpxiSjS7j+YELTwJzG1U6jXe7PsrBx&#xA;5OI8o/f0eKXt/BCzjQ/rEIljCShj8bEOH/ZJ2+EZgbdHooiXOVbJz5d8x6vY3pLu8GtQRGCW3nZo&#xA;hcQ0LKpVqL6ik0HLsdt98y8cvhIfa6/U4hIHrCW986P6v0vTvJnn7XNWMsWq6X9V1FI/3ZSqxygn&#xA;7RViWUIeu5+1mVilI/UKdRq9PjhvCXEPuU9Zja21Uyr++48XZ3Wqs9AWqD2Lds0PamKccviVcdvc&#xA;7Hs/JGWLguig9Tv7jUirTLGHTZWRApPsSOuavU5ZZ6sC/IOfp8ccPK697cWpa/DaJaQlooIzVVRF&#xA;B5Vry5U5V+nLYR1sICEYyER3BhP8rKRlIxJ97K/KN5qN5JPLqKkyqipDKwC1WpLCgp3pXN72bmzy&#xA;BGYEVyNVbpu0MWGJBxHn0ZLmzda7FWmdF+0wX5mmKvNPMP5mW2g69q0FpbfXLmRohzZuEalIgOwL&#xA;Nv8AL55qRkOLNkP87h+yLuYaXxcULNVf2l5pfeatdv757y8umnlaoCuSUUHsifZUfLKZzMjZdpgi&#xA;MQqOz0fyr55h0XyHHcXh9e8eWcWkBKxK3ChoW8Kn3OZePOMeKz504OTRT1WoNbAAWXn/AOktF1GS&#xA;TU9QeI3t47TXAc9HYmoC9l8PbMH8wTuS7n+RcMT9HF5l6B+Sx0dLXWLiNUFwbsokoT4vQKKVUNSv&#xA;EsDtmz0e4t0HbOEQnEAUAKTn81NamtvKzCxmRHllUStIDxMagsR06kqBjr5mOPZPYWETz2eg+1Iv&#xA;yx8qNcTReaNdCrPxH6LtDssan/dxB/ab9n7/AApRotMT65fBzO2u0QLw4zt/Ef0freqBgwqDUeIz&#xA;ZvMuxV2KuxVL7vy/o93MZri1V5W+0+6k/PiRmHm7PwZJcUoglysetywFRlstj8taFH9myjP+sC3/&#xA;ABInHH2fghygPv8AvWetzS5yK/8AQGjdRZxAjwQZb+WxfzY/INf5jJ/Ol8ytm8uaHPP689lDLPSn&#xA;quis9B25EVy+mmlaHSdOhFIrdIxSlFHHbw2xVfHp1jHX04VWvWgpiqssUafZUA+IGKrsVdirsVQ1&#xA;zpunXS8bm1imXfaRFYb9eowEXzZRmY8jSjb6Bols/qW1hBA/80UaofvUDERA5BlLLOXMkoj6la/y&#xA;fif65K2tpNOsoxxSIIvWi1A/DAkklx0+yJqYgT4muG0NDTNPBqIFr8sAFJMiuFhZD/dKfdhtCqkM&#xA;SfYRV+QAwKuxV2KtNGj/AGlDfMVxVJbzyT5Uvbl7m60yGWeQ1kkIIJPTehGVywwJshvjqckRQOyw&#xA;eQvJwAA0i228UqfxweDDuC/msv8AOKpN5L8rT28NtNpsD29vyMMTICqFzViB03wywwIogbMsesyw&#xA;JMZEEtR+SfKMX93o9ou1KiCOv38cAwQH8I+SZa7Oec5f6YonT/Lei6cJhZWywLcSGaZUJALkAE0r&#xA;tsOg2yyMRHk1ZM051xG6VL3Q9IvoDb3tqlxASGMcg5LVTUGhwTiJCiLRizTxm4kg+SJFrbjpGP15&#xA;JrVFVVFFAA8BireKuxV2KuxV2KuxV2KuxV2KuxV2KuxVCT6xpFvfw6fPfW8V/cgm3tHlRZpAOpSM&#xA;nk30DFUXirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVa5pzMfIcwAxSu4BqAafRireKuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV8PeedCi8y6/r3ne01+l9Z6nf3FvcxsZmEFpetHahVU809OCN&#xA;XUqD8NNvHGlnMZ1Ts8eijPDx8VEXfzfSP5J/nto35mW1zbC0fTde05Ee8sZGEisjHj6sTgLVeWzA&#xA;qKVHXMl1j1DFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXyJ5x/Ljz1H+a2p6r5R1O7GqjUGWO&#xA;3kmnV5Ynf6wkMcp4Vt0TZ05mir06DMbx/Xw07I6D9z4gPTr+h9dLy4jkAGp8QBqAfY0GZLrW8Vdi&#xA;rsVdirsVdirsVad0RC7sFRRVmY0AA7knFVOC7trjl6EqS8acuDBqVFR0xVVxV2KvIfNd5+c/l2a5&#xA;1C2uINQsTcgQxyFAPRZiQAFjqrUp12zXE5YSJkfT0eihDS5scY44/vOt38aZB5o/NjTNN0VJ7FDP&#xA;qU44xwOrKkTU6uT9oDwU7+2XS1ca25uF/JOSM/V9Pf3vCbW6FnpsthZosEM7mSYIAoqeoUACnL9r&#xA;x/Xq5w4p8R/H46O2gBGPCNgjfJGtQeVfNY8w29nHJcywNZ3bU4vJbu6Oy8h+0GiUgnw8MysWYw9z&#xA;j6jSxyDul3vp7TNSs9T0+C/s5BLbXKCSJx4HsfAjoRm0jIEWHnpwMSQeYROFi16iVA5CrfZFetPD&#xA;FW8VdirsVdirsVdirsVdirsVYN5g/MGXTPMlzp3BY7ayhWe4uJhxiCFeZYyGgAG/fahrkOP1VXxc&#xA;qOnBx8fFv3fGu/8AQzW2lM1vFKQFMiK5ANQOQr1ybisH/M/8xH8twR2GmlW1e5XnyYBlhi6cyDsW&#xA;Y/ZB+n3xtRn4Nhzc7R6TxDcvpDxyXzjrLXI1AXDHWDs+p0VZwtKCNWX9nrmr4pmfES70QgIcAAp6&#xA;D+XH5sahdalDo/mCQTfWSI7W9oFYSHZUk40BDdAaVr1r2z8GpJNSdVq9CAOKHTo9ezOdS7FXYq7F&#xA;Uq8y39xZaeJLduMjyBOXUgEE7V/1clEWUhI9M1LUZ1dpbmRqEACtP1ZIhJR31u6/38//AAR/rkUJ&#xA;X5luNXbR5vqf+kTKVYwyytGjIGHOrUfotSNtyKe+CRIGwZ44gyomgl3k+TV4Z9Q+sTKImaM2yxcl&#xA;IUcieZ79afRXvQRgJb8TbnOOhwX52ylNRvFYH1C1Ox6HJ046cre2bMVWeMsHMdAwrzXqvXqO4yvi&#xA;HezOKQ6Hvbu7S3u7aS2uEEkMq8XQ9xhlEEUUY8koSEo7EPMPNf5RanfenHpd1CYhJy/0gshVaHui&#xA;vy+7MCWiIOxd6e2YziBIb+Txu5REuZUTdFdlU+wNBmGARzcwFPPJ+kRa1fCxuORt4iJm4bEB3SNt&#xA;/pXJY8XFP5fj7WM5iMST3Gve9x0iNNHsI9P04CC0irwjHxbsak1ap3JzdQgIig8zkyGcuI80k/MP&#xA;X9cttEie1IkDXMaXHIAKsbBhyYgrsH45XmyGAsOTotPHLOj3KPlW4luZhdNFJbtCWMIYo1QDRXHE&#xA;sOLj4h38R2y2E+KN00Z8PhzMbumXfpO+/wB+/wDCr/TDTUld/r+sW9zxS4qlA3Eon3fZyQiEgMrs&#xA;bhrmygnYUaVFZgOlSN8gWKvgV2KuxV2KsM/MW18y/UZb7T9SNnp9rEZL1IxWT00DNIVqGBqu242H&#xA;QV3zFzxnzB2dlos+nhEjIN758/7GHfl/+bWn2GnXtjq8s08VjG09pcen8boCq+kQCRyLNsx4rv2y&#xA;ODJwii4et1uLLPiiD+tKbv8AMzTNT1L9KzhLOVxvZGJplYREBFmnpUh+6JHSn7QJyRz2KcbFq4xF&#xA;16um/Jlnkz869M1T1LTVrYafcxoWtzES0UvH9hQd1bwHQ+Iwx1ArdOmJzTEB9Unn3nWK41HV7vWZ&#xA;X9Q3bhYoT1QkhI0B6Gi7ZrcmQzlb2cdH4UABv+tJIfL2qy/7q9MeLkD8NzgtIwTKYJ5VnDI4uFid&#xA;Qp+AE0YdwaqffIxLYdKX0fpEtxLpNlLckNcSQRNMwFAXKAsafPN5A3EF43NERmQOhKLyTW7FXYqk&#xA;PnL/AI5cX/Gdf+INk4c0hJNF/upP9YfqyUklDebfMUegaLLfEB5yRHbRno0jVpX2ABJyjLk4I25O&#xA;k05zTEenV4fqGvaxqN8t5eXUks6sGjJNAhBqOCjZd/DNZKZkd3pMmGOPDIRFek/czzyvpPnDzBHa&#xA;6jp+tJFcq0qCALRV9LiT64TajclpVTk55shnER3Jv4V3ui7PnjGAnJHrz7/d9qcWfnu+ZLzT7y0W&#xA;HWbB/QnaNg8PLcFloTuCp2/HLsmsMRVepzsPZEZyEgf3fPzR/kb8vbO6dNdvpZ5JfUcrV2DTGteU&#xA;hUqCoYniOO3bK9Ph4xxHkz7R1vhHw4fVW5/RXJ6fmwecaZlVSzGiqKk+wxV8uzwQy27XqN8RkCzx&#xA;FacWk5MCpFQVovsf15ojyt6sGjTIfyyuFi81RRMVVLmGaNi5ooonqAknpQxg5fpZVNxtdEnGa5/g&#xA;PVfXQaW+pkqbRXZEZTyL8XKVXtQsPHMo6+McZyTFRH29PtdUdHLxBjH1fd1Y1qeoTXKxsxoj1YQk&#xA;BkChqLUHq1VOcpre1MuQiQPCOg6d3xPN6DSaKGKxzPf1/sUbLUrq1lDh2ZCfjRiSGHfr3yjSdpZc&#xA;MxKyR1B6tmo0WPLEigD3sujdZI1kXdXAZT7EVzvscxOIkORFvIziYkg8wk+r/wC9Y/1R+s5dFAZt&#xA;o3/HJtP+MS/qyo82JRmBXYq7FXYqhdVsE1DS7ywc0S7gkgY+AlQof14CLFIIt8mXOmapY6jcaXNG&#xA;0V2jNDPCdq8DypvQEVUEZriCDTryCDSBwITG/s/0TdwBLlZbuMJJNGoI9GWgYxsTsWQ7NToRhIpm&#xA;CYEEHcPY/OOnWVj5V0aazT/chfSxShXKCoMRkkVeQAHUKP2t6DfLtUAI0Open7P1Mjk4pb0PM/re&#xA;eXmt6l6xVALfgaNGy8iCOta0zWu9OpkeXJ6V+VOjWWs6PcahqkYuZo7poohuqhVjRt1Bod375naX&#xA;DGQsjq6jtDtDNCXDE1s9QAAAAFAOgzYOhdirsVdiqQ+cv+OXF/xnX/iDZOHNIY/pVxBFG4kcKSRS&#xA;vyyRCSgfOOmx6lZwOIBc+g5PAqWoGHXievTMLWQkYinbdj5YRmRI1YYXLp1jbsVezVXT4inpCoJp&#xA;2ptXbNJkzRgfUaL044CNqI+aW30B1OS3s5bEJarIrCeViFjpUcikTAmgPSuCGtwg/X9hcQTlOJBx&#xA;kCPLcb/I7Mi8seU9OtZ7iS91mGc3DK3FPgZiCxNedOvLsMzcUsEz/eR/HvcTNrc0B6cZ/Hue1WQt&#xA;Fto47Tj9XjULGE3AAGwzbAACg8xORkSZcyrYWKC1uf0NGv5609K2mevT7KE5GZqJZ4hcgPN81Jtp&#xA;Uv8AxZPHT/YI9f8AieaTo9R/F8E78g6Na6rq89vex+pZG1nWcHp+8QoBXsfi2y/S4+Kbja3LwQsc&#xA;7ZZPZWflnQG0yK9ij0qFzcR2zufV5UpxXmzM3yrmP2poc048MZR4LvztjpddhMxY4Z1XPb7UJY6t&#xA;DdQxsqLIgQNFz5VAf4gStR9xzQanB4Ijfq5u5MQdweas979ZuIbZpYzKx9OCIFE69goplEcebOQA&#xA;CenLb9TTLLixXZA+O/62YQGK2too3cD01VS3aoGeg6bD4eOMP5oAeSzT45mXeUr1SSOS5DIwZeIF&#xA;Rv45khgGbaTJHHo1tI7BY0hDOxNAAo3J+WVS5sCkGifmFa6v5h/RdvastuyuYblm3YoCa8KbAgbb&#xA;5VHJZprjks0y3LGx2KuxVDX121uqLGoeaU8Ywx4qKAsWY9lUDfHzKQLef+eb3Tr+yngeRbq5MUkR&#xA;uI4kEcSupVijN8bca1+1TNHq+28cTwYxxHv6O1wdjzyRufp+95IfJ9xZzQXDX8UURblDKQyvyVTI&#xA;PgagqAteuU6bXjKSADYao+zs+LecRHv6/L9qb+VPy0v73UZrq6dG02wT15nBqZGFSkfE7/ERufDN&#xA;jpSMkq7ubg6rsuenmBIgg9zJPzo1BH1mx0uKixWFvXgNgrSnpT2RFwa2VyA7ncdmQqBl3lg2qEm5&#xA;QkkkwW+5Nf8AdCZiS5uwx8vifvet/kgw/QN+tdxdVI+ca/0zYaL6T73T9qfWPc9HzNdY7FXYq7FU&#xA;h85f8cuL/jOv/EGycOaQxO0Cm5jDdK/j2yZZK4k1P9J8OJ+rV8Ph408fHAljXmKZzql16Z/dyFFk&#xA;IpuY1ApXrSozje29LkjlMwPRKvsem7JzwOMRJ9Ub+1KQCTQbk9Bmgdy50ILI4IINGU7EEdsJFIBt&#xA;kf5d+ZXsNVTT7mQmzuz6acjskhPw09ids3vY+vMJjHI+mXLyLqO1tCJw44j1R+0PW8655RIvO90k&#xA;XlDWGVhU2sqbUP214f8AG2U5pjgPucjTRPiR9756f4tJipv6c8nP29RE4/f6bZqOj0f8XwZLe60N&#xA;J8iafDp0npXV+z+rKmzgKx9Q1G9akLXwzYwmI4hXMvN9qZJDIQwiKKe6mIU85WBbc7tQVNK9T7Zj&#xA;ylW5dXjjIy9PNcLW+megikdz/ksTQUGSgOLlusozJ3tmn5baPLFrEtzdwcXSE/VudPtEgEgVrXjm&#xA;XgxEGyG7DjINkMyrrVxbXkRrG5jb0mYBQH7AH5ZlzG23NyZDbZiFlqWrQXJieQuw6wTE1b2Unv4Z&#xA;iRySB3caM5AvUrpLnUPy/CWVfVuYI1Ub8uLOA4oO/Gopls/UNm2W42ed+X9eGhahPqLWRnlUehCh&#xA;fgkQ2qOQDcmoKfecx4yo20CVG3sml3v17Tra99MxfWYkl9NtyvMVpXbMkGw5ANhE4UoW+nlURwQG&#xA;lxcEqjHcKoFWensPxwhWLeb7aK301FA5Tm44yTv8UjKVLCrHem+aL2gySGEAHYydv2PEHKSegYTO&#xA;oeWFG3UksR4lRUV+nfOQgaBL0y280ux1D0kvF5JC3qoalaMFIrsd9ids2HZMj43CDQkDfwBLjauf&#xA;DDiAsgj76Zt5b8siR4571SkJBaGDuwUgVf7+mdjotOMMKAq/n8T1P2DkHl9XqDkld3+Onk8t8z3F&#xA;pq2taoYEEctvI5tiP92QxbFT7qq1Htt4ZjZiMkj/ADh9rs9PE44x7j9lpHqRBuEINR6FuNvEQIDm&#xA;LLm5kOXxP3vVvyNdTpuqJ+0s0ZPyKkD9WZ+h5F1Hag9UXpuZzq3Yq7FXYqxj8wppodEieLYi4Tka&#xA;V2KP/HJw5sosGhvbho1Ytue9BljOkSdWvynD1aDxAFfvxpaQdBiqjPIbdfXi+CZCPTkA+IHxB8c0&#xA;3bMIQwGYiBPajW/Pvdn2bKU8oiSeHqOiCs7mKO69a5j+sA1LK/xVJ7mvXOQ0ebHDJxZY8cXotTin&#xA;KHDjPCU8tPMOjlJHjs0jEShmpGq7Vp2r451WDX6SUSYx4eEWfSPd0efzaLUggGV8Rr6iynSry71j&#xA;TjNaWsc9uxaJ3L8WqOoNadjmxxZsWogTE3E7Ouy4Z4J1LaQ3QGrWn6CsJdQvbQR2yUSQ8/UrzIAH&#xA;EV75Rj0WnwHjAr5t/wCZy5/RbHLzzJ5eKGN9Pjm5QrciP0kbklKjY03VWJ9hXLp5sQ5i9r5Jx6fM&#xA;dwa3rm831q7gur+V7aL0LUmsUA6LUCtB2rTMOwdwKDre0pHxOEmzEV+lCJJ6KyTg0eJS0fjzJCqR&#xA;/qluX0YCL2cPFsb7kPoepvpupRXQ3jB4zL4oftD+OZGOfCbZQlwm3rVvKvwT27DcBo5F7gjYg+4z&#xA;Z83YI2TVr6RODSbd6ACv3Y0tJDcLqMt5SWM3PNqQKvp03PSjK2Ys4TvvcacZW9PsLkvoUNjcS+jM&#xA;0HF5KH4GZCP2e4rXY9csokNlbJNof5a2r3KXmo3q30MZpHbRLwj+E9Gr2/yQMpGLfdqGPvZ+AFAV&#xA;RQDYAdAMtbXYqgGWSTVpGjbi0EKBQRUH1GYsD3/YGHoljPnuct6EZUo4oXU7j9rjQ9++aD2iH7mJ&#xA;/pfoLuOxf7w/1f0hhcn+9EP+y/VnJR+kvSImPYOeu1PvOZejPDHJKrqNfMgfdbi6gcUoR8/uB/S9&#xA;C1S8n0/SIQF4zKFjikG67oQT7HvT9eehVbxw5vB4fTstbHqt6863BWQCoUAvxaviSK7dPn0zTxqG&#xA;Tfc29DK549thSn5k09NP1eSzQUEMcIb/AFjCjMf+CJyrLHhlTbgnxQB7/wBb0b8ipKxazHT7LW7V&#xA;/wBYSD/jXMzQ9XW9qDePx/Q9UzPdS7FXYq7FUs8yWcN5ol5BIKt6TPEO/NBySn+yGGPNIYHZ6Hbn&#xA;yqdUMrC5DmkVRxK8wlQKcvxy296Z3unen+UNKuLG3uJbqRJJY1dlBWgLCvhkTIoMlf8AwVov/LZL&#xA;/wAL/wA04OMo4mN+edG03R9OgniuHcSS8GLlaD4SR0A3zR9vCc8QjEX6v0O47GkBkJPcxTSXs7/U&#xA;7WyWZa3Eqx9QNid+tB0zmsGiySyRBj1Dv9RqYQgTfRHeZNLTQNQ1K0VhLCbcXFuVNf3TTBVDH+YF&#xA;aZuR2ZLGcsb9Jjt/pg66OuGUY5dRLf8A0pTP8qvOeg2purG+uHs5pnUx+vRbc8RSqydmPflQeBzL&#xA;7LxRwAgy+p1/aWSeee0DUeveyzzZ5h0O5spdP9FNQJIqGFYQynY1BHKnttmL2n27igDCHqn9g/W1&#xA;6TRTsSPpH2sHFnpEF/b3d1BG8UaIhib4VZePHh1HUGmYOftTJCeMcPF+7gT53HydjiHFjlEc+I7/&#xA;ABYRqeh6nNfXE8cMYSWR3VIiqooLEhVXYAAdM2+DNcATsadLn7F1UpGQF35j9LIvKXkmym0zWm8x&#xA;SGwhS3DLL8LFVA586Ctd6EDqaZssUKgSerhYtLPiMCPVdJBaaPpFq0MdpGdV1C4/3miADcj48RUK&#xA;PnXMDilI0HqsHZWn08eKfqPeeXyew6N5LhbS7ZtVuPR1Ap/pEUBUxq3YKSvh1983MJSoXzeezSjx&#xA;ng+noo+YPLen6dYLcW1w8rmQKVbjShB8APDLIytrBUtZ0C101tKuLeV5ZpZkWVSVKgmh2Cio+/ES&#xA;tbTTArItCXjpcR7sWY/SxyBYlH4EOxVAOsi6sQr+mLiFfipUkxMagV2G0g7YeiWOedoLCKzur64n&#xA;+rwafGjyufjZy5YU3NS3Sm+a/tPSePi4bqjbn9m5jDLsLvZ5LH560uWVC0M6leWwCnYj/WGcxLsm&#xA;YGxBestO9H8w6TqF3HapIyPKCfjU/Dx3NaV7VO2X6Xs8xExMjhMfP+Eg93cC4etkYiMh0P37M68y&#xA;a/pNzZ+laSvPccg/rsh4igI40bgRX/JGbPL7Q4Ii4XKvKh9te/4OgxaCd+rZ5pp2haxc63EZ7f6y&#xA;qzK8lyopx+Ko5GnQnbcewOW6fIMuSrEiDu7LUgY8dg8xsu/MPSdRXzbqDrbSmHlGEl4NxYCJRUGm&#xA;/TK9Tkj4pjfq7k6HfEKZh+Smn6lajU5bi2eK2uVhMMrqQHMZkB4nvTlvmZoQdz0cLtUiwOo/Y9Qz&#xA;PdQ7FXYq7FVrRxv9pQ3zFcVU2s7VlKmJSpFCtNqfLG1d9Ttv99j8cNq76nbfyD7zjapZ5h8paNrt&#xA;gbO8jIAPKKZCQ8bUpyXt9ByrLjExRbsOeWOVh4/qf5Q+b7a/K2dut7DEwaC7jljiPWoPF3VlYf5n&#xA;NedNkidnaS1Onygcf6f0Mv0/ydr+rQB/M9mUuwi2jypLHWS3UmQEiNmHLmevfMzHjMgePnycTLnj&#xA;Ajwjtz+PJX/5VJ5c/wB8T/8AI04PyeNf5Ry+ScWnk7TbWCOFLQssYCqXZmNB075jHsbSkmRhZPmf&#xA;1sJa7KerGPMn5Z65rE7Nb3Mdrbq4MMDxkkcWNGDhvA+GXT0ULuNDYD4BzNJ2mMUaIve7Qb/ln59A&#xA;Pp3dg/8AKXEi1+dA1MrOiPe5w7ch1BZtrXlW+v8AQZrC3kiguZI0USOCyEpTZgBuuZmXHxQ4XS6b&#xA;VDHl4yL5/a15S/LvQ/LdrSEGe+cUuL1gAzHqQoH2Fr+yPprjixCHJGq1k8x32HcyH6hb+B+/LbcR&#xA;ptOtGFGXkOtDuNt8bW131G17pX5k42ql+iNO/wB8/wDDN/XG02iooo4o1jjXiiiiqOwwIXYq7FUD&#xA;rKzLZNcW6F7u2BltlH7TgH4D7P0OLKNXu8D8z6H+aXmO+e51KyYhm5R2ySRLElBQcU5+Hc75hTxZ&#xA;Zcw9Dp9RpcQqJ+w/qSY+Q/NdqQJNMmZ2H+6x6gHtVOWUzwTHRzIa7Cf4gyLyT5H139O2tzfWslrZ&#xA;xMTIzfC5BUiig18e4yeHTSJs7Bxddr8fhmMTxEs6ufLbRllV2XeqEozq30oCV+kZp9V7NWD4Uqs3&#xA;R+zfy36OBi7R/nBdZWuqWPxRxNzdlfkF5brXjsRtuSd8ong1GjB8OJllyVcoiwO/pzJv4MvEx5SO&#xA;I1GPRqSx1CZi8kMjs5qxZSST71zSnQauUuIwnxHrRcsajHHYSDL/ACyjwacsEqMknJjQjsc7PsTT&#xA;zxacRmKlZdPrJiWSwm+bZxHYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq0UQ9VH3Yq700/lH3Yq700/lH3Yq7gn8o+7FWwAOgxV2KuxV2Kv/2Q=="/>
    </rdf:Alt>
   </xmp:Thumbnails>
   <xmpMM:DerivedFrom
    stRef:instanceID="xmp.iid:48d5ac62-9e87-e146-a068-611040794b0e"
    stRef:documentID="xmp.did:48d5ac62-9e87-e146-a068-611040794b0e"
    stRef:originalDocumentID="uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7"
    stRef:renditionClass="proof:pdf"/>
   <xmpMM:History>
    <rdf:Seq>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:70f8aa99-76da-7d40-aa1a-1c7a0e09fb88"
      stEvt:when="2021-11-02T18:45:28+03:00"
      stEvt:softwareAgent="Adobe Illustrator 24.2 (Windows)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:48d5ac62-9e87-e146-a068-611040794b0e"
      stEvt:when="2022-04-15T14:25:05+03:00"
      stEvt:softwareAgent="Adobe Illustrator 24.2 (Windows)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:62f2e64a-d6ea-f044-b6da-5d81530e4b6e"
      stEvt:when="2022-04-15T14:25:08+03:00"
      stEvt:softwareAgent="Adobe Illustrator 24.2 (Windows)"
      stEvt:changed="/"/>
    </rdf:Seq>
   </xmpMM:History>
   <xmpTPg:MaxPageSize
    stDim:w="580.949285"
    stDim:h="400.000000"
    stDim:unit="Pixels"/>
   <xmpTPg:PlateNames>
    <rdf:Seq>
     <rdf:li>Cyan</rdf:li>
     <rdf:li>Magenta</rdf:li>
     <rdf:li>Yellow</rdf:li>
     <rdf:li>Black</rdf:li>
    </rdf:Seq>
   </xmpTPg:PlateNames>
   <xmpTPg:SwatchGroups>
    <rdf:Seq>
     <rdf:li
      xmpG:groupName="Default Swatch Group"
      xmpG:groupType="0"/>
    </rdf:Seq>
   </xmpTPg:SwatchGroups>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                 
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1  -1  scale 0 -400 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 400 li
580.949 400 li
580.949 0 li
cp
clp
580.949 400 mo
0 400 li
0 0 li
580.949 0 li
580.949 400 li
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
475.66 382.336 mo
440.139 382.336 411.343 380.35 411.343 377.901 cv
411.343 375.453 440.139 373.468 475.66 373.468 cv
511.181 373.468 539.977 375.453 539.977 377.901 cv
539.977 380.35 511.181 382.336 475.66 382.336 cv
.92549 .913725 .933333 rgb
f
494.163 260.447 mo
494.163 260.447 485.983 271.656 481.543 272.236 cv
477.104 272.816 486.986 280.316 486.986 280.316 cv
486.986 280.316 506.532 277.107 507.401 263.795 cv
508.27 250.483 494.163 260.447 494.163 260.447 cv
cp
.976471 .521569 .458824 rgb
f
530.923 354.77 mo
530.923 369.27 li
518.044 369.27 li
517.753 355.686 li
530.923 354.77 li
cp
f
502.39 355.225 mo
496.361 369.271 li
484.526 364.192 li
489.906 350.918 li
502.39 355.225 li
cp
f
502.988 279.153 mo
484.599 352.053 li
484.599 352.053 503.32 360.653 504.212 360.437 cv
505.104 360.221 512.47 325.249 512.47 325.249 cv
512.47 325.249 512.906 360.253 512.83 360.437 cv
512.754 360.62 534.55 360.724 535.896 360.082 cv
537.242 359.439 532.892 280.657 532.892 280.657 cv
502.988 279.153 li
cp
.709804 .415686 .301961 rgb
f
546.962 264.653 mo
546.962 264.653 542.833 249.054 534.039 242.951 cv
525.244 236.849 509.97 238.688 505.863 241.963 cv
497.548 248.595 493.104 260.816 493.104 260.816 cv
503.13 266.313 li
501.701 279.736 li
533.56 281.801 li
533.5 264.998 li
546.962 264.653 li
cp
.658824 .368627 .278431 rgb
f
494.253 375.526 mo
495.164 375.778 496.128 375.227 496.446 374.269 cv
497.704 370.481 500.986 362.147 500.296 361.918 cv
499.414 361.626 489.766 361.104 489.766 361.104 cv
489.766 361.104 491.254 355.773 487.291 355.504 cv
484.249 355.297 479.896 357.557 478.034 358.62 cv
477.443 358.957 476.785 359.11 476.128 359.061 cv
473.302 358.847 465.411 358.605 464.03 362.424 cv
462.342 367.091 464.409 367.179 465.29 367.472 cv
466.047 367.723 488.04 373.809 494.253 375.526 cv
cp
.929412 .701961 .141176 rgb
f
530.114 377.614 mo
531.059 377.574 531.807 376.753 531.816 375.743 cv
531.853 371.754 532.424 362.814 531.696 362.809 cv
530.768 362.8 521.423 365.261 521.423 365.261 cv
521.423 365.261 521.206 359.729 517.351 360.688 cv
514.393 361.423 510.94 364.908 509.494 366.49 cv
509.035 366.992 508.456 367.34 507.814 367.494 cv
505.059 368.156 497.475 370.345 497.33 374.402 cv
497.153 379.362 499.147 378.813 500.076 378.821 cv
500.874 378.828 523.673 377.882 530.114 377.614 cv
cp
.968627 .772549 .215686 rgb
f
512.704 226.685 mo
512.704 226.685 508.489 222.11 510.002 220.09 cv
511.516 218.068 514.171 219.819 514.171 219.819 cv
514.171 219.819 514.164 217.545 516.704 217.615 cv
519.244 217.686 520.939 220.277 520.939 220.277 cv
520.939 220.277 523.017 217.911 524.682 220.035 cv
526.347 222.159 525.528 225.854 525.528 225.854 cv
525.528 225.854 527.267 225.479 526.932 227.57 cv
526.598 229.66 523.976 231.963 523.976 231.963 cv
512.704 226.685 li
cp
0 0 0 rgb
f
521.611 233.828 mo
521.685 239.282 li
521.685 239.282 520.723 240.863 517.535 241.166 cv
515.161 241.391 514.428 239.836 514.428 239.836 cv
514.612 238.098 li
514.903 235.4 li
520.647 234.055 li
521.611 233.828 li
cp
.976471 .521569 .458824 rgb
f
521.592 233.56 mo
521.59 233.709 521.547 233.889 521.475 234.097 cv
520.471 236.908 515.936 238.213 514.576 238.442 cv
514.837 235.731 li
521.592 233.56 li
cp
0 0 0 rgb
f
512.961 223.432 mo
512.961 223.432 510.642 230.473 512.063 234.173 cv
513.485 237.873 516.891 236.949 518.894 236.021 cv
520.896 235.091 521.738 233.73 521.738 233.73 cv
521.738 233.73 523.734 234.205 524.86 232.284 cv
525.985 230.363 524.994 228.371 523.845 228.002 cv
522.695 227.632 521.456 228.553 521.456 228.553 cv
522.302 226.49 li
522.302 226.49 517.03 216.908 512.961 223.432 cv
cp
.976471 .521569 .458824 rgb
f
521.87 231.507 mo
521.679 231.418 li
521.59 231.313 521.604 231.155 521.709 231.065 cv
524.021 229.111 li
524.127 229.022 524.284 229.036 524.374 229.142 cv
524.463 229.247 524.449 229.404 524.344 229.494 cv
522.031 231.448 li
521.87 231.507 li
cp
0 0 0 rgb
f
524.101 231.302 mo
522.412 231.009 li
522.275 230.985 522.185 230.855 522.209 230.72 cv
522.233 230.583 522.354 230.488 522.498 230.517 cv
524.144 230.806 li
524.28 230.829 524.371 230.959 524.347 231.095 cv
524.325 231.217 524.22 231.302 524.101 231.302 cv
cp
f
517.602 226.273 mo
517.505 226.273 517.413 226.217 517.372 226.122 cv
516.938 225.116 515.479 225.587 515.418 225.609 cv
515.288 225.653 515.146 225.582 515.102 225.451 cv
515.059 225.32 515.128 225.179 515.259 225.135 cv
515.935 224.908 517.339 224.781 517.831 225.925 cv
517.886 226.051 517.827 226.198 517.7 226.253 cv
517.602 226.273 li
cp
f
512.43 226.134 mo
512.25 226.058 li
512.154 225.958 512.156 225.8 512.256 225.704 cv
512.484 225.484 513.091 224.898 513.398 225.206 cv
513.497 225.304 513.497 225.462 513.4 225.56 cv
513.166 225.627 li
513.113 225.647 512.948 225.73 512.604 226.063 cv
512.43 226.134 li
cp
f
513.75 231.235 mo
513.562 231.149 li
512.604 230.049 514.183 228.108 514.25 228.026 cv
514.338 227.921 514.495 227.904 514.603 227.992 cv
514.709 228.08 514.724 228.238 514.637 228.345 cv
514.251 228.813 513.374 230.172 513.938 230.821 cv
514.029 230.926 514.019 231.083 513.914 231.174 cv
513.75 231.235 li
cp
f
512.658 228.745 mo
512.476 228.715 512.387 228.584 512.413 228.448 cv
512.656 227.174 li
512.682 227.038 512.813 226.942 512.948 226.976 cv
513.084 227.001 513.173 227.132 513.146 227.268 cv
512.903 228.542 li
512.881 228.662 512.776 228.745 512.658 228.745 cv
cp
f
516.105 228.542 mo
515.923 228.512 515.834 228.381 515.86 228.245 cv
516.103 226.972 li
516.128 226.836 516.262 226.742 516.395 226.773 cv
516.53 226.799 516.619 226.93 516.593 227.065 cv
516.351 228.339 li
516.328 228.459 516.224 228.542 516.105 228.542 cv
cp
f
512.509 225.013 mo
512.509 225.013 513.014 223.873 514.37 223.758 cv
515.726 223.643 516.593 224.535 516.593 224.535 cv
516.593 224.535 516.177 226.866 518.116 227.936 cv
520.056 229.005 521.456 228.553 521.456 228.553 cv
522.757 227.972 li
523.585 225.939 li
519.388 222.071 li
514.171 219.819 li
511.8 222.337 li
512.509 225.013 li
cp
f
503.13 266.563 mo
502.963 266.545 502.865 266.421 502.882 266.284 cv
503.717 259.325 li
503.732 259.188 503.86 259.091 503.994 259.106 cv
504.132 259.123 504.229 259.247 504.213 259.384 cv
503.378 266.343 li
503.363 266.471 503.255 266.563 503.13 266.563 cv
cp
1 .65098 .231373 rgb
f
531.411 265.461 mo
531.289 265.461 531.183 265.372 531.164 265.249 cv
530.187 258.831 li
530.166 258.694 530.26 258.566 530.396 258.546 cv
530.538 258.522 530.66 258.619 530.681 258.755 cv
531.658 265.173 li
531.679 265.31 531.585 265.438 531.449 265.458 cv
531.411 265.461 li
cp
f
521.685 239.282 mo
521.685 239.282 518.427 242.361 516.359 243.978 cv
514.318 238.878 li
518.826 238.098 li
521.685 239.282 li
cp
.976471 .521569 .458824 rgb
f
511.154 246.97 mo
511.052 246.97 510.956 246.906 510.919 246.805 cv
510.872 246.675 510.939 246.531 511.069 246.484 cv
517.399 244.21 521.448 239.178 521.488 239.127 cv
521.575 239.019 521.733 239 521.84 239.087 cv
521.948 239.172 521.966 239.329 521.881 239.438 cv
521.84 239.489 517.707 244.631 511.239 246.955 cv
511.154 246.97 li
cp
1 .65098 .231373 rgb
f
516.359 244.228 mo
516.148 244.111 li
515.121 242.49 514.12 239.092 514.078 238.948 cv
514.04 238.815 514.115 238.677 514.248 238.638 cv
514.38 238.598 514.52 238.674 514.559 238.808 cv
514.568 238.843 515.581 242.282 516.57 243.844 cv
516.645 243.96 516.609 244.115 516.493 244.188 cv
516.359 244.228 li
cp
f
545.973 264.679 mo
545.973 264.679 548.757 275.258 539.064 276.694 cv
529.372 278.13 517.27 277.05 517.27 277.05 cv
516.42 268.068 li
533.437 264.679 li
545.973 264.679 li
cp
.976471 .521569 .458824 rgb
f
512.47 325.5 mo
512.331 325.5 512.22 325.388 512.22 325.249 cv
512.308 292.098 li
503.951 286.608 li
503.836 286.532 503.804 286.378 503.88 286.262 cv
503.956 286.148 504.109 286.116 504.227 286.19 cv
512.695 291.754 li
512.808 291.964 li
512.72 325.251 li
512.72 325.389 512.607 325.5 512.47 325.5 cv
cp
1 1 1 rgb
f
514.182 233.074 mo
514.365 233.207 514.604 233.345 514.847 233.387 cv
515.006 233.413 515.389 233.068 515.727 232.627 cv
514.182 233.074 li
cp
514.857 233.888 mo
514.762 233.879 li
514.094 233.764 513.51 233.162 513.484 233.136 cv
513.424 232.898 li
513.596 232.723 li
516.255 231.954 li
516.351 231.924 516.46 231.96 516.522 232.042 cv
516.538 232.323 li
516.311 232.701 515.542 233.888 514.857 233.888 cv
cp
0 0 0 rgb
f
428.882 310.665 mo
428.808 310.663 li
428.251 310.623 427.831 310.139 427.871 309.581 cv
427.885 309.387 428.237 304.785 430.632 301.822 cv
433.825 297.87 446.408 294.656 447.832 294.304 cv
448.373 294.17 448.925 294.499 449.059 295.042 cv
449.193 295.585 448.863 296.134 448.32 296.269 cv
444.633 297.185 434.55 300.195 432.207 303.096 cv
430.217 305.558 429.894 309.685 429.891 309.727 cv
429.852 310.259 429.407 310.665 428.882 310.665 cv
cp
.780392 .745098 .8 rgb
f
428.389 310.666 mo
417.131 310.666 407.972 325.564 407.972 343.877 cv
407.972 362.189 417.131 377.088 428.389 377.088 cv
439.646 377.088 448.805 362.189 448.805 343.877 cv
448.805 325.564 439.646 310.666 428.389 310.666 cv
cp
428.389 379.113 mo
416.014 379.113 405.946 363.307 405.946 343.877 cv
405.946 324.447 416.014 308.641 428.389 308.641 cv
440.763 308.641 450.83 324.447 450.83 343.877 cv
450.83 363.307 440.763 379.113 428.389 379.113 cv
cp
f
429.385 343.292 mo
429.27 343.292 429.167 343.217 429.134 343.105 cv
419.858 312.38 li
419.816 312.241 419.895 312.095 420.033 312.053 cv
420.172 312.01 420.319 312.089 420.36 312.228 cv
429.331 341.943 li
435.308 311.576 li
435.336 311.435 435.466 311.341 435.616 311.369 cv
435.759 311.397 435.851 311.535 435.823 311.678 cv
429.643 343.08 li
429.619 343.198 429.519 343.285 429.397 343.291 cv
429.385 343.292 li
cp
f
435.565 376.53 mo
435.442 376.53 435.333 376.443 435.308 376.318 cv
429.331 345.952 li
420.36 375.667 li
420.318 375.806 420.171 375.883 420.033 375.842 cv
419.895 375.8 419.816 375.653 419.858 375.515 cv
429.134 344.79 li
429.168 344.675 429.285 344.586 429.397 344.604 cv
429.519 344.61 429.619 344.697 429.643 344.815 cv
435.823 376.217 li
435.851 376.359 435.759 376.497 435.616 376.525 cv
435.565 376.53 li
cp
f
448.803 354.563 mo
448.675 354.529 li
430.021 344.106 li
429.887 343.891 li
429.997 343.662 li
448.123 330.914 li
448.24 330.831 448.403 330.858 448.489 330.978 cv
448.572 331.097 448.544 331.26 448.426 331.344 cv
430.641 343.852 li
448.931 354.07 li
449.058 354.142 449.103 354.302 449.032 354.428 cv
448.983 354.514 448.895 354.563 448.803 354.563 cv
cp
f
408.944 354.563 mo
408.853 354.563 408.764 354.514 408.715 354.428 cv
408.645 354.302 408.689 354.142 408.816 354.07 cv
427.107 343.852 li
409.321 331.344 li
409.203 331.26 409.175 331.097 409.258 330.978 cv
409.342 330.859 409.508 330.832 409.624 330.914 cv
427.751 343.662 li
427.861 343.891 li
427.728 344.106 li
409.072 354.529 li
408.944 354.563 li
cp
f
425.239 343.029 mo
425.239 348.077 427.096 352.17 429.385 352.17 cv
431.675 352.17 433.53 348.077 433.53 343.029 cv
433.53 337.98 431.675 333.888 429.385 333.888 cv
427.096 333.888 425.239 337.98 425.239 343.029 cv
cp
f
465.994 377.854 mo
465.839 377.843 li
465.286 377.758 464.907 377.24 464.992 376.688 cv
473.192 323.404 li
473.277 322.853 473.782 322.472 474.348 322.558 cv
474.9 322.643 475.279 323.16 475.194 323.713 cv
466.994 376.996 li
466.917 377.496 466.485 377.854 465.994 377.854 cv
cp
.827451 .796078 .847059 rgb
f
422.159 378.197 mo
422.004 378.186 li
421.451 378.101 421.072 377.583 421.157 377.03 cv
429.356 323.747 li
429.441 323.195 429.948 322.815 430.512 322.9 cv
431.064 322.985 431.443 323.503 431.358 324.056 cv
423.159 377.339 li
423.082 377.839 422.65 378.197 422.159 378.197 cv
cp
f
447.109 293.481 mo
490.461 293.481 li
491.382 293.481 492.129 292.734 492.129 291.813 cv
492.129 276.696 li
492.129 275.775 491.382 275.028 490.461 275.028 cv
447.109 275.028 li
446.188 275.028 445.442 275.775 445.442 276.696 cv
445.442 291.813 li
445.442 292.734 446.188 293.481 447.109 293.481 cv
cp
.729412 .698039 .74902 rgb
f
488.747 310.782 mo
488.188 310.782 487.734 310.329 487.734 309.77 cv
487.734 289.906 li
487.734 289.347 488.188 288.894 488.747 288.894 cv
489.307 288.894 489.76 289.347 489.76 289.906 cv
489.76 309.77 li
489.76 310.329 489.307 310.782 488.747 310.782 cv
cp
.780392 .745098 .8 rgb
f
448.813 310.782 mo
448.254 310.782 447.801 310.329 447.801 309.77 cv
447.801 289.906 li
447.801 289.347 448.254 288.894 448.813 288.894 cv
449.373 288.894 449.826 289.347 449.826 289.906 cv
449.826 309.77 li
449.826 310.329 449.373 310.782 448.813 310.782 cv
cp
f
417.459 379.518 mo
465.983 379.518 li
467.392 379.518 468.534 378.376 468.534 376.967 cv
468.534 374.717 li
468.534 373.309 467.392 372.166 465.983 372.166 cv
417.459 372.166 li
416.051 372.166 414.908 373.309 414.908 374.717 cv
414.908 376.967 li
414.908 378.376 416.051 379.518 417.459 379.518 cv
cp
.827451 .796078 .847059 rgb
f
488.729 311.288 mo
475.153 323.194 li
474.887 323.428 474.546 323.557 474.193 323.559 cv
444.963 323.691 li
443.586 323.698 442.96 321.974 444.021 321.097 cv
458.57 309.056 li
458.833 308.839 459.164 308.72 459.505 308.72 cv
487.763 308.72 li
489.115 308.72 489.746 310.396 488.729 311.288 cv
cp
.729412 .698039 .74902 rgb
f
446.938 272.834 mo
442.645 263.376 li
433.781 265.913 li
433.781 265.913 434.122 286.213 443.431 288.459 cv
452.029 290.533 455.591 285.584 455.591 285.584 cv
446.938 272.834 li
cp
.976471 .521569 .458824 rgb
f
442.267 259.67 mo
442.267 259.67 440.751 256.245 438.515 254.991 cv
436.277 253.736 433.804 253.131 434.487 254.506 cv
435.17 255.881 436.965 257.993 436.965 257.993 cv
433.309 257.754 li
433.309 257.754 430.836 257.149 429.104 257.036 cv
427.371 256.923 427.093 258.234 427.093 258.234 cv
427.093 258.234 425.36 258.121 424.74 258.746 cv
424.119 259.37 424.831 260.304 424.831 260.304 cv
424.831 260.304 422.479 260.814 423.725 262.448 cv
424.971 264.081 430.244 266.199 432.717 266.805 cv
435.19 267.409 440.43 267.087 440.43 267.087 cv
440.43 267.087 445.211 267.184 442.267 259.67 cv
cp
f
429.681 263.019 mo
429.487 262.927 li
429.399 262.82 429.415 262.663 429.522 262.575 cv
434.91 258.154 li
435.016 258.066 435.174 258.083 435.262 258.189 cv
435.35 258.296 435.334 258.453 435.227 258.541 cv
429.839 262.962 li
429.681 263.019 li
cp
0 0 0 rgb
f
441.793 262.651 mo
439.715 262.529 438.277 261.937 437.507 260.892 cv
436.658 259.74 436.954 258.481 436.967 258.429 cv
437 258.295 437.139 258.214 437.269 258.246 cv
437.402 258.278 437.485 258.413 437.453 258.547 cv
437.45 258.558 437.202 259.643 437.914 260.601 cv
438.594 261.518 439.904 262.039 441.808 262.151 cv
441.945 262.16 442.051 262.278 442.043 262.416 cv
442.035 262.549 441.925 262.651 441.793 262.651 cv
cp
f
451.988 352.564 mo
451.988 364.119 li
460.787 367.447 li
466.331 361.23 li
467.242 350.543 li
451.988 352.564 li
cp
.976471 .521569 .458824 rgb
f
435.521 350.17 mo
435.521 361.724 li
444.896 365.053 li
450.803 358.835 li
451.774 348.147 li
435.521 350.17 li
cp
f
453.16 371.427 mo
453.16 371.427 452.782 354.421 450.14 354.775 cv
447.497 355.13 444.854 357.609 444.854 357.609 cv
444.854 357.609 438.814 354.421 436.172 356.192 cv
433.529 357.964 432.011 361.861 432.011 361.861 cv
417.297 371.427 li
417.297 371.427 415.517 374.262 416.029 375.679 cv
416.429 376.784 438.809 376.165 448.626 375.839 cv
451.158 375.755 453.16 373.805 453.16 371.427 cv
cp
.678431 .294118 .266667 rgb
f
454.706 296.632 mo
454.706 296.632 432.295 307.906 429.543 312.487 cv
426.791 317.068 429.822 354.395 429.822 354.395 cv
449.694 354.659 li
452.446 333.8 li
467.551 298.663 li
454.706 296.632 li
cp
1 .65098 .231373 rgb
f
480.392 297.145 mo
480.392 297.145 480.828 308.709 480.505 311.996 cv
480.182 315.283 471.827 323.34 471.827 323.34 cv
471.314 355.402 li
448.338 356.43 li
448.338 356.43 447.838 319.79 448.221 316.339 cv
448.604 312.889 463.892 300.339 463.892 300.339 cv
480.392 297.145 li
cp
f
446.124 367.447 mo
446.124 367.447 449.813 358.419 452.195 356.859 cv
454.578 355.301 460.537 360.249 460.537 360.249 cv
460.537 360.249 465.528 354.994 466.756 357.751 cv
467.983 360.508 468.578 370.379 467.648 372.558 cv
466.719 374.736 459.872 378.364 450.878 378.34 cv
446.64 378.328 440.528 377.02 440.524 375.563 cv
440.519 373.273 444.679 368.956 446.124 367.447 cv
cp
.737255 .341176 .290196 rgb
f
447.325 353.756 mo
447.189 353.756 447.079 353.648 447.075 353.512 cv
447.04 352.115 446.229 319.247 447.081 315.221 cv
447.622 312.662 453.55 306.653 454.96 305.252 cv
449.65 303.457 li
449.52 303.412 449.449 303.271 449.493 303.14 cv
449.539 303.009 449.682 302.94 449.811 302.982 cv
455.505 304.908 li
455.669 305.09 li
455.6 305.324 li
455.524 305.397 448.141 312.627 447.569 315.324 cv
446.731 319.294 447.566 353.158 447.575 353.5 cv
447.578 353.638 447.47 353.752 447.331 353.756 cv
447.325 353.756 li
cp
f
468.903 320.835 mo
468.73 320.835 468.55 320.864 468.358 320.922 cv
467.998 321.03 467.806 321.18 467.785 321.365 cv
467.701 322.132 469.766 323.643 471.339 324.582 cv
471.188 323.675 470.756 321.781 469.724 321.089 cv
469.47 320.92 469.199 320.835 468.903 320.835 cv
cp
471.658 325.307 mo
471.536 325.274 li
470.799 324.86 467.133 322.723 467.288 321.311 cv
467.332 320.907 467.644 320.615 468.214 320.443 cv
468.876 320.243 469.476 320.321 470.002 320.674 cv
471.571 321.726 471.895 324.898 471.907 325.032 cv
471.916 325.125 471.873 325.215 471.795 325.267 cv
471.658 325.307 li
cp
f
463.454 261.557 mo
463.454 261.557 456.662 261.979 453.292 266.237 cv
452.488 267.253 451.171 297.736 451.391 298.123 cv
451.61 298.51 457.581 301.498 468.175 301.646 cv
478.769 301.795 481.045 300.382 481.417 299.812 cv
481.789 299.24 482.694 267.896 480.217 265.205 cv
477.74 262.515 469.863 260.997 463.454 261.557 cv
cp
.313726 .470588 .286275 rgb
f
468.668 327.122 mo
468.093 327.113 467.646 326.652 467.655 326.094 cv
467.686 324.21 468.041 307.58 471.312 303.667 cv
474.564 299.777 487.082 296.521 488.499 296.163 cv
489.042 296.025 489.592 296.354 489.729 296.896 cv
489.866 297.438 489.538 297.989 488.995 298.126 cv
485.322 299.057 475.264 302.098 472.865 304.966 cv
470.483 307.816 469.759 321.206 469.681 326.125 cv
469.672 326.679 469.22 327.122 468.668 327.122 cv
cp
.780392 .745098 .8 rgb
f
486.986 310.666 mo
475.729 310.666 466.57 325.564 466.57 343.877 cv
466.57 362.189 475.729 377.088 486.986 377.088 cv
498.244 377.088 507.402 362.189 507.402 343.877 cv
507.402 325.564 498.244 310.666 486.986 310.666 cv
cp
486.986 379.113 mo
474.612 379.113 464.545 363.307 464.545 343.877 cv
464.545 324.447 474.612 308.641 486.986 308.641 cv
499.36 308.641 509.428 324.447 509.428 343.877 cv
509.428 363.307 499.36 379.113 486.986 379.113 cv
cp
f
487.983 343.292 mo
487.868 343.292 487.766 343.217 487.732 343.105 cv
478.456 312.38 li
478.414 312.241 478.492 312.095 478.631 312.053 cv
478.77 312.01 478.916 312.089 478.958 312.228 cv
487.93 341.943 li
493.905 311.576 li
493.934 311.435 494.064 311.341 494.214 311.369 cv
494.356 311.397 494.448 311.535 494.421 311.678 cv
488.241 343.08 li
488.218 343.198 488.117 343.285 487.996 343.291 cv
487.983 343.292 li
cp
f
494.163 376.53 mo
494.04 376.53 493.931 376.443 493.905 376.318 cv
487.93 345.952 li
478.958 375.667 li
478.916 375.806 478.768 375.883 478.631 375.842 cv
478.492 375.8 478.414 375.653 478.456 375.515 cv
487.732 344.79 li
487.767 344.675 487.888 344.586 487.996 344.604 cv
488.117 344.61 488.218 344.697 488.241 344.815 cv
494.421 376.217 li
494.448 376.359 494.356 376.497 494.214 376.525 cv
494.163 376.53 li
cp
f
507.401 354.563 mo
507.273 354.529 li
488.619 344.106 li
488.485 343.891 li
488.596 343.662 li
506.722 330.914 li
506.838 330.831 507.003 330.858 507.088 330.978 cv
507.171 331.097 507.143 331.26 507.024 331.344 cv
489.239 343.852 li
507.529 354.07 li
507.656 354.142 507.701 354.302 507.631 354.428 cv
507.582 354.514 507.493 354.563 507.401 354.563 cv
cp
f
467.543 354.563 mo
467.451 354.563 467.362 354.514 467.313 354.428 cv
467.243 354.302 467.288 354.142 467.415 354.07 cv
485.705 343.852 li
467.92 331.344 li
467.802 331.26 467.773 331.097 467.856 330.978 cv
467.942 330.859 468.105 330.832 468.223 330.914 cv
486.349 343.662 li
486.459 343.891 li
486.325 344.106 li
467.671 354.529 li
467.543 354.563 li
cp
f
483.837 343.029 mo
483.837 348.077 485.693 352.17 487.983 352.17 cv
490.272 352.17 492.129 348.077 492.129 343.029 cv
492.129 337.98 490.272 333.888 487.983 333.888 cv
485.693 333.888 483.837 337.98 483.837 343.029 cv
cp
f
433.293 268.028 mo
444.686 264.175 li
449.173 270.408 li
449.173 270.408 451.977 265.573 456.035 263.873 cv
460.094 262.172 454.261 288.967 454.261 288.967 cv
454.261 288.967 444.686 294.636 438.729 288.001 cv
433.779 282.489 433.293 268.028 433.293 268.028 cv
cp
.313726 .470588 .286275 rgb
f
448.854 271.604 mo
448.602 272.864 448.453 274.221 448.718 274.574 cv
448.803 274.621 li
448.875 274.581 li
449.152 274.245 449.056 272.879 448.854 271.604 cv
cp
448.802 275.121 mo
448.596 275.115 448.435 275.03 448.317 274.874 cv
447.696 274.044 448.474 270.935 448.635 270.319 cv
448.665 270.207 448.746 270.146 448.882 270.133 cv
448.997 270.135 449.096 270.216 449.121 270.329 cv
449.26 270.953 449.916 274.107 449.26 274.9 cv
449.141 275.045 448.982 275.121 448.802 275.121 cv
cp
1 1 1 rgb
f
460.879 243.62 mo
460.879 243.62 458.351 246.479 459.74 249.632 cv
461.13 252.784 462.62 243.905 462.62 243.905 cv
460.879 243.62 li
cp
.741176 .741176 .776471 rgb
f
469.379 256.468 mo
469.475 262.139 li
469.475 262.139 468.479 263.786 465.167 264.112 cv
462.698 264.355 461.82 263.811 461.82 263.811 cv
462.116 260.933 li
462.409 258.126 li
468.378 256.707 li
469.379 256.468 li
cp
.976471 .521569 .458824 rgb
f
468.378 256.707 mo
468.366 256.861 469.29 257.35 469.202 257.561 cv
467.981 260.415 463.432 261.85 462.007 262.002 cv
462.409 258.126 li
468.378 256.707 li
cp
0 0 0 rgb
f
461.956 243.903 mo
461.177 244.537 460.632 245.409 460.31 246.36 cv
459.568 248.55 458.073 253.66 459.053 256.793 cv
460.326 260.865 463.998 260.103 466.181 259.239 cv
468.363 258.376 469.343 256.971 469.343 256.971 cv
469.343 256.971 471.431 257.615 472.746 255.627 cv
474.062 253.64 473.137 251.433 471.94 250.957 cv
470.745 250.482 469.372 251.389 469.372 251.389 cv
470.399 249.229 li
470.399 249.229 466.267 240.394 461.956 243.903 cv
cp
.976471 .521569 .458824 rgb
f
469.675 254.159 mo
469.475 254.059 li
469.392 253.948 469.415 253.791 469.525 253.709 cv
471.597 252.166 li
471.708 252.082 471.865 252.107 471.946 252.217 cv
472.029 252.327 472.006 252.484 471.896 252.566 cv
469.824 254.109 li
469.675 254.159 li
cp
0 0 0 rgb
f
472.003 254.088 mo
471.944 254.081 li
470.254 253.677 li
470.12 253.645 470.037 253.51 470.069 253.375 cv
470.102 253.241 470.238 253.16 470.371 253.19 cv
472.062 253.595 li
472.195 253.627 472.278 253.762 472.246 253.896 cv
472.219 254.011 472.116 254.088 472.003 254.088 cv
cp
f
460.286 250.525 mo
460.225 250.518 li
460.091 250.483 460.01 250.348 460.044 250.214 cv
460.377 248.907 li
460.41 248.773 460.55 248.696 460.681 248.727 cv
460.814 248.761 460.896 248.896 460.861 249.03 cv
460.528 250.337 li
460.5 250.45 460.397 250.525 460.286 250.525 cv
cp
f
463.879 250.716 mo
463.817 250.708 li
463.684 250.674 463.603 250.538 463.637 250.404 cv
463.97 249.098 li
464.004 248.964 464.141 248.885 464.273 248.917 cv
464.407 248.951 464.488 249.087 464.454 249.221 cv
464.121 250.527 li
464.093 250.641 463.99 250.716 463.879 250.716 cv
cp
f
460.081 247.673 mo
459.955 247.673 459.847 247.578 459.833 247.45 cv
459.817 247.313 459.917 247.189 460.054 247.175 cv
461.13 247.058 li
461.277 247.028 461.391 247.142 461.405 247.278 cv
461.421 247.416 461.321 247.539 461.185 247.554 cv
460.108 247.671 li
460.081 247.673 li
cp
.521569 .517647 .588235 rgb
f
464.962 248.537 mo
464.865 248.518 li
463.401 247.905 li
463.274 247.853 463.214 247.706 463.268 247.578 cv
463.32 247.45 463.468 247.39 463.595 247.444 cv
465.059 248.057 li
465.186 248.109 465.246 248.256 465.192 248.384 cv
465.152 248.479 465.06 248.537 464.962 248.537 cv
cp
f
469.372 251.389 mo
469.372 251.389 468.784 253.749 468.332 253.461 cv
467.88 253.174 467.456 249.771 467.794 248.247 cv
468.131 246.724 468.377 245.958 468.377 245.958 cv
468.377 245.958 462.182 245.407 460.549 243.935 cv
458.915 242.462 462.365 241.513 465.894 242.181 cv
469.422 242.849 470.813 244.175 470.813 244.175 cv
470.813 244.175 473.023 243.845 473.85 245.193 cv
474.677 246.542 472.796 251.666 472.796 251.666 cv
472.796 251.666 472.238 250.38 469.372 251.389 cv
cp
.741176 .741176 .776471 rgb
f
457.557 253.827 mo
457.557 253.827 459.288 251.91 460.169 252.197 cv
461.05 252.484 461.37 253.773 461.37 253.773 cv
461.37 253.773 462.416 252.325 463.569 252.732 cv
464.723 253.14 467.195 253.291 467.222 253.691 cv
467.248 254.091 466.532 254.234 466.532 254.234 cv
466.532 254.234 460.711 254.907 457.557 253.827 cv
cp
f
469.372 251.389 mo
469.372 251.389 469.269 255.217 469.343 256.971 cv
469.417 258.726 464.539 261.463 461.17 259.951 cv
457.801 258.439 458.725 254.024 458.725 254.024 cv
461.728 254.302 li
461.728 254.302 462.42 253.909 463.206 253.747 cv
463.993 253.586 465.042 254.015 465.042 254.015 cv
469.372 251.389 li
cp
f
462.199 255.188 mo
462.072 255.188 461.965 255.092 461.951 254.964 cv
461.937 254.827 462.036 254.704 462.173 254.688 cv
462.183 254.688 463.195 254.57 463.564 253.832 cv
463.626 253.709 463.776 253.661 463.9 253.721 cv
464.023 253.782 464.073 253.933 464.012 254.057 cv
463.519 255.042 462.277 255.181 462.225 255.187 cv
462.199 255.188 li
cp
0 0 0 rgb
f
461.264 253.361 mo
461.172 253.361 461.084 253.311 461.04 253.224 cv
460.199 251.543 461.408 249.777 461.46 249.703 cv
461.539 249.59 461.693 249.562 461.808 249.641 cv
461.921 249.72 461.949 249.875 461.87 249.988 cv
461.859 250.004 460.78 251.588 461.487 252.999 cv
461.549 253.123 461.499 253.273 461.376 253.335 cv
461.264 253.361 li
cp
f
461.842 264.099 mo
460.83 264.801 459.497 265.957 459.5 266.501 cv
459.5 266.557 459.513 266.617 459.608 266.681 cv
460.315 267.142 462.294 265.704 463.635 264.48 cv
462.725 264.441 462.107 264.217 461.842 264.099 cv
cp
464.802 264.428 mo
466.106 265.528 468.679 267.469 469.736 267.244 cv
469.86 267.219 469.949 267.149 470.019 267.025 cv
470.475 266.202 469.77 263.736 469.351 262.532 cv
467.564 263.763 466.023 264.271 464.802 264.428 cv
cp
469.579 267.759 mo
467.986 267.759 465.048 265.308 464.237 264.603 cv
463.451 265.346 460.574 267.926 459.333 267.097 cv
459.115 266.953 459.001 266.748 459 266.503 cv
458.995 265.469 461.232 263.906 461.681 263.604 cv
461.941 263.592 li
461.97 263.607 464.886 265.137 469.328 261.936 cv
469.547 261.899 li
469.709 262.051 li
469.859 262.451 471.156 266.003 470.456 267.268 cv
470.316 267.519 470.103 267.681 469.836 267.734 cv
469.579 267.759 li
cp
1 1 1 rgb
f
474.915 262.55 mo
474.915 262.55 481.472 263.523 486.262 271.474 cv
491.161 279.607 490.559 288.001 490.559 288.001 cv
474.579 287.072 li
474.915 262.55 li
cp
.313726 .470588 .286275 rgb
f
451.366 290.156 mo
451.229 290.156 451.116 290.044 451.116 289.906 cv
451.116 286.273 li
451.116 286.136 451.229 286.023 451.366 286.023 cv
451.504 286.023 451.616 286.136 451.616 286.273 cv
451.616 289.906 li
451.616 290.044 451.504 290.156 451.366 290.156 cv
cp
1 1 1 rgb
f
490.991 277.185 mo
490.477 277.185 490.036 276.795 489.984 276.272 cv
489.929 275.716 490.335 275.22 490.892 275.164 cv
499.892 274.268 li
500.458 274.22 500.945 274.618 501 275.175 cv
501.056 275.731 500.649 276.228 500.093 276.283 cv
491.093 277.18 li
490.991 277.185 li
cp
.729412 .698039 .74902 rgb
f
507.916 277.05 mo
497.671 277.05 li
496.604 277.05 495.738 276.185 495.738 275.117 cv
495.738 274.049 496.604 273.184 497.671 273.184 cv
507.916 273.184 li
508.983 273.184 509.85 274.049 509.85 275.117 cv
509.85 276.185 508.983 277.05 507.916 277.05 cv
cp
.780392 .745098 .8 rgb
f
470.413 298.274 mo
470.413 298.274 465.114 302.249 464.472 304.999 cv
463.829 307.749 463.612 313.061 464.689 313.64 cv
465.767 314.22 466.434 313.006 466.434 313.006 cv
466.434 313.006 466.874 314.275 467.8 314.352 cv
468.726 314.429 469.244 313.36 469.244 313.36 cv
469.244 313.36 469.529 315.085 470.617 314.952 cv
471.704 314.819 472.813 311.52 472.945 310.723 cv
473.076 309.927 473.168 308.415 473.168 308.415 cv
473.168 308.415 478.7 308.48 480.287 303.67 cv
482.284 297.613 470.413 298.274 470.413 298.274 cv
cp
.976471 .521569 .458824 rgb
f
490.559 288.001 mo
490.559 288.001 489.351 292.634 486.436 297.145 cv
483.331 301.947 481.889 303.595 481.889 303.595 cv
468.104 297.983 li
475.812 284.899 li
490.559 288.001 li
cp
.313726 .470588 .286275 rgb
f
466.351 312.826 mo
466.188 312.811 466.088 312.688 466.102 312.551 cv
466.743 306.209 li
466.758 306.072 466.869 305.965 467.018 305.985 cv
467.154 306 467.255 306.122 467.241 306.26 cv
466.6 312.602 li
466.586 312.73 466.478 312.826 466.351 312.826 cv
cp
0 0 0 rgb
f
469.322 313.215 mo
469.148 313.191 469.055 313.064 469.075 312.928 cv
469.934 307.221 li
469.954 307.085 470.072 306.987 470.218 307.011 cv
470.354 307.031 470.448 307.158 470.428 307.295 cv
469.569 313.002 li
469.551 313.126 469.444 313.215 469.322 313.215 cv
cp
f
470.944 293.412 mo
470.859 293.397 li
470.729 293.351 470.662 293.207 470.709 293.077 cv
470.84 292.714 473.993 284.164 480.586 283.153 cv
480.717 283.133 480.851 283.227 480.871 283.362 cv
480.892 283.499 480.799 283.627 480.662 283.647 cv
474.364 284.613 471.211 293.161 471.18 293.247 cv
471.143 293.349 471.047 293.412 470.944 293.412 cv
cp
1 1 1 rgb
f
476.297 282.522 mo
476.239 282.522 476.159 282.539 476.063 282.623 cv
475.593 283.038 475.353 284.4 475.246 285.442 cv
476.001 284.202 476.592 282.925 476.429 282.575 cv
476.329 282.524 li
476.297 282.522 li
cp
474.929 286.649 mo
474.852 286.637 li
474.746 286.603 474.676 286.503 474.679 286.392 cv
474.689 286.053 474.809 283.062 475.733 282.248 cv
475.924 282.081 476.141 282.009 476.378 282.026 cv
476.611 282.049 476.79 282.169 476.881 282.363 cv
477.306 283.268 475.501 286.001 475.136 286.54 cv
474.929 286.649 li
cp
f
516.42 268.068 mo
516.42 268.068 505.778 270.531 504.089 271.857 cv
502.398 273.184 499.919 278.354 501.381 279.153 cv
502.302 279.656 503.965 278.039 503.965 278.039 cv
503.965 278.039 507.732 282.914 511.8 280.573 cv
516.105 278.095 518.057 276.483 518.057 276.483 cv
516.42 268.068 li
cp
.976471 .521569 .458824 rgb
f
501.104 273.184 mo
501.104 273.184 502.992 270.428 503.77 269.983 cv
504.548 269.539 511.154 269.394 511.154 269.394 cv
503.451 273.184 li
501.104 273.184 li
cp
f
503.159 273.434 mo
502.997 273.374 li
502.892 273.284 502.879 273.127 502.969 273.021 cv
504.579 271.127 li
504.67 271.022 504.828 271.011 504.932 271.099 cv
505.037 271.188 505.05 271.346 504.96 271.451 cv
503.35 273.346 li
503.159 273.434 li
cp
0 0 0 rgb
f
503.965 278.289 mo
503.765 278.188 li
503.682 278.078 503.705 277.921 503.815 277.839 cv
504.62 277.239 li
504.732 277.157 504.888 277.181 504.97 277.29 cv
505.053 277.4 505.029 277.558 504.919 277.64 cv
504.114 278.239 li
503.965 278.289 li
cp
f
97.9854 186.251 mo
64.4839 186.251 37.3256 183.958 37.3256 181.129 cv
37.3256 178.301 64.4839 176.008 97.9854 176.008 cv
131.487 176.008 158.645 178.301 158.645 181.129 cv
158.645 183.958 131.487 186.251 97.9854 186.251 cv
.92549 .913725 .933333 rgb
f
78.4473 75.2886 mo
78.4473 75.2886 86.0068 74.1626 88.9116 75.7778 cv
91.8164 77.3926 92.6924 83.5308 92.3325 84.0981 cv
91.9727 84.665 91.0044 84.5024 91.0044 84.5024 cv
91.0044 84.5024 91.0127 85.644 90.4482 86.0444 cv
89.8843 86.4448 88.9277 85.8213 88.9277 85.8213 cv
88.9277 85.8213 87.9795 87.0015 86.8916 86.6465 cv
85.8042 86.2915 85.4414 85.0806 85.5557 84.501 cv
85.6328 84.1138 85.5176 83.5376 85.5176 83.5376 cv
84.9365 83.7202 li
84.9365 83.7202 83.981 84.9263 81.3481 84.813 cv
78.7158 84.6997 76.0488 80.9316 76.0488 80.9316 cv
78.4473 75.2886 li
cp
.976471 .521569 .458824 rgb
f
58.584 48.9663 mo
58.584 48.9663 66.3672 50.1689 69.186 56.8691 cv
72.0073 63.5742 80.269 74.6855 80.269 74.6855 cv
76.6719 86.8584 li
57.2412 79.4482 li
58.584 48.9663 li
cp
.709804 .313726 .282353 rgb
f
91.2651 84.772 mo
91.1299 84.772 91.0186 84.6641 91.0151 84.5283 cv
91.0142 84.4858 90.8892 80.2749 89.2979 78.9536 cv
89.1914 78.8652 89.1768 78.7075 89.2651 78.6016 cv
89.353 78.4956 89.5117 78.4819 89.6172 78.5688 cv
91.3828 80.0352 91.5107 84.3335 91.5151 84.5156 cv
91.5186 84.6538 91.4097 84.7686 91.2715 84.772 cv
91.2651 84.772 li
cp
0 0 0 rgb
f
88.9277 86.0713 mo
88.769 86.0586 88.6665 85.938 88.6782 85.8003 cv
88.6807 85.771 88.9014 82.8364 87.1392 79.7349 cv
87.0708 79.6147 87.1128 79.4624 87.2329 79.394 cv
87.3525 79.3237 87.5054 79.3667 87.5737 79.4878 cv
89.416 82.7305 89.187 85.7168 89.1763 85.8423 cv
89.1655 85.9727 89.0562 86.0713 88.9277 86.0713 cv
cp
f
94.2515 89.7305 mo
94.0747 89.7305 93.895 89.6987 93.7202 89.6323 cv
92.9453 89.3389 92.5557 88.4727 92.8496 87.6982 cv
93.0117 87.2651 93.1436 86.7344 93.1953 86.3481 cv
91.0063 86.2515 84.2456 86.5317 78.166 86.9014 cv
77.3564 86.9604 76.6284 86.3228 76.5781 85.4951 cv
76.5278 84.6685 77.1572 83.9575 77.9844 83.9072 cv
93.5005 82.9639 94.5127 83.4419 94.8931 83.6226 cv
97.0254 84.6313 96.0151 87.811 95.6543 88.7617 cv
95.4272 89.3613 94.8569 89.7305 94.2515 89.7305 cv
cp
.658824 .368627 .278431 rgb
f
86.396 180.762 mo
85.5693 180.762 84.8979 180.093 84.896 179.266 cv
84.6479 84.8364 li
84.646 84.0078 85.3154 83.3345 86.144 83.3325 cv
86.9746 83.3325 87.646 84.0015 87.6479 84.8286 cv
87.896 179.258 li
87.8979 180.087 87.2285 180.76 86.3999 180.762 cv
86.396 180.762 li
cp
f
136.812 160.772 mo
136.812 167.131 li
149.424 167.131 li
150.897 164.888 li
150.897 159.542 li
136.812 160.772 li
cp
.976471 .521569 .458824 rgb
f
115.016 160.772 mo
115.016 167.131 li
127.628 167.131 li
129.101 167.131 li
129.101 159.542 li
115.016 160.772 li
cp
f
113.362 166.915 mo
113.362 166.915 95.6646 177.721 94.8389 179.948 cv
94.0137 182.175 96.6021 183.015 97.8052 183.097 cv
99.0083 183.18 128.892 180.832 128.892 180.832 cv
129.933 172.563 li
129.933 172.563 129.407 165.643 129.101 165.442 cv
128.794 165.241 114.032 165.756 114.032 165.756 cv
113.362 166.915 li
cp
.333333 .447059 .305882 rgb
f
137.022 165.081 mo
137.022 165.081 125.519 175.819 125.142 177.992 cv
124.764 180.165 126.013 181.226 126.788 181.522 cv
127.563 181.819 142.779 181.438 146.958 181.222 cv
151.137 181.005 151.834 178.195 152.199 175.736 cv
152.563 173.276 150.897 164.888 150.897 164.888 cv
137.022 165.081 li
cp
.372549 .517647 .341176 rgb
f
122.848 81.4067 mo
122.848 81.4067 107.39 111.016 105.542 117.168 cv
103.694 123.32 106.623 162.276 106.623 162.276 cv
128.392 162.519 li
129.904 141.777 li
129.904 141.777 127.643 132.988 127.345 130.352 cv
127.048 127.715 129.904 120.199 129.904 120.199 cv
131.193 93.2627 li
123.267 86.8174 li
122.848 81.4067 li
cp
.709804 .415686 .301961 rgb
f
148.339 78.6855 mo
148.339 78.6855 150.709 91.2949 151.214 108.521 cv
151.718 125.747 152.586 162.276 152.586 162.276 cv
152.586 162.276 141.668 163.222 135.03 162.87 cv
128.392 162.519 128.392 162.519 128.392 162.519 cv
129.4 96.6509 li
120.102 90.7568 li
122.848 81.4067 li
146.326 82.1138 li
148.339 78.6855 li
cp
f
122.457 125.747 mo
122.158 125.747 121.912 125.859 121.705 126.09 cv
121.461 126.363 121.487 126.558 121.528 126.68 cv
121.863 127.693 124.904 128.617 126.658 129.038 cv
125.818 127.998 123.897 125.816 122.518 125.748 cv
122.457 125.747 li
cp
127.28 129.68 mo
127.23 129.675 li
126.655 129.557 121.599 128.477 121.056 126.836 cv
120.972 126.582 120.952 126.188 121.334 125.759 cv
121.657 125.398 122.064 125.221 122.542 125.252 cv
124.582 125.352 127.363 129.125 127.48 129.285 cv
127.489 129.566 li
127.28 129.68 li
cp
.976471 .678431 .384314 rgb
f
152.237 158.085 mo
133.469 158.085 li
133.332 158.085 133.221 157.974 133.221 157.837 cv
133.221 157.7 133.332 157.588 133.469 157.588 cv
152.237 157.588 li
152.374 157.588 152.485 157.7 152.485 157.837 cv
152.485 157.974 152.374 158.085 152.237 158.085 cv
cp
f
127.28 158.085 mo
108.774 158.085 li
108.637 158.085 108.525 157.974 108.525 157.837 cv
108.525 157.7 108.637 157.588 108.774 157.588 cv
127.28 157.588 li
127.417 157.588 127.528 157.7 127.528 157.837 cv
127.528 157.974 127.417 158.085 127.28 158.085 cv
cp
f
129.012 123.012 mo
128.877 123.012 128.767 122.905 128.763 122.77 cv
128.264 102.983 li
120.625 97.313 li
120.515 97.231 120.492 97.0752 120.573 96.9653 cv
120.655 96.854 120.811 96.833 120.921 96.9136 cv
128.658 102.656 li
128.758 102.849 li
129.26 122.757 li
129.264 122.894 129.155 123.008 129.018 123.012 cv
129.012 123.012 li
cp
f
147.549 95.7251 mo
142.975 95.6641 142.509 90.9136 142.505 90.8657 cv
142.494 90.729 142.595 90.6089 142.731 90.5967 cv
142.872 90.5894 142.989 90.686 143 90.8223 cv
143.016 91 143.435 95.1733 147.552 95.228 cv
147.689 95.23 147.799 95.3428 147.797 95.48 cv
147.795 95.6162 147.685 95.7251 147.549 95.7251 cv
cp
f
111.046 173.508 mo
104.583 172.709 li
104.446 172.693 104.35 172.568 104.367 172.432 cv
104.384 172.296 104.5 172.196 104.644 172.216 cv
110.439 172.934 li
108.585 170.775 li
108.548 170.509 li
108.588 170.421 108.677 170.365 108.774 170.365 cv
114.984 170.365 li
110.59 168.816 li
110.461 168.771 110.393 168.629 110.438 168.5 cv
110.484 168.37 110.624 168.301 110.755 168.348 cv
116.52 170.379 li
116.634 170.419 116.703 170.536 116.682 170.655 cv
116.662 170.774 116.558 170.862 116.437 170.862 cv
109.315 170.862 li
111.235 173.098 li
111.302 173.176 111.314 173.287 111.266 173.377 cv
111.222 173.458 111.137 173.508 111.046 173.508 cv
cp
1 1 1 rgb
f
143.575 172.791 mo
135.267 172.791 li
135.129 172.791 135.018 172.68 135.018 172.542 cv
135.018 172.405 135.129 172.294 135.267 172.294 cv
142.22 172.294 li
136.724 170.208 li
136.62 170.169 136.555 170.066 136.564 169.955 cv
136.574 169.845 136.655 169.754 136.764 169.732 cv
141.319 168.831 li
136.812 168.831 li
136.675 168.831 136.563 168.719 136.563 168.582 cv
136.563 168.445 136.675 168.333 136.812 168.333 cv
143.854 168.333 li
143.982 168.333 144.089 168.431 144.102 168.558 cv
144.114 168.685 144.028 168.801 143.903 168.826 cv
137.711 170.051 li
143.664 172.31 li
143.775 172.353 143.841 172.469 143.82 172.587 cv
143.798 172.705 143.695 172.791 143.575 172.791 cv
cp
f
139.013 31.9458 mo
139.013 31.9458 145.841 29.5293 149.368 32.9331 cv
152.895 36.3364 152.176 56.6372 152.176 56.6372 cv
139.059 55.8574 li
139.128 41.7915 li
139.013 31.9458 li
cp
0 0 0 rgb
f
107.863 53.8188 mo
107.863 53.8188 106.495 47.7109 104.816 47.5869 cv
103.137 47.4634 104.453 52.502 104.453 52.502 cv
99.9058 50.7632 li
99.9058 50.7632 94.731 49.3203 93.7017 49.771 cv
92.6729 50.2212 94.3672 51.8994 94.3672 51.8994 cv
94.3672 51.8994 90.6821 50.7935 91.1992 52.5898 cv
91.7158 54.3862 94.2373 55.4194 94.2373 55.4194 cv
94.2373 55.4194 90.6353 54.1426 91.4487 56.2476 cv
91.8887 57.3862 99.8091 62.1816 105.147 62.0107 cv
110.484 61.8398 108.354 57.7227 108.354 57.7227 cv
107.863 53.8188 li
cp
.976471 .521569 .458824 rgb
f
96.2227 56.6104 mo
96.0337 56.5234 li
95.9443 56.4189 95.957 56.2622 96.061 56.1729 cv
100.644 52.2573 li
100.748 52.1685 100.905 52.1797 100.994 52.2847 cv
101.083 52.3892 101.071 52.5459 100.967 52.6353 cv
96.3843 56.5508 li
96.2227 56.6104 li
cp
0 0 0 rgb
f
105.856 58.8423 mo
105.77 58.8364 104.205 58.6973 103.476 57.4126 cv
102.873 56.3486 103.04 54.8516 103.975 52.9634 cv
104.036 52.8408 104.185 52.7905 104.308 52.8511 cv
104.431 52.9116 104.481 53.061 104.42 53.1841 cv
103.563 54.9155 103.391 56.2554 103.908 57.1675 cv
104.508 58.2251 105.862 58.3447 105.875 58.3462 cv
106.012 58.3569 106.114 58.4766 106.103 58.6133 cv
106.093 58.7437 105.984 58.8423 105.856 58.8423 cv
cp
f
109.171 56.3071 mo
102.258 62.3521 li
102.258 62.3521 105.237 77.3037 112.196 81.4341 cv
119.155 85.564 125.072 81.729 125.072 81.729 cv
118.027 63.3823 li
109.171 56.3071 li
cp
1 .631373 .262745 rgb
f
119.702 86.5366 mo
120.735 63.0933 li
150.897 65.7827 li
150.661 87.8599 li
119.702 86.5366 li
cp
.658824 .368627 .278431 rgb
f
113.566 63.0933 mo
113.566 63.0933 121.125 48.5093 132.55 47.6743 cv
143.975 46.8394 152.743 51.0288 155.577 64.8984 cv
158.037 76.9443 151.534 85.2817 151.534 85.2817 cv
137.823 74.0845 li
113.566 63.0933 li
cp
f
138.507 42.8213 mo
138.581 48.2876 li
138.581 48.2876 137.617 49.8721 134.422 50.1753 cv
132.042 50.4014 131.308 48.8428 131.308 48.8428 cv
131.493 47.1011 li
131.784 44.3965 li
137.542 43.0483 li
138.507 42.8213 li
cp
.976471 .521569 .458824 rgb
f
137.542 43.0483 mo
137.53 43.1982 137.476 43.375 137.39 43.5781 cv
136.204 46.3252 132.867 46.959 131.493 47.1011 cv
131.784 44.3965 li
137.542 43.0483 li
cp
0 0 0 rgb
f
130 32.3237 mo
130 32.3237 128.078 39.2056 129.399 42.9521 cv
130.721 46.6987 133.561 45.9766 135.593 45.1016 cv
137.625 44.2261 138.507 42.8867 138.507 42.8867 cv
138.507 42.8867 140.494 43.417 141.675 41.5239 cv
142.856 39.6309 141.918 37.6079 140.777 37.2056 cv
139.636 36.8032 138.369 37.6914 138.369 37.6914 cv
139.273 35.6489 li
139.273 35.6489 134.259 25.9014 130 32.3237 cv
cp
.976471 .521569 .458824 rgb
f
138.708 40.6602 mo
138.514 40.5669 li
138.429 40.4595 138.446 40.3032 138.553 40.2173 cv
140.924 38.3242 li
141.03 38.2388 141.187 38.2549 141.273 38.3633 cv
141.359 38.4707 141.341 38.627 141.234 38.7129 cv
138.864 40.606 li
138.708 40.6602 li
cp
0 0 0 rgb
f
140.95 40.5166 mo
140.899 40.5117 li
139.258 40.1768 li
139.124 40.1494 139.037 40.0181 139.064 39.8833 cv
139.092 39.749 139.225 39.666 139.358 39.6895 cv
140.999 40.0244 li
141.133 40.0518 141.22 40.1831 141.193 40.3179 cv
141.169 40.4355 141.065 40.5166 140.95 40.5166 cv
cp
f
134.578 35.248 mo
134.394 35.123 li
133.961 34.042 132.996 34.2407 132.956 34.2495 cv
132.848 34.2773 132.743 34.2061 132.719 34.0991 cv
132.695 33.9922 132.763 33.8862 132.87 33.8628 cv
133.33 33.7588 134.317 33.8618 134.762 34.9766 cv
134.802 35.0781 134.753 35.1934 134.651 35.2339 cv
134.578 35.248 li
cp
f
129.911 34.9507 mo
129.727 34.8696 li
129.635 34.7686 129.642 34.6113 129.743 34.5186 cv
129.978 34.3047 130.601 33.7373 130.9 34.0527 cv
130.994 34.1523 130.99 34.3096 130.89 34.4043 cv
130.655 34.4639 li
130.601 34.4824 130.434 34.561 130.078 34.8857 cv
129.911 34.9507 li
cp
f
131.092 40.0986 mo
130.9 40.0078 li
129.972 38.8804 131.607 36.981 131.677 36.9004 cv
131.768 36.7974 131.925 36.7871 132.028 36.8765 cv
132.131 36.9668 132.142 37.1235 132.052 37.2271 cv
131.652 37.6865 130.735 39.0249 131.284 39.6924 cv
131.371 39.7983 131.356 39.9546 131.25 40.042 cv
131.092 40.0986 li
cp
f
130.067 37.5728 mo
130.014 37.5669 li
129.88 37.5376 129.795 37.4053 129.825 37.271 cv
130.077 36.1182 li
129.749 35.7104 li
129.662 35.6035 129.679 35.4468 129.786 35.3608 cv
129.891 35.2754 130.049 35.291 130.135 35.3979 cv
130.539 35.8984 li
130.588 36.1079 li
130.31 37.3774 li
130.285 37.4937 130.182 37.5728 130.067 37.5728 cv
cp
f
133.526 37.4663 mo
133.473 37.4604 li
133.338 37.4312 133.254 37.2983 133.283 37.1646 cv
133.54 35.9941 li
133.266 35.5557 li
133.193 35.4395 133.229 35.2861 133.345 35.2129 cv
133.459 35.1406 133.614 35.1753 133.688 35.292 cv
134.016 35.8164 li
134.047 36.0015 li
133.769 37.271 li
133.743 37.3872 133.64 37.4663 133.526 37.4663 cv
cp
f
125.072 64.2256 mo
125.072 64.2256 124.522 59.8047 123.82 58.1563 cv
123.117 56.5073 121.125 51.7104 120.304 52.4683 cv
119.484 53.2261 121.007 57.4448 120.304 57.6792 cv
119.601 57.9136 113.273 50.5308 112.335 51.2339 cv
111.398 51.937 115.5 58.1563 115.5 58.1563 cv
115.5 58.1563 112.57 63.9878 113.039 65.5796 cv
113.507 67.1709 118.027 69.8369 118.027 69.8369 cv
123.468 68.5771 li
125.072 64.2256 li
cp
.976471 .521569 .458824 rgb
f
137.823 74.0845 mo
125.072 64.2256 li
118.027 69.8369 li
118.027 69.8369 124.162 85.1587 133.278 87.7954 cv
142.393 90.4321 149.244 83.4116 149.244 83.4116 cv
137.823 74.0845 li
cp
.976471 .678431 .384314 rgb
f
131.244 48.2949 mo
130.975 54.7998 li
130.975 54.7998 134.757 52.9067 136.417 51.1865 cv
138.351 49.1831 138.565 47.7529 138.565 47.7529 cv
138.565 47.7529 134.772 49.5747 131.244 48.2949 cv
cp
f
127.28 56.9316 mo
127.184 56.9316 127.092 56.8755 127.051 56.7813 cv
126.997 56.6553 127.056 56.5093 127.182 56.4546 cv
127.275 56.4146 136.542 52.3784 138.333 47.6646 cv
138.382 47.5361 138.524 47.4741 138.654 47.5205 cv
138.782 47.5693 138.847 47.7129 138.798 47.8413 cv
136.933 52.752 127.767 56.7437 127.378 56.9116 cv
127.28 56.9316 li
cp
1 1 1 rgb
f
130.975 55.0483 mo
130.827 55.0425 130.721 54.9268 130.726 54.7896 cv
130.996 48.2847 li
131.002 48.1475 131.126 48.061 131.254 48.0464 cv
131.392 48.0522 131.498 48.168 131.493 48.3052 cv
131.223 54.8101 li
131.217 54.9438 131.107 55.0483 130.975 55.0483 cv
cp
f
149.244 83.6602 mo
149.09 83.6069 li
136.658 73.8218 li
136.566 73.749 136.537 73.6216 136.589 73.5161 cv
141.801 62.9829 li
141.862 62.8599 142.01 62.8105 142.134 62.8706 cv
142.257 62.9312 142.307 63.0806 142.246 63.2036 cv
137.124 73.5557 li
149.397 83.2163 li
149.505 83.3013 149.524 83.4575 149.439 83.5654 cv
149.244 83.6602 li
cp
f
116.437 59.9263 mo
116.226 59.8081 li
115.288 58.2866 li
115.216 58.1699 115.252 58.0166 115.369 57.9448 cv
115.485 57.873 115.638 57.9082 115.711 58.0259 cv
116.648 59.5474 li
116.721 59.6641 116.684 59.8174 116.567 59.8892 cv
116.437 59.9263 li
cp
0 0 0 rgb
f
132.272 41.8579 mo
132.473 42.0171 132.771 42.1802 133.021 42.021 cv
133.281 41.8555 133.491 41.4531 133.633 41.0894 cv
132.272 41.8579 li
cp
132.798 42.5854 mo
132.333 42.5854 131.896 42.2363 131.668 41.9673 cv
131.613 41.7627 li
131.735 41.5903 li
133.937 40.3467 li
134.208 40.3638 li
134.287 40.4229 134.323 40.5229 134.301 40.6187 cv
134.269 40.7598 133.964 42.0103 133.288 42.4404 cv
133.126 42.543 132.96 42.5854 132.798 42.5854 cv
cp
f
73.335 155.35 mo
71.0327 167.441 li
63.1104 171.886 li
55.7964 169.396 li
56.9673 155.35 li
73.335 155.35 li
cp
.937255 .470588 .423529 rgb
f
54.981 169.749 mo
59.2207 177.846 li
61.9033 182.975 li
61.9033 182.975 88.3564 183.979 89.6978 182.975 cv
91.0386 181.97 91.0386 179.127 89.6978 177.951 cv
88.3564 176.781 72.6182 168.241 72.6182 168.241 cv
72.6182 168.241 72.6182 165.896 71.6387 165.669 cv
70.6538 165.443 64.1333 168.241 64.1333 168.241 cv
56.5229 165.659 li
54.981 169.749 li
cp
.956863 .584314 .184314 rgb
f
59.2207 156.832 mo
57.3965 169.396 li
43.9004 169.396 li
43.3311 156.832 li
59.2207 156.832 li
cp
.976471 .521569 .458824 rgb
f
40.2471 180.8 mo
40.2471 182.251 41.1362 184.261 44.2661 184.929 cv
47.3906 185.602 63.7368 184.929 64.2441 184.372 cv
64.5151 184.08 64.686 182.895 64.7866 181.83 cv
64.897 180.699 64.6157 179.559 63.9927 178.609 cv
57.3018 168.407 li
57.3018 168.407 55.458 166.513 51.8716 166.845 cv
48.2847 167.181 46.4863 168.407 46.4863 168.407 cv
46.4863 168.407 44.1758 167.191 43.3921 167.754 cv
42.7441 168.221 41.2119 175.741 40.4834 179.283 cv
40.3325 180.011 40.2471 180.554 40.2471 180.8 cv
cp
1 .65098 .231373 rgb
f
72.8301 86.0005 mo
72.8301 86.0005 76.6968 105.466 78.6328 120.142 cv
80.5693 134.818 77.3281 160.877 76.0488 161.765 cv
74.77 162.652 64.0747 161.528 64.0747 161.528 cv
64.0747 161.528 59.0176 163.553 50.292 163.324 cv
43.959 163.157 41.4229 162.598 41.4229 162.598 cv
41.4229 162.598 41.4229 100.917 46.3882 82.5752 cv
49.1465 72.3882 72.8301 86.0005 72.8301 86.0005 cv
cp
.968627 .772549 .215686 rgb
f
59.376 49.7363 mo
59.376 49.7363 66.2822 56.7612 70.2637 69.7651 cv
74.2446 82.7695 74.6328 89.1299 74.6328 89.1299 cv
74.6328 89.1299 64.0508 89.6533 55.7939 88.2256 cv
47.5371 86.7979 44.6304 87.3174 44.6304 87.3174 cv
46.5513 61.395 li
52.1245 47.9824 li
59.376 49.7363 li
cp
.709804 .313726 .282353 rgb
f
52.1245 47.9824 mo
52.1245 47.9824 43.8721 48.1851 35.3438 58.9839 cv
26.8149 69.7827 30.6377 78.9189 41.2944 83.2314 cv
51.9512 87.5439 62.9526 88.2725 62.9526 88.2725 cv
64.5239 73.1958 li
55.0464 70.4951 li
55.0464 70.4951 55.8887 53.4604 52.1245 47.9824 cv
cp
f
69.4556 74.0796 mo
69.4556 74.0796 75.2134 73.8428 74.2568 75.4731 cv
73.3003 77.103 68.5884 76.3164 68.5884 76.3164 cv
65.7334 75.7485 li
69.4556 74.0796 li
cp
.976471 .521569 .458824 rgb
f
63.4648 75.7471 mo
63.4648 75.7471 66.0991 74.4985 67.3657 74.2314 cv
68.5654 73.9785 69.4556 74.0796 69.4556 74.0796 cv
69.7642 75.9419 li
69.7642 75.9419 73.8315 77.0366 76.6592 78.6245 cv
79.4873 80.2124 78.897 81.5039 78.897 81.5039 cv
78.897 81.5039 80.6841 82.7778 79.856 83.5303 cv
79.0278 84.2822 76.0366 83.3467 76.0366 83.3467 cv
76.0366 83.3467 79.7866 84.979 78.165 85.7588 cv
76.5435 86.5391 73.0742 86.1089 73.0742 86.1089 cv
73.0742 86.1089 65.4297 87.062 63.0537 84.3076 cv
60.6782 81.5537 63.4648 75.7471 63.4648 75.7471 cv
cp
f
78.3267 81.3291 mo
78.2456 81.3159 li
72.9341 79.501 li
72.8037 79.4561 72.7339 79.314 72.7788 79.1831 cv
72.8228 79.0532 72.9648 78.9844 73.0962 79.0273 cv
78.4077 80.8428 li
78.5381 80.8872 78.6079 81.0293 78.563 81.1602 cv
78.5278 81.2637 78.4307 81.3291 78.3267 81.3291 cv
cp
0 0 0 rgb
f
76.6724 83.8584 mo
76.5908 83.8447 li
72.7881 82.5308 li
72.6577 82.4858 72.5884 82.3433 72.6333 82.2129 cv
72.6787 82.0825 72.8218 82.0151 72.9512 82.0581 cv
76.7539 83.3721 li
76.8843 83.417 76.9536 83.5596 76.9087 83.6899 cv
76.873 83.7935 76.7759 83.8584 76.6724 83.8584 cv
cp
f
47.3506 66.7476 mo
64.6035 71.5386 li
63.7983 88.3135 li
63.7983 88.3135 43.519 86.7163 36.2192 80.436 cv
28.9189 74.1558 39.6274 66.1528 39.6274 66.1528 cv
47.3506 66.7476 li
cp
.709804 .313726 .282353 rgb
f
45.1694 66.3086 mo
44.5923 66.3086 44.0186 66.3843 43.4775 66.5698 cv
42.9873 66.7383 42.792 66.915 42.7739 67.0156 cv
42.7632 67.0767 42.8257 67.1694 42.9419 67.2642 cv
43.7827 67.9497 47.0591 68.543 49.9624 67.6011 cv
49.0713 67.1597 47.1021 66.3086 45.1694 66.3086 cv
cp
46.6836 68.5869 mo
44.8745 68.5869 43.2871 68.1909 42.626 67.6519 cv
42.2842 67.373 42.2505 67.104 42.2817 66.9272 cv
42.3428 66.5864 42.6812 66.3145 43.3154 66.0972 cv
46.5063 65.002 50.5361 67.3286 50.7065 67.4282 cv
50.7886 67.4766 50.8364 67.5674 50.8296 67.6626 cv
50.8223 67.7583 50.7612 67.8408 50.6724 67.8765 cv
49.4043 68.3813 47.9863 68.5869 46.6836 68.5869 cv
cp
1 1 1 rgb
f
64.104 160.429 mo
63.9355 160.41 63.8384 160.285 63.8555 160.148 cv
65.4653 147.218 66.6738 98.9927 66.6855 98.5068 cv
66.688 98.4106 66.7456 98.3242 66.834 98.2847 cv
71.8306 96.0615 li
71.9546 96.0063 72.1045 96.062 72.1606 96.1885 cv
72.2168 96.3145 72.1597 96.4624 72.0337 96.5186 cv
67.1816 98.6772 li
67.1035 101.745 65.918 147.627 64.3516 160.209 cv
64.3359 160.336 64.228 160.429 64.104 160.429 cv
cp
.372549 .517647 .341176 rgb
f
138.369 37.6914 mo
137.402 39.1611 li
137.613 36.4238 li
137.613 36.4238 135.525 36.5718 133.086 34.8149 cv
130.648 33.0576 131.145 31.4854 131.145 31.4854 cv
131.145 31.4854 129.399 34.7661 129.249 35.937 cv
129.088 37.1865 128.566 30.8735 131.914 29.4248 cv
135.261 27.9766 139.006 29.9585 139.792 30.9893 cv
140.579 32.0205 140.73 34.3477 140.73 34.3477 cv
140.73 34.3477 141.936 34.0908 142.718 34.9453 cv
143.501 35.7998 141.797 38.1211 141.797 38.1211 cv
141.797 38.1211 140.895 36.4297 138.369 37.6914 cv
cp
0 0 0 rgb
f
60.1914 31.4839 mo
60.1914 31.4839 62.5806 34.1865 61.2671 37.1655 cv
59.9541 40.1445 58.5454 31.7534 58.5454 31.7534 cv
60.1914 31.4839 li
cp
.741176 .741176 .776471 rgb
f
52.1577 43.626 mo
52.0664 48.9858 li
52.0664 48.9858 52.5522 50.813 55.6836 51.1211 cv
58.0166 51.3506 59.3008 50.5664 59.3008 50.5664 cv
59.021 47.8462 li
58.7451 45.1934 li
53.104 43.8521 li
52.1577 43.626 li
cp
.976471 .521569 .458824 rgb
f
53.104 43.8521 mo
53.1152 43.9985 52.1084 43.9023 52.1914 44.1021 cv
53.3457 46.7998 57.7778 48.7129 59.125 48.8564 cv
58.7451 45.1934 li
53.104 43.8521 li
cp
0 0 0 rgb
f
59.1733 31.7515 mo
59.9092 32.3506 60.4243 33.1753 60.7285 34.0737 cv
61.4297 36.1426 62.8433 40.9727 61.917 43.9341 cv
60.7134 47.7822 57.2432 47.062 55.1802 46.2461 cv
53.1172 45.4302 52.1914 44.1021 52.1914 44.1021 cv
52.1914 44.1021 50.2183 44.7114 48.9751 42.832 cv
47.7319 40.9531 48.606 38.8672 49.7363 38.4185 cv
50.8662 37.9697 52.1636 38.8262 52.1636 38.8262 cv
51.1929 36.7856 li
51.1929 36.7856 55.0991 28.4346 59.1733 31.7515 cv
cp
.976471 .521569 .458824 rgb
f
51.8779 41.4585 mo
51.7285 41.4092 li
49.771 39.9502 li
49.6602 39.8677 49.6377 39.7109 49.7197 39.6001 cv
49.8037 39.4897 49.9604 39.4678 50.0698 39.5488 cv
52.0273 41.0078 li
52.1382 41.0903 52.1611 41.2471 52.0786 41.3579 cv
51.8779 41.4585 li
cp
0 0 0 rgb
f
49.6777 41.3911 mo
49.5645 41.3911 49.4619 41.314 49.4346 41.1992 cv
49.4023 41.0649 49.4854 40.9302 49.6196 40.8979 cv
51.2168 40.5156 li
51.3525 40.4795 51.4858 40.5664 51.5181 40.7007 cv
51.5503 40.835 51.4673 40.9697 51.333 41.002 cv
49.7358 41.3843 li
49.6777 41.3911 li
cp
f
60.751 38.0234 mo
60.6392 38.0234 60.5376 37.9482 60.5088 37.835 cv
60.1943 36.6001 li
60.1602 36.4663 60.2412 36.3306 60.375 36.2964 cv
60.5093 36.2588 60.6445 36.3433 60.6787 36.4771 cv
60.9932 37.7119 li
61.0273 37.8457 60.9463 37.9814 60.8125 38.0156 cv
60.751 38.0234 li
cp
f
57.3555 38.2036 mo
57.2437 38.2036 57.1421 38.1284 57.1133 38.0151 cv
56.7988 36.7803 li
56.7646 36.6465 56.8457 36.5107 56.9795 36.4766 cv
57.1138 36.439 57.249 36.5234 57.2832 36.6572 cv
57.5977 37.8921 li
57.6318 38.0259 57.5508 38.1616 57.417 38.1958 cv
57.3555 38.2036 li
cp
f
60.9453 35.3276 mo
59.9014 35.2158 li
59.7642 35.2007 59.6646 35.0776 59.6797 34.9404 cv
59.6943 34.8027 59.8232 34.7026 59.9551 34.7188 cv
60.9717 34.8291 li
61.1089 34.8442 61.2085 34.9673 61.1934 35.1045 cv
61.1797 35.2329 61.0713 35.3276 60.9453 35.3276 cv
cp
.521569 .517647 .588235 rgb
f
56.3325 36.144 mo
56.2349 36.144 56.1421 36.0864 56.1021 35.9907 cv
56.0488 35.8633 56.1089 35.7168 56.2358 35.6636 cv
57.6187 35.085 li
57.7466 35.0317 57.8931 35.0918 57.9458 35.2188 cv
57.999 35.3462 57.939 35.4927 57.812 35.5459 cv
56.4292 36.1245 li
56.3325 36.144 li
cp
f
52.1636 38.8262 mo
52.1636 38.8262 52.7192 41.0571 53.147 40.7852 cv
53.5747 40.5132 53.9746 37.2964 53.6558 35.8569 cv
53.3369 34.417 53.1045 33.6929 53.1045 33.6929 cv
53.1045 33.6929 58.9595 33.1724 60.5034 31.7808 cv
62.0469 30.3896 58.7861 29.4917 55.4512 30.123 cv
52.1167 30.7544 50.8018 32.0078 50.8018 32.0078 cv
50.8018 32.0078 48.8003 32.1426 48.0195 33.4175 cv
47.2388 34.6919 48.9282 39.0884 48.9282 39.0884 cv
48.9282 39.0884 49.4546 37.873 52.1636 38.8262 cv
cp
.741176 .741176 .776471 rgb
f
63.3311 41.1304 mo
63.3311 41.1304 61.9609 39.7412 61.1279 40.0127 cv
60.2954 40.2842 59.7266 41.0796 59.7266 41.0796 cv
59.7266 41.0796 59.125 39.9692 57.6484 40.0962 cv
56.4966 40.1958 54.2212 40.624 54.1963 41.002 cv
54.1719 41.3804 57.9468 41.894 57.9468 41.894 cv
57.9468 41.894 60.3496 42.1509 63.3311 41.1304 cv
cp
f
59.4487 42.8994 mo
59.3726 42.8931 58.1919 42.7603 57.7231 41.8228 cv
57.6616 41.6992 57.7114 41.5488 57.835 41.4873 cv
57.9585 41.4258 58.1089 41.4756 58.1704 41.5991 cv
58.5151 42.2891 59.4648 42.3999 59.4746 42.4009 cv
59.6118 42.4155 59.7109 42.5386 59.6963 42.6758 cv
59.6831 42.8042 59.5747 42.8994 59.4487 42.8994 cv
cp
0 0 0 rgb
f
59.8276 40.7036 mo
59.7158 40.6772 li
59.5923 40.6152 59.5425 40.4653 59.604 40.3418 cv
60.2676 39.0161 59.2534 37.5254 59.2432 37.5103 cv
59.1646 37.397 59.1924 37.2412 59.3057 37.1626 cv
59.4194 37.084 59.5747 37.1123 59.6533 37.2246 cv
59.7026 37.2954 60.8491 38.9712 60.0513 40.5654 cv
60.0073 40.6528 59.9189 40.7036 59.8276 40.7036 cv
cp
f
56.4521 51.3911 mo
53.3491 51.3911 51.6831 49.2686 51.6621 49.2412 cv
51.5786 49.1313 51.5996 48.9751 51.709 48.8911 cv
51.8174 48.8076 51.9741 48.8271 52.0591 48.9375 cv
52.1606 49.0688 54.5889 52.1382 59.21 50.3335 cv
59.3384 50.2832 59.4834 50.3477 59.5337 50.4756 cv
59.584 50.604 59.5205 50.749 59.3916 50.7993 cv
58.3027 51.2246 57.3208 51.3911 56.4521 51.3911 cv
cp
1 1 1 rgb
f
79.3662 81.3394 mo
79.3662 81.3394 80.8198 83.1421 82.1543 83.3569 cv
83.4888 83.5723 85.3403 86.3433 86.0547 85.5298 cv
87.2695 84.1465 83.8701 79.4468 83.8701 79.4468 cv
79.3662 81.3394 li
cp
.976471 .521569 .458824 rgb
f
85.7393 85.9365 mo
85.23 85.9365 84.6016 85.3906 83.9458 84.8213 cv
83.3345 84.2905 82.6416 83.689 82.1143 83.6035 cv
80.7017 83.3765 79.2334 81.5728 79.1714 81.4961 cv
79.085 81.3887 79.1021 81.2314 79.2095 81.145 cv
79.3159 81.0576 79.4736 81.0747 79.5605 81.1821 cv
79.5747 81.1997 80.9707 82.9131 82.1938 83.1104 cv
82.8623 83.2178 83.5796 83.8413 84.2739 84.4438 cv
84.9131 84.9985 85.6382 85.6265 85.8667 85.3647 cv
86.6553 84.4668 84.9365 81.3481 83.6675 79.5933 cv
83.5864 79.4814 83.6118 79.3252 83.7236 79.2441 cv
83.8345 79.1636 83.9917 79.1885 84.0728 79.3003 cv
84.4326 79.7979 87.5513 84.2046 86.2427 85.6948 cv
86.0938 85.8643 85.9243 85.9365 85.7393 85.9365 cv
cp
0 0 0 rgb
f
64.6035 71.7886 mo
64.5366 71.7793 li
50.5132 67.8848 li
50.3804 67.8481 50.3022 67.71 50.3394 67.5771 cv
50.376 67.4443 50.5127 67.3652 50.647 67.4033 cv
64.6704 71.2979 li
64.8032 71.3345 64.8813 71.4727 64.8442 71.6055 cv
64.8135 71.7163 64.7134 71.7886 64.6035 71.7886 cv
cp
1 1 1 rgb
f
47.5957 95.7354 mo
47.4678 95.7354 47.3584 95.6372 47.3472 95.5068 cv
47.335 95.3696 47.437 95.248 47.5747 95.2363 cv
52.2563 94.8286 52.2803 90.4937 52.2788 90.3096 cv
52.2778 90.1714 52.3892 90.0586 52.5269 90.0576 cv
52.666 90.0576 52.7778 90.1685 52.7788 90.3057 cv
52.7793 90.3555 52.7544 95.2876 47.6177 95.7344 cv
47.5957 95.7354 li
cp
.372549 .517647 .341176 rgb
f
45.7417 162.649 mo
45.5898 162.641 45.4844 162.522 45.4922 162.385 cv
49.3354 94.9526 li
49.3433 94.8149 49.4614 94.7017 49.5991 94.7173 cv
49.7368 94.7251 49.8423 94.8433 49.8345 94.981 cv
45.9912 162.413 li
45.9839 162.546 45.8735 162.649 45.7417 162.649 cv
cp
f
50.8018 32.0078 mo
50.8018 32.0078 52.6304 29.8618 55.9639 29.4175 cv
59.2974 28.9731 59.125 30.3618 59.125 30.3618 cv
53.186 32.0078 li
50.8018 32.0078 li
cp
.741176 .741176 .776471 rgb
f
49.1377 32.751 mo
49.1377 32.751 51.5249 29.0283 54.3555 28.9175 cv
57.186 28.8062 56.0752 30.9727 56.0752 30.9727 cv
50.4761 33.4175 li
49.1377 32.751 li
cp
f
479.045 186.466 mo
439.688 186.466 407.784 184.301 407.784 181.631 cv
407.784 178.961 439.688 176.796 479.045 176.796 cv
518.4 176.796 550.305 178.961 550.305 181.631 cv
550.305 184.301 518.4 186.466 479.045 186.466 cv
.92549 .913725 .933333 rgb
f
463.497 30.7593 mo
463.497 30.7593 467.851 29.4443 471.145 31.7617 cv
473.984 33.7593 474.039 38.2065 474.039 38.2065 cv
474.039 38.2065 475.603 38.2573 475.491 39.6289 cv
475.381 41 473.121 43.6221 473.121 43.6221 cv
467.381 36 li
463.497 30.7593 li
cp
.741176 .741176 .776471 rgb
f
431.501 82.7153 mo
431.501 82.7153 427.11 86.3394 426.374 87.2739 cv
425.639 88.208 424.489 88.1973 423.966 87.9937 cv
423.443 87.79 424.954 85.6538 424.954 85.6538 cv
416.685 85.5024 li
416.685 85.5024 417.867 80.52 419.427 78.9517 cv
422.331 76.0308 429.495 73.4204 429.495 73.4204 cv
431.501 82.7153 li
cp
.976471 .521569 .458824 rgb
f
445.112 168.082 mo
445.112 168.082 437.807 130.312 442.139 123.268 cv
446.47 116.225 459.771 123.495 459.771 123.495 cv
459.771 123.495 457.853 166.2 459.164 169.727 cv
460.475 173.255 447.5 172.792 447.5 172.792 cv
445.112 168.082 li
cp
f
415.246 89.7236 mo
414.586 89.7236 413.964 89.3213 413.716 88.667 cv
413.323 87.6294 412.221 84.1587 414.547 83.0581 cv
414.962 82.8608 416.067 82.3389 433.004 83.3687 cv
433.906 83.4238 434.594 84.1997 434.538 85.1025 cv
434.483 86.0059 433.7 86.6885 432.805 86.6372 cv
426.169 86.2339 418.786 85.9282 416.4 86.0327 cv
416.457 86.4546 416.601 87.0347 416.779 87.5093 cv
417.096 88.355 416.669 89.2988 415.824 89.6177 cv
415.634 89.6895 415.438 89.7236 415.246 89.7236 cv
cp
1 .65098 .231373 rgb
f
423.84 182.317 mo
422.932 182.314 422.2 181.58 422.202 180.675 cv
422.455 84.3745 li
422.458 83.4717 423.19 82.7417 424.093 82.7417 cv
425.001 82.7441 425.732 83.479 425.73 84.3833 cv
425.478 180.684 li
425.475 181.587 424.742 182.317 423.84 182.317 cv
cp
f
456.968 184.211 mo
458.004 184.201 458.853 183.328 458.898 182.222 cv
459.079 177.853 460.018 168.08 459.221 168.047 cv
458.204 168.005 447.881 170.373 447.881 170.373 cv
447.881 170.373 447.838 164.307 443.58 165.221 cv
440.313 165.922 436.41 169.619 434.771 171.302 cv
434.25 171.835 433.603 172.196 432.895 172.342 cv
429.853 172.971 421.468 175.103 421.167 179.542 cv
420.799 184.97 423.004 184.438 424.021 184.479 cv
424.894 184.515 449.902 184.278 456.968 184.211 cv
cp
.709804 .415686 .301961 rgb
f
499.782 163.446 mo
500.565 162.835 500.704 161.677 500.095 160.808 cv
497.689 157.377 492.717 149.391 492.091 149.83 cv
491.292 150.39 484.811 158.2 484.811 158.2 cv
484.811 158.2 481.248 153.607 478.539 156.78 cv
476.46 159.216 475.64 164.302 475.37 166.537 cv
475.285 167.247 475.002 167.897 474.548 168.42 cv
472.599 170.67 467.455 177.173 469.81 180.728 cv
472.688 185.074 474.058 183.386 474.855 182.826 cv
475.541 182.345 494.443 167.609 499.782 163.446 cv
cp
f
456.567 116.591 mo
456.567 116.591 458.103 143.797 477.422 157.739 cv
492.918 168.921 481.962 125.644 481.962 125.644 cv
468.856 116.591 li
456.567 116.591 li
cp
.976471 .521569 .458824 rgb
f
500.688 40.8647 mo
500.688 40.8647 492.188 47.6851 495.417 55.2422 cv
498.541 62.5537 504.861 59.1479 504.861 59.1479 cv
504.333 42.043 li
500.688 40.8647 li
cp
.741176 .741176 .776471 rgb
f
513.865 39.5952 mo
513.865 39.5952 518.433 40.8242 519.537 44.145 cv
520.642 47.4658 519.537 50.229 519.537 50.229 cv
519.537 50.229 525.816 56.4038 521.426 60.0107 cv
517.035 63.6172 510.258 61.9707 510.258 61.9707 cv
507.707 39.1768 li
513.865 39.5952 li
cp
f
483.688 160.629 mo
483.688 160.629 479.816 168.871 479.177 169.188 cv
478.536 169.505 465.219 175.023 463.95 177.43 cv
462.682 179.837 464.159 181.562 464.159 181.562 cv
464.159 181.562 495.995 180.364 497.039 179.731 cv
498.082 179.098 497.86 163.026 497.86 163.026 cv
483.688 160.629 li
cp
.976471 .521569 .458824 rgb
f
463.618 180.518 mo
497.611 177.616 li
497.77 182.245 li
463.714 184.431 li
463.618 180.518 li
cp
.847059 .266667 .152941 rgb
f
469.549 173.646 mo
473.937 171.52 li
476.821 179.391 li
472.668 180.68 li
469.549 173.646 li
cp
f
522.465 159.817 mo
522.465 159.817 523.884 162.504 523.675 163.187 cv
523.466 163.87 518.33 177.34 519.208 179.915 cv
520.086 182.49 522.354 182.601 522.354 182.601 cv
522.354 182.601 543.35 158.638 543.605 157.445 cv
543.862 156.252 534.003 146.79 534.003 146.79 cv
522.465 159.817 li
cp
.976471 .521569 .458824 rgb
f
521.224 182.276 mo
542.461 155.576 li
545.936 158.641 li
524.134 184.895 li
521.224 182.276 li
cp
.847059 .266667 .152941 rgb
f
520.303 173.247 mo
521.771 168.597 li
529.473 171.906 li
527.558 175.81 li
520.303 173.247 li
cp
f
513.809 88.4697 mo
513.809 88.4697 513.825 107.514 522.322 122.442 cv
530.818 137.371 538.189 145.324 538.189 145.324 cv
520.186 162.297 li
520.186 162.297 499.576 148.591 494.479 124.68 cv
489.381 100.768 494.386 87.6895 494.386 87.6895 cv
513.809 88.4697 li
cp
.372549 .517647 .341176 rgb
f
482.038 130.579 mo
482.07 130.796 482.114 131.034 482.17 131.29 cv
482.494 132.794 483.381 135.143 482.16 135.642 cv
478.769 137.03 473.54 138.666 466.201 139.634 cv
457.225 140.823 445.455 139.849 441.068 139.249 cv
439.691 139.06 440.153 136.368 440.194 134.748 cv
440.245 132.767 440.231 130.724 440.429 128.668 cv
443.125 100.64 448.916 83.2896 448.916 83.2896 cv
450.889 83.0625 li
462.646 86.564 li
475.401 82.6704 li
475.401 82.6704 480.977 123.655 482.038 130.579 cv
cp
.968627 .772549 .215686 rgb
f
450.076 88.4106 mo
450.076 88.4106 466.675 90.3667 466.999 87.8999 cv
467.738 82.2637 471.957 52.6694 471.957 52.6694 cv
469.445 48.6987 li
462.454 49.3013 li
462.454 49.3013 457.565 50.0547 453.799 60.374 cv
450.032 70.6929 450.076 88.4106 450.076 88.4106 cv
cp
.372549 .517647 .341176 rgb
f
469.934 45.3838 mo
469.791 51.0576 li
469.791 51.0576 468.728 52.6626 465.401 52.8491 cv
462.924 52.9883 462.173 51.6987 462.173 51.6987 cv
462.896 46.749 li
468.923 45.5811 li
469.934 45.3838 li
cp
.976471 .521569 .458824 rgb
f
468.923 45.5811 mo
468.904 45.7358 468.841 45.917 468.744 46.1245 cv
467.403 48.9268 463.917 49.4507 462.485 49.5425 cv
462.896 46.749 li
468.923 45.5811 li
cp
0 0 0 rgb
f
461.955 33.7852 mo
461.955 33.7852 458.799 40.8237 459.874 44.8057 cv
460.948 48.7871 464.572 48.1968 466.744 47.4502 cv
468.917 46.7031 469.935 45.3853 469.935 45.3853 cv
469.935 45.3853 471.95 46.0903 473.32 44.2227 cv
474.69 42.3555 473.879 40.188 472.729 39.6821 cv
471.579 39.1763 470.198 39.9966 470.198 39.9966 cv
471.294 37.9531 li
471.294 37.9531 466.866 27.4702 461.955 33.7852 cv
cp
.976471 .521569 .458824 rgb
f
470.089 40.4722 mo
470.089 40.4722 467.158 40.6104 465.047 37.2275 cv
462.936 33.8452 463.129 32.4561 463.129 32.4561 cv
461.017 36.2124 li
461.017 36.2124 460.555 33.5264 461.523 31.9829 cv
462.491 30.4395 463.497 30.7593 463.497 30.7593 cv
470.199 32.4341 li
471.964 37.8062 li
470.089 40.4722 li
cp
.741176 .741176 .776471 rgb
f
463.495 44.7622 mo
463.293 44.7622 463.165 44.731 463.149 44.7271 cv
463.016 44.6929 462.935 44.5566 462.969 44.4229 cv
463.002 44.29 463.139 44.21 463.271 44.2422 cv
463.307 44.251 464.179 44.4453 465.02 43.46 cv
465.11 43.354 465.269 43.3423 465.372 43.4321 cv
465.478 43.5215 465.49 43.6792 465.4 43.7842 cv
464.686 44.6221 463.924 44.7622 463.495 44.7622 cv
cp
0 0 0 rgb
f
462.196 42.7944 mo
462.089 42.7944 461.99 42.7251 461.957 42.6177 cv
461.49 41.0928 462.566 39.5493 462.612 39.4844 cv
462.692 39.3721 462.848 39.3457 462.961 39.4248 cv
463.073 39.5044 463.1 39.6606 463.021 39.7734 cv
463.011 39.7871 462.041 41.1836 462.436 42.4712 cv
462.476 42.603 462.401 42.7432 462.27 42.7837 cv
462.196 42.7944 li
cp
f
465.693 39.6699 mo
465.602 39.6699 465.513 39.6187 465.469 39.5298 cv
465.362 39.313 465.225 39.1846 465.048 39.1362 cv
464.671 39.0308 464.203 39.3281 464.198 39.3311 cv
464.084 39.4077 463.928 39.3745 463.853 39.2603 cv
463.776 39.1455 463.808 38.9907 463.922 38.9146 cv
463.948 38.897 464.576 38.4902 465.177 38.6528 cv
465.497 38.7393 465.747 38.9604 465.918 39.3101 cv
465.979 39.4341 465.928 39.5835 465.804 39.6445 cv
465.693 39.6699 li
cp
f
461.728 39.3394 mo
461.624 39.3394 461.526 39.2739 461.491 39.1699 cv
461.416 38.9507 461.225 38.6152 461.052 38.5903 cv
460.939 38.5767 460.793 38.6938 460.633 38.9199 cv
460.553 39.0332 460.397 39.0601 460.284 38.9795 cv
460.172 38.8999 460.145 38.7437 460.225 38.6309 cv
460.508 38.23 460.804 38.0503 461.124 38.0952 cv
461.667 38.1748 461.936 38.9238 461.964 39.0093 cv
462.009 39.1396 461.938 39.2813 461.808 39.3257 cv
461.728 39.3394 li
cp
f
465.543 37.6006 mo
465.366 37.5273 li
464.547 36.7075 464.075 37.0649 464.058 37.0806 cv
463.949 37.1665 463.795 37.1489 463.707 37.0444 cv
463.621 36.9395 463.633 36.7866 463.735 36.6978 cv
463.768 36.6694 464.56 36.0146 465.72 37.1738 cv
465.817 37.2715 465.817 37.4297 465.72 37.5273 cv
465.543 37.6006 li
cp
.521569 .517647 .588235 rgb
f
460.943 37.3311 mo
460.771 37.2617 li
460.671 37.166 460.667 37.0083 460.763 36.9087 cv
460.811 36.8569 461.24 36.395 461.763 36.4258 cv
461.996 36.4346 462.204 36.543 462.366 36.7393 cv
462.454 36.8457 462.438 37.0034 462.332 37.0908 cv
462.225 37.1792 462.067 37.1636 461.979 37.0566 cv
461.887 36.9438 461.801 36.9277 461.745 36.9253 cv
461.486 36.9126 461.209 37.166 461.124 37.2549 cv
460.943 37.3311 li
cp
f
470.489 43.3379 mo
470.317 43.269 li
470.217 43.1743 470.213 43.0161 470.308 42.9155 cv
472.234 40.8862 li
472.33 40.7871 472.488 40.7822 472.588 40.8774 cv
472.688 40.9722 472.692 41.1304 472.598 41.231 cv
470.671 43.2603 li
470.489 43.3379 li
cp
0 0 0 rgb
f
472.523 42.7983 mo
471.158 42.5903 li
471.021 42.5693 470.928 42.4414 470.949 42.3052 cv
470.971 42.1685 471.1 42.0752 471.234 42.0962 cv
472.562 42.3013 li
472.698 42.3223 472.792 42.4502 472.771 42.5864 cv
472.751 42.71 472.645 42.7983 472.523 42.7983 cv
cp
f
461.686 91.293 mo
461.686 91.293 468.762 53.6338 468.861 53.2847 cv
469.062 52.5806 469.848 48.7964 469.848 48.7964 cv
469.848 48.7964 477.533 51.0322 480.113 54.4121 cv
481.988 56.8691 479.085 90.8115 478.193 91.4404 cv
477.302 92.0698 461.686 91.293 461.686 91.293 cv
cp
.658824 .368627 .278431 rgb
f
468.528 85.5098 mo
468.528 85.5098 473.706 89.9961 480.686 90.165 cv
487.665 90.334 494.74 83.917 494.74 83.917 cv
499.281 52.7739 li
499.281 52.7739 493.905 53.9404 488.942 60.1069 cv
483.399 66.9951 482.224 70.542 482.224 70.542 cv
468.528 85.5098 li
cp
.976471 .678431 .384314 rgb
f
486.402 88.0742 mo
486.402 88.0742 478.756 104.987 477.31 131.003 cv
475.862 157.021 476.245 166.716 476.245 166.716 cv
500.676 165.538 li
500.676 165.538 499.954 139.396 500.585 136.784 cv
501.585 132.639 494.974 90.5283 494.974 90.5283 cv
486.402 88.0742 li
cp
.372549 .517647 .341176 rgb
f
486.496 82.0474 mo
485.771 88.9937 li
485.771 88.9937 491.45 91.1152 500.983 91.1152 cv
510.517 91.1152 516.458 89.4888 516.458 89.4888 cv
518.981 54.1646 li
518.981 54.1646 513.663 51.7817 506.73 51.8706 cv
500.957 51.9448 499.281 52.7739 499.281 52.7739 cv
486.496 82.0474 li
cp
.976471 .678431 .384314 rgb
f
451.792 90.7261 mo
451.792 90.7261 453.875 82.2725 457.187 68.5693 cv
459.919 57.2617 462.454 49.3013 462.454 49.3013 cv
462.454 49.3013 456.368 50.4175 454.759 51.0737 cv
453.148 51.73 449.986 61.8901 448.979 71.3315 cv
447.971 80.7734 446.2 89.8901 446.683 90.3066 cv
447.164 90.7236 451.792 90.7261 451.792 90.7261 cv
cp
.658824 .368627 .278431 rgb
f
500.422 140.253 mo
500.326 140.253 500.235 140.199 500.193 140.106 cv
493.059 124.221 494.604 106.285 494.824 104.115 cv
489.182 102.637 li
489.048 102.602 488.969 102.465 489.003 102.332 cv
489.037 102.199 489.171 102.117 489.309 102.153 cv
495.159 103.686 li
495.28 103.718 495.358 103.833 495.344 103.958 cv
495.321 104.148 493.138 123.177 500.65 139.901 cv
500.706 140.027 500.65 140.175 500.524 140.231 cv
500.422 140.253 li
cp
.988235 .737255 .286275 rgb
f
486.459 88.3633 mo
485.963 88.2939 li
485.963 88.2939 486.584 83.8374 487.025 80.8877 cv
487.929 74.8657 489.041 68.4492 489.053 68.3848 cv
489.075 68.249 489.198 68.1538 489.342 68.1816 cv
489.478 68.2051 489.568 68.3345 489.545 68.4707 cv
489.534 68.5347 488.422 74.9458 487.52 80.9619 cv
487.078 83.9097 486.459 88.3633 486.459 88.3633 cv
cp
1 1 1 rgb
f
510.258 47.5581 mo
510.13 53.3311 li
510.13 53.3311 509.052 54.9673 505.669 55.167 cv
503.148 55.3154 502.277 54.7271 502.277 54.7271 cv
502.692 51.811 li
503.102 48.9678 li
509.229 47.7617 li
510.258 47.5581 li
cp
.976471 .521569 .458824 rgb
f
509.229 47.7617 mo
509.212 47.9189 509.147 48.1035 509.05 48.3149 cv
507.694 51.1699 504.148 51.7134 502.692 51.811 cv
503.102 48.9678 li
509.229 47.7617 li
cp
0 0 0 rgb
f
502.106 35.7803 mo
502.106 35.7803 498.916 42.9512 500.021 46.999 cv
501.126 51.0469 504.812 50.436 507.02 49.6694 cv
509.228 48.9033 510.259 47.5596 510.259 47.5596 cv
510.259 47.5596 512.312 48.271 513.7 46.3667 cv
515.09 44.4629 514.257 42.2598 513.086 41.7485 cv
511.914 41.2373 510.512 42.0762 510.512 42.0762 cv
511.62 39.9932 li
511.62 39.9932 507.085 29.3408 502.106 35.7803 cv
cp
.976471 .521569 .458824 rgb
f
502.377 44.9414 mo
502.271 44.9414 502.171 44.8726 502.138 44.7651 cv
501.66 43.2178 502.749 41.6455 502.796 41.5791 cv
502.874 41.4668 503.03 41.439 503.144 41.5186 cv
503.257 41.5981 503.284 41.7539 503.205 41.8667 cv
503.194 41.8809 502.211 43.3071 502.616 44.6177 cv
502.656 44.7495 502.583 44.8896 502.451 44.9302 cv
502.377 44.9414 li
cp
0 0 0 rgb
f
510.817 45.4702 mo
510.646 45.4019 li
510.545 45.3071 510.541 45.1489 510.636 45.0488 cv
512.589 42.9785 li
512.683 42.8779 512.841 42.873 512.942 42.9683 cv
513.043 43.063 513.047 43.2212 512.952 43.3213 cv
510.999 45.3916 li
510.817 45.4702 li
cp
f
512.885 44.9155 mo
511.497 44.708 li
511.36 44.6875 511.267 44.5601 511.287 44.4233 cv
511.308 44.2876 511.425 44.1924 511.571 44.2139 cv
512.922 44.4185 li
513.059 44.439 513.152 44.5664 513.132 44.7031 cv
513.113 44.8267 513.007 44.9155 512.885 44.9155 cv
cp
f
503.979 46.4341 mo
504.254 46.6011 504.648 46.7539 505.033 46.562 cv
505.395 46.3809 505.641 46.085 505.797 45.8301 cv
503.979 46.4341 li
cp
504.651 47.1538 mo
503.908 47.1538 503.309 46.5518 503.277 46.5195 cv
503.213 46.2856 li
503.377 46.1074 li
506.188 45.1729 li
506.441 45.2305 li
506.508 45.4805 li
506.495 45.5234 506.187 46.5435 505.257 47.0093 cv
505.05 47.1123 504.846 47.1538 504.651 47.1538 cv
cp
f
506.885 39.6753 mo
506.676 39.5474 li
506.352 38.9165 505.483 39.0918 505.446 39.1001 cv
505.327 39.125 505.194 39.0469 505.168 38.9189 cv
505.141 38.7925 505.221 38.6675 505.348 38.6401 cv
505.399 38.6284 506.604 38.3799 507.094 39.3325 cv
507.153 39.4482 507.107 39.5898 506.992 39.6494 cv
506.885 39.6753 li
cp
.521569 .517647 .588235 rgb
f
503 38.8618 mo
502.794 38.7529 li
502.673 38.5771 502.533 38.4814 502.366 38.4609 cv
501.976 38.4185 501.515 38.7949 501.511 38.7993 cv
501.406 38.8906 501.249 38.8813 501.157 38.7773 cv
501.066 38.6738 501.075 38.5161 501.179 38.4243 cv
501.204 38.4028 501.805 37.8804 502.428 37.9648 cv
502.741 38.0034 503.003 38.1738 503.206 38.4707 cv
503.284 38.5845 503.255 38.7402 503.142 38.8184 cv
503 38.8618 li
cp
f
465.433 53.0601 mo
462.892 53.0601 461.927 51.6489 461.882 51.582 cv
461.806 51.4668 461.838 51.312 461.953 51.2358 cv
462.065 51.1597 462.222 51.1904 462.299 51.3052 cv
462.342 51.3691 463.39 52.8657 466.308 52.5044 cv
468.946 52.1777 469.865 50.6919 469.874 50.6772 cv
469.944 50.5576 470.1 50.52 470.216 50.5903 cv
470.335 50.6606 470.374 50.8125 470.305 50.9312 cv
470.264 51.001 469.269 52.6421 466.368 53.0005 cv
466.035 53.0415 465.724 53.0601 465.433 53.0601 cv
cp
1 1 1 rgb
f
534.36 149.184 mo
534.179 149.106 li
534.087 149.009 524.893 139.248 517.021 123.869 cv
509.139 108.469 508.98 91.2876 508.979 91.1157 cv
508.979 90.9775 509.091 90.8652 509.229 90.8647 cv
509.367 90.8647 509.479 90.9761 509.479 91.1138 cv
509.48 91.2842 509.64 108.351 517.466 123.641 cv
525.305 138.956 534.45 148.666 534.542 148.762 cv
534.637 148.862 534.633 149.02 534.532 149.115 cv
534.36 149.184 li
cp
.988235 .737255 .286275 rgb
f
504.982 55.4932 mo
503.056 55.4932 501.481 54.7163 501.401 54.6763 cv
501.278 54.6143 501.229 54.4639 501.29 54.3408 cv
501.353 54.2173 501.502 54.1675 501.626 54.229 cv
501.648 54.2407 503.908 55.3521 506.217 54.8696 cv
509.435 54.1953 510.938 52.4927 510.953 52.4756 cv
511.045 52.3716 511.202 52.3594 511.306 52.4497 cv
511.41 52.5396 511.422 52.6968 511.332 52.8018 cv
511.268 52.8765 509.715 54.6475 506.318 55.3589 cv
505.864 55.4541 505.414 55.4932 504.982 55.4932 cv
cp
1 1 1 rgb
f
495.658 92.2402 mo
495.559 92.2183 li
495.441 92.1636 495.39 92.0234 495.445 91.9058 cv
496.122 90.4512 li
496.176 90.333 496.316 90.2822 496.435 90.3369 cv
496.552 90.3916 496.603 90.5317 496.548 90.6494 cv
495.871 92.104 li
495.658 92.2402 li
cp
0 0 0 rgb
f
501.658 41.9395 mo
501.485 41.9165 501.391 41.7896 501.411 41.6533 cv
501.587 40.457 li
501.188 40.1323 li
501.08 40.0454 501.063 39.8882 501.15 39.7808 cv
501.239 39.6738 501.396 39.6572 501.502 39.7446 cv
502.012 40.1587 li
502.102 40.3887 li
501.905 41.7256 li
501.888 41.8501 501.78 41.9395 501.658 41.9395 cv
cp
f
505.636 42.2588 mo
505.467 42.2393 505.37 42.1143 505.388 41.9771 cv
505.541 40.7788 li
504.964 40.3325 li
504.854 40.248 504.835 40.0908 504.92 39.9819 cv
505.004 39.8716 505.161 39.8521 505.271 39.937 cv
505.96 40.4707 li
506.055 40.7002 li
505.884 42.0405 li
505.867 42.1665 505.76 42.2588 505.636 42.2588 cv
cp
f
495.997 165.969 mo
495.862 165.969 495.751 165.862 495.747 165.726 cv
495.74 165.491 495.105 142.096 497 130.89 cv
497.022 130.754 497.143 130.66 497.288 130.685 cv
497.424 130.708 497.516 130.837 497.492 130.973 cv
495.606 142.131 496.24 165.478 496.247 165.712 cv
496.251 165.85 496.143 165.965 496.004 165.969 cv
495.997 165.969 li
cp
.988235 .737255 .286275 rgb
f
514.04 42.6982 mo
514.04 42.6982 512.686 41.2495 510.512 42.0776 cv
509.232 43.6958 li
509.232 43.6958 506.175 40.873 505.459 38.3984 cv
504.857 36.3193 504.49 35.3125 504.49 35.3125 cv
501.291 37.8716 li
501.291 37.8716 500.266 34.8706 502.373 33.1299 cv
502.533 32.998 502.693 32.8755 502.844 32.772 cv
505.055 33.4307 507.389 34.2495 509.787 35.2183 cv
511.255 35.811 512.676 36.4321 514.021 37.0625 cv
514.803 39.791 514.04 42.6982 514.04 42.6982 cv
cp
.741176 .741176 .776471 rgb
f
426.397 72.8428 mo
426.397 72.8428 433.925 70.9917 438.629 67.7358 cv
443.333 64.4795 454.379 51.3745 454.379 51.3745 cv
452.746 76.9917 li
452.746 76.9917 453.995 80.8374 445.224 84.1069 cv
436.903 87.208 431.501 87.6895 431.501 87.6895 cv
426.397 72.8428 li
cp
.658824 .368627 .278431 rgb
f
462.424 78.6226 mo
462.424 78.6226 454.235 74.2002 450.822 74.4082 cv
447.408 74.6162 442.988 81.374 443.07 82.0601 cv
443.152 82.7466 444.275 82.231 444.275 82.231 cv
444.275 82.231 444.246 83.2495 444.592 83.8721 cv
444.938 84.4946 446.345 83.7222 446.345 83.7222 cv
446.345 83.7222 445.979 85.2202 447.146 85.374 cv
448.313 85.5278 450.58 85.3154 450.781 84.4302 cv
450.981 83.5454 450.523 83.1182 450.523 83.1182 cv
450.981 83.5454 li
450.981 83.5454 451.333 85.0894 453.826 86.1538 cv
456.319 87.2188 460.469 84.9063 460.469 84.9063 cv
462.424 78.6226 li
cp
.976471 .521569 .458824 rgb
f
444.727 82.1768 mo
444.572 82.123 li
444.464 82.0376 444.444 81.8809 444.53 81.772 cv
447.272 78.2871 li
447.357 78.1787 447.516 78.1606 447.623 78.2456 cv
447.731 78.3306 447.751 78.4878 447.665 78.5967 cv
444.923 82.0815 li
444.727 82.1768 li
cp
0 0 0 rgb
f
446.345 83.9722 mo
446.188 83.9175 li
446.081 83.8315 446.063 83.6738 446.149 83.5659 cv
449.344 79.5669 li
449.431 79.46 449.589 79.4424 449.695 79.5278 cv
449.803 79.6138 449.82 79.7715 449.734 79.8794 cv
446.54 83.8784 li
446.345 83.9722 li
cp
f
477.479 52.2686 mo
477.479 52.2686 489.202 59.8369 488.938 74.8682 cv
488.674 89.8994 460.768 88.9868 459.732 88.7231 cv
458.698 88.4595 458.698 88.4595 458.698 88.4595 cv
458.698 88.4595 456.025 75.1113 456.667 74.6133 cv
457.308 74.1157 472.298 71.8989 472.298 71.8989 cv
477.479 52.2686 li
cp
.658824 .368627 .278431 rgb
f
473.354 69.2388 mo
473.354 69.2388 481.495 70.8672 479.635 72.6504 cv
477.773 74.4341 473.121 73.271 473.121 73.271 cv
473.354 69.2388 li
cp
.976471 .521569 .458824 rgb
f
469.369 69.1919 mo
469.369 69.1919 470.014 64.4624 472.164 65.9673 cv
474.313 67.4722 475.173 76.0713 472.594 76.9312 cv
470.014 77.791 469.369 69.1919 469.369 69.1919 cv
cp
f
465.443 69.6221 mo
465.443 69.6221 466.088 64.8926 468.238 66.3975 cv
470.388 67.9023 471.248 76.501 468.668 77.3613 cv
466.088 78.2212 465.443 69.6221 465.443 69.6221 cv
cp
f
461.774 71.1187 mo
461.774 71.1187 461.623 66.8975 463.725 67.8857 cv
465.826 68.8735 467.873 76.2422 465.753 77.3809 cv
463.633 78.52 461.774 71.1187 461.774 71.1187 cv
cp
f
466.454 75.3516 mo
466.336 75.3516 466.23 75.2676 466.208 75.147 cv
465.197 69.6675 li
465.173 69.5317 465.263 69.4014 465.398 69.376 cv
465.531 69.3506 465.664 69.4409 465.689 69.5767 cv
466.7 75.0562 li
466.725 75.1919 466.635 75.3223 466.499 75.3477 cv
466.454 75.3516 li
cp
0 0 0 rgb
f
470.259 73.856 mo
470.132 73.856 470.023 73.7603 470.01 73.6318 cv
469.47 68.4536 li
469.456 68.3164 469.556 68.1934 469.692 68.1792 cv
469.835 68.165 469.953 68.2651 469.968 68.4019 cv
470.508 73.5801 li
470.521 73.7173 470.422 73.8403 470.285 73.8545 cv
470.259 73.856 li
cp
f
479.814 67.5029 mo
478.952 67.5029 477.199 68.459 475.867 69.3301 cv
477.36 69.2266 479.648 68.9194 480.2 68.1987 cv
480.298 68.0718 480.326 67.9438 480.29 67.7959 cv
480.257 67.6636 480.191 67.5854 480.076 67.543 cv
480.003 67.5156 479.914 67.5029 479.814 67.5029 cv
cp
474.997 69.8721 mo
474.89 69.8721 474.794 69.8032 474.76 69.7012 cv
474.726 69.5967 474.763 69.4824 474.852 69.4189 cv
475.262 69.1255 478.891 66.5703 480.25 67.0742 cv
480.521 67.1743 480.702 67.3823 480.775 67.6758 cv
480.848 67.9702 480.786 68.2559 480.598 68.5029 cv
479.65 69.7397 475.476 69.8623 475.002 69.8721 cv
474.997 69.8721 li
cp
1 1 1 rgb
f
441.261 66.9341 mo
441.928 68.0996 443.251 70.0317 444.737 70.0977 cv
444.953 70.105 445 70.0728 445 70.0718 cv
444.972 69.7144 443.169 68.2598 441.261 66.9341 cv
cp
444.799 70.5986 mo
444.716 70.5967 li
442.287 70.4893 440.429 66.4429 440.351 66.2705 cv
440.305 66.1689 440.331 66.0493 440.416 65.9771 cv
440.501 65.9043 440.622 65.8979 440.717 65.959 cv
442.601 67.21 445.722 69.4326 445.451 70.2627 cv
445.379 70.4858 445.159 70.5986 444.799 70.5986 cv
cp
f
511.826 47.248 mo
511.826 46.6909 511.374 46.2388 510.817 46.2388 cv
510.26 46.2388 509.808 46.6909 509.808 47.248 cv
509.808 47.8057 510.26 48.2573 510.817 48.2573 cv
511.374 48.2573 511.826 47.8057 511.826 47.248 cv
cp
f
499.956 42.123 mo
502.1 42.3286 li
502.229 40.9727 li
500.086 40.7671 li
499.956 42.123 li
cp
502.324 42.8511 mo
499.66 42.5972 li
499.491 42.5073 li
499.435 42.3242 li
499.612 40.4707 li
499.625 40.333 499.744 40.2354 499.885 40.2456 cv
502.525 40.4985 li
502.694 40.5884 li
502.751 40.7715 li
502.573 42.625 li
502.561 42.7544 502.452 42.8511 502.324 42.8511 cv
cp
.968627 .772549 .215686 rgb
f
503.857 42.7046 mo
506.388 42.9468 li
506.518 41.5908 li
503.987 41.3481 li
503.857 42.7046 li
cp
506.612 43.4692 mo
503.562 43.1787 li
503.393 43.0889 li
503.336 42.9058 li
503.514 41.0518 li
503.527 40.9146 503.646 40.812 503.786 40.8267 cv
506.813 41.1167 li
506.982 41.2065 li
507.039 41.3896 li
506.861 43.2432 li
506.849 43.3726 506.74 43.4692 506.612 43.4692 cv
cp
f
504.048 41.874 mo
503.887 41.8149 li
503.068 41.1216 502.217 41.625 502.183 41.6465 cv
502.063 41.7178 501.91 41.6802 501.839 41.5635 cv
501.768 41.4458 501.804 41.293 501.92 41.2207 cv
502.327 40.9678 503.33 40.6885 504.209 41.4331 cv
504.314 41.5225 504.328 41.6802 504.238 41.7856 cv
504.048 41.874 li
cp
f
506.702 42.5425 mo
506.607 42.5425 506.517 42.4883 506.475 42.397 cv
506.417 42.2715 506.471 42.1235 506.596 42.0654 cv
506.683 42.0259 508.78 41.084 512.889 41.689 cv
513.025 41.7095 513.12 41.8364 513.1 41.9731 cv
513.08 42.1089 512.946 42.2021 512.816 42.1841 cv
508.871 41.6016 506.826 42.5103 506.806 42.5195 cv
506.702 42.5425 li
cp
f
486.258 95.2827 mo
485.598 95.2827 484.976 94.8804 484.728 94.2261 cv
484.335 93.1885 483.232 89.7173 485.559 88.6167 cv
485.974 88.4199 487.078 87.897 504.016 88.9272 cv
504.918 88.9824 505.605 89.7583 505.55 90.6611 cv
505.495 91.5645 504.711 92.248 503.816 92.1958 cv
497.181 91.7925 489.798 91.4873 487.412 91.5913 cv
487.469 92.0132 487.612 92.5938 487.791 93.0684 cv
488.107 93.9141 487.681 94.8579 486.836 95.1768 cv
486.646 95.2485 486.45 95.2827 486.258 95.2827 cv
cp
.709804 .313726 .282353 rgb
f
494.856 186.068 mo
493.948 186.065 493.217 185.331 493.219 184.426 cv
493.467 89.9331 li
493.47 89.0303 494.202 88.3003 495.104 88.3003 cv
496.013 88.3027 496.744 89.0376 496.742 89.9419 cv
496.494 184.435 li
496.491 185.338 495.759 186.068 494.856 186.068 cv
cp
f
425.428 81.9263 mo
425.428 81.9263 423.435 86.8545 424.414 88.0742 cv
425.394 89.2944 429.957 83.1963 429.957 83.1963 cv
425.428 81.9263 li
cp
.976471 .521569 .458824 rgb
f
424.765 88.4858 mo
424.541 88.4858 424.354 88.3975 424.219 88.2305 cv
423.178 86.9341 424.986 82.3511 425.196 81.833 cv
425.247 81.7051 425.396 81.6431 425.521 81.6948 cv
425.649 81.7466 425.711 81.8926 425.659 82.0205 cv
424.91 83.8735 423.963 87.1128 424.609 87.9175 cv
424.771 87.9854 li
425.723 87.9692 428.334 84.9478 429.757 83.0464 cv
429.84 82.936 429.998 82.9141 430.106 82.9961 cv
430.218 83.0791 430.24 83.2354 430.157 83.3462 cv
429.766 83.8696 426.287 88.46 424.778 88.4854 cv
424.765 88.4858 li
cp
0 0 0 rgb
f
501.345 80.4175 mo
501.345 80.4175 492.578 83.5405 490.448 86.2153 cv
488.317 88.8906 490.379 96.6982 490.944 97.0967 cv
491.509 97.4951 491.878 96.3159 491.878 96.3159 cv
491.878 96.3159 492.614 97.019 493.309 97.1787 cv
494.002 97.3389 494.37 95.7764 494.37 95.7764 cv
494.37 95.7764 495.239 97.0508 496.135 96.2866 cv
497.03 95.5225 498.39 93.6963 497.866 92.9546 cv
497.343 92.2129 496.719 92.2671 496.719 92.2671 cv
497.343 92.2129 li
497.343 92.2129 498.726 92.9858 501.186 91.8457 cv
503.646 90.7061 504.705 86.0757 504.705 86.0757 cv
501.345 80.4175 li
cp
.976471 .521569 .458824 rgb
f
491.953 96.0264 mo
491.833 96.0264 491.728 95.9404 491.707 95.8188 cv
490.954 91.4487 li
490.931 91.3125 491.021 91.1831 491.158 91.1597 cv
491.29 91.1353 491.423 91.228 491.446 91.3638 cv
492.199 95.7339 li
492.223 95.8701 492.132 95.9995 491.995 96.0229 cv
491.953 96.0264 li
cp
0 0 0 rgb
f
494.37 96.0264 mo
494.25 96.0264 494.144 95.9395 494.123 95.8169 cv
493.291 90.7666 li
493.269 90.6304 493.361 90.502 493.497 90.4795 cv
493.631 90.4565 493.763 90.5488 493.785 90.6855 cv
494.617 95.7358 li
494.64 95.8721 494.547 96.0005 494.411 96.0229 cv
494.37 96.0264 li
cp
f
518.981 54.1646 mo
518.981 54.1646 536.62 65.5347 534.835 79.8081 cv
533.229 92.6548 504.185 93.0923 504.185 93.0923 cv
500.981 78.7949 li
511.951 74.5215 li
518.981 54.1646 li
cp
.976471 .678431 .384314 rgb
f
501.514 79.3735 mo
501.42 79.3735 501.329 79.3198 501.287 79.229 cv
501.229 79.1035 501.283 78.9551 501.408 78.897 cv
501.976 78.6333 515.389 72.4478 522.788 72.3682 cv
522.928 72.3682 523.039 72.4785 523.041 72.6152 cv
523.043 72.7534 522.932 72.8667 522.794 72.8682 cv
515.502 72.9468 501.757 79.2861 501.619 79.3501 cv
501.514 79.3735 li
cp
1 1 1 rgb
f
518.834 70.5972 mo
517.269 70.5972 516.074 72.4121 515.521 73.4463 cv
517.626 72.2407 519.287 71.0234 519.287 70.6611 cv
519.289 70.6626 519.218 70.6182 518.965 70.6016 cv
518.834 70.5972 li
cp
514.949 74.3018 mo
514.782 74.2383 li
514.704 74.1675 514.678 74.0552 514.718 73.9575 cv
514.785 73.793 516.414 69.9429 518.998 70.1025 cv
519.455 70.1323 519.717 70.2837 519.776 70.5532 cv
519.98 71.4795 516.553 73.4619 515.069 74.271 cv
514.949 74.3018 li
cp
f
472.416 34.2222 mo
472.416 34.2222 476.452 27.6646 480.556 30.3877 cv
484.658 33.1113 478.325 40.4087 473.825 39.1768 cv
469.325 37.9443 472.416 34.2222 472.416 34.2222 cv
cp
.741176 .741176 .776471 rgb
f
502.844 32.772 mo
502.844 32.772 506.605 30.4336 511.826 32.772 cv
517.047 35.1113 516.158 43.2075 516.158 43.2075 cv
511.143 38.8389 li
504.861 33.7739 li
502.844 32.772 li
cp
f
189.461 377.632 mo
155.581 377.632 128.115 374.987 128.115 371.725 cv
128.115 368.463 155.581 365.818 189.461 365.818 cv
201.468 365.818 212.667 366.15 222.125 366.724 cv
225.637 367.123 230.017 367.478 235.069 367.775 cv
244.854 368.821 250.808 370.206 250.808 371.725 cv
250.808 374.987 223.342 377.632 189.461 377.632 cv
.92549 .913725 .933333 rgb
f
273.318 368.756 mo
258.817 368.756 245.505 368.388 235.069 367.775 cv
231.287 367.37 226.929 367.016 222.125 366.724 cv
216.131 366.044 212.659 365.237 212.659 364.371 cv
212.659 361.95 239.817 359.987 273.318 359.987 cv
306.819 359.987 333.978 361.95 333.978 364.371 cv
333.978 366.793 306.819 368.756 273.318 368.756 cv
f
235.069 367.775 mo
230.017 367.478 225.637 367.123 222.125 366.724 cv
226.929 367.016 231.287 367.37 235.069 367.775 cv
.858823 .831372 .870588 rgb
f
237.348 252.088 mo
237.348 252.088 241.793 262.037 242.904 268.926 cv
244.015 275.815 243.793 278.037 243.793 278.037 cv
235.459 279.593 li
221.904 248.26 li
237.348 252.088 li
cp
.976471 .521569 .458824 rgb
f
177.081 254.193 mo
177.081 254.193 186.555 268.037 196.459 263.926 cv
206.364 259.815 193.57 249.639 193.57 249.639 cv
193.57 249.639 186.633 251.357 182.658 247.89 cv
178.682 244.422 177.081 254.193 177.081 254.193 cv
cp
f
213.473 346.832 mo
213.583 355.691 li
201.133 354.442 li
201.103 352.023 li
201.03 346.142 li
213.473 346.832 li
cp
f
231.131 340.689 mo
234.624 349.048 li
222.598 352.517 li
221.644 350.234 li
219.325 344.685 li
231.131 340.689 li
cp
f
200.222 281.368 mo
200.222 281.368 194.226 346.949 194.45 347.921 cv
194.675 348.892 214.811 348.27 214.811 348.27 cv
216.288 342.229 li
214.695 281.188 li
200.222 281.368 li
cp
.709804 .415686 .301961 rgb
f
228.23 270.27 mo
228.23 270.27 231.106 279.365 231.01 288.718 cv
230.915 298.07 228.33 312.342 228.768 313.399 cv
229.206 314.456 235.925 341.983 235.925 341.983 cv
214.897 348.269 li
214.897 348.269 207.933 321.311 207.68 313.875 cv
207.428 306.439 210.269 285.363 210.269 285.363 cv
200.222 281.368 li
201.119 272.301 li
228.23 270.27 li
cp
f
214.439 346.396 mo
214.33 346.396 214.23 346.324 214.199 346.215 cv
213.925 345.242 207.485 322.341 207.722 316.824 cv
207.948 311.559 209.84 287.604 210.008 285.49 cv
203.61 281.257 li
203.495 281.181 203.463 281.026 203.54 280.911 cv
203.615 280.795 203.771 280.763 203.886 280.841 cv
210.407 285.155 li
210.482 285.205 210.525 285.292 210.518 285.383 cv
210.497 285.643 208.457 311.372 208.222 316.846 cv
207.988 322.282 214.613 345.841 214.68 346.078 cv
214.718 346.212 214.64 346.35 214.507 346.387 cv
214.439 346.396 li
cp
1 1 1 rgb
f
224.182 311.063 mo
223.845 311.063 223.526 311.14 223.241 311.319 cv
223.058 311.435 222.986 311.531 222.996 311.577 cv
223.104 312.066 225.555 312.684 228.017 313.045 cv
227.169 312.309 225.537 311.063 224.182 311.063 cv
cp
228.768 313.649 mo
227.339 313.474 222.76 312.818 222.508 311.686 cv
222.443 311.396 222.601 311.131 222.974 310.896 cv
225.228 309.479 228.796 313.07 228.946 313.225 cv
229.021 313.3 229.04 313.415 228.992 313.51 cv
228.95 313.596 228.862 313.649 228.768 313.649 cv
cp
f
213.251 365.179 mo
214.121 365.108 214.781 364.324 214.753 363.393 cv
214.643 359.711 214.847 351.445 214.175 351.466 cv
213.319 351.492 204.789 354.099 204.789 354.099 cv
204.789 354.099 204.39 349.006 200.868 350.028 cv
198.166 350.813 195.108 354.152 193.832 355.664 cv
193.426 356.144 192.904 356.484 192.318 356.65 cv
189.801 357.36 182.884 359.653 182.897 363.4 cv
182.914 367.981 184.734 367.403 185.59 367.377 cv
186.326 367.354 207.32 365.658 213.251 365.179 cv
cp
.929412 .701961 .141176 rgb
f
237.514 358.221 mo
238.302 357.846 238.641 356.877 238.283 356.017 cv
236.871 352.615 234.121 344.818 233.5 345.076 cv
232.709 345.405 225.664 350.875 225.664 350.875 cv
225.664 350.875 223.479 346.258 220.552 348.466 cv
218.306 350.161 216.636 354.369 215.98 356.235 cv
215.772 356.828 215.405 357.333 214.917 357.695 cv
212.817 359.255 207.168 363.858 208.514 367.355 cv
210.158 371.632 211.653 370.443 212.445 370.114 cv
213.124 369.832 232.142 360.778 237.514 358.221 cv
cp
f
236.288 275.819 mo
236.288 275.819 231.778 281.659 233.1 283.896 cv
233.917 285.277 235.577 281.459 235.577 281.459 cv
236.089 286.071 li
236.089 286.071 237.126 291.087 237.957 291.762 cv
238.788 292.438 239.47 290.27 239.47 290.27 cv
239.47 290.27 240.142 293.875 241.438 292.652 cv
242.735 291.43 242.51 288.842 242.51 288.842 cv
242.51 288.842 243 292.452 244.429 290.844 cv
245.202 289.974 245.808 281.168 243.332 276.719 cv
240.856 272.271 237.419 273.549 237.419 273.549 cv
236.288 275.819 li
cp
.976471 .521569 .458824 rgb
f
202.504 231.713 mo
202.504 231.713 199.636 219.558 208.505 216.906 cv
217.374 214.254 218.493 226.962 218.493 226.962 cv
218.493 226.962 228.34 228.376 228.835 237.866 cv
229.454 249.728 217.896 248.254 217.896 248.254 cv
206.833 244.324 li
206.833 244.324 195.685 238.894 202.504 231.713 cv
cp
0 0 0 rgb
f
169.079 247.774 mo
173.699 249.639 li
174.063 247.614 li
171.388 245.74 li
169.079 247.774 li
cp
.976471 .521569 .458824 rgb
f
178.366 243.75 mo
178.366 243.75 177.243 240.552 178.503 240.338 cv
180.11 240.064 183.556 247.419 182.59 250.267 cv
181.623 253.114 177.081 254.193 177.081 254.193 cv
177.081 254.193 171.838 248.19 172.513 246.096 cv
173.187 244.001 175.854 244.586 175.854 244.586 cv
175.854 244.586 178.636 246.627 178.366 243.75 cv
cp
f
224.972 241.843 mo
224.94 241.226 224.382 240.082 223.329 238.916 cv
221.156 236.512 217.912 235.367 214.681 235.631 cv
206.251 236.321 li
204.936 236.544 203.948 237.647 203.872 238.979 cv
200.122 273.351 li
200.122 273.351 210.46 273.486 215.762 273.156 cv
222.617 272.729 229.263 271.063 229.263 271.063 cv
224.972 241.843 li
cp
.658824 .368627 .278431 rgb
f
204.879 263.008 mo
204.879 263.008 199.02 265.838 192.729 265.568 cv
192.08 248.358 li
192.219 248.308 192.359 248.248 192.479 248.178 cv
195.959 246.138 204.56 237.288 204.56 237.288 cv
204.879 263.008 li
cp
f
169.95 247.921 mo
167.507 248.15 165.341 246.355 165.112 243.913 cv
164.894 241.593 li
164.847 241.087 165.219 240.638 165.725 240.59 cv
172.738 239.933 li
173.244 239.886 173.693 240.258 173.741 240.764 cv
173.958 243.083 li
174.187 245.526 172.393 247.692 169.95 247.921 cv
cp
.847059 .266667 .152941 rgb
f
171.615 247.434 mo
171.485 247.434 171.362 247.354 171.312 247.227 cv
171.247 247.059 171.33 246.87 171.497 246.806 cv
172.852 246.278 176.332 244.5 176.165 242.631 cv
176.125 242.183 175.96 241.87 175.66 241.676 cv
174.936 241.206 173.568 241.518 173.102 241.678 cv
172.933 241.735 172.747 241.646 172.689 241.476 cv
172.631 241.306 172.721 241.121 172.891 241.063 cv
172.972 241.035 174.878 240.394 176.014 241.13 cv
176.486 241.437 176.754 241.922 176.813 242.572 cv
177.057 245.31 171.95 247.327 171.732 247.411 cv
171.615 247.434 li
cp
f
174.854 243.487 mo
174.601 243.237 174.428 242.863 174.416 242.424 cv
174.401 241.907 174.62 241.34 175.674 241.396 cv
177.573 241.498 180.673 244.436 179.285 245.593 cv
178.135 246.551 175.668 244.293 174.854 243.487 cv
cp
.976471 .521569 .458824 rgb
f
174.275 245.725 mo
174.01 245.485 173.82 245.12 173.788 244.682 cv
173.75 244.167 173.942 243.59 174.999 243.598 cv
176.899 243.612 180.132 246.403 178.797 247.624 cv
177.692 248.634 175.125 246.491 174.275 245.725 cv
cp
f
178.4 248.236 mo
177.056 248.236 174.96 246.759 174.479 246.405 cv
174.368 246.324 174.344 246.168 174.425 246.057 cv
174.507 245.944 174.666 245.922 174.775 246.003 cv
176.101 246.975 178.233 248.114 178.824 247.618 cv
178.913 247.427 li
178.943 247 178.402 246.224 178.054 245.835 cv
177.969 245.738 177.97 245.594 178.057 245.499 cv
178.145 245.404 178.289 245.392 178.392 245.469 cv
178.402 245.477 179.415 246.223 179.886 245.816 cv
179.926 245.783 179.978 245.722 179.98 245.583 cv
179.989 244.988 179.131 243.794 177.845 242.611 cv
177.743 242.519 177.737 242.36 177.83 242.259 cv
177.924 242.157 178.082 242.149 178.184 242.244 cv
178.727 242.743 180.498 244.461 180.48 245.591 cv
180.476 245.839 180.384 246.048 180.213 246.195 cv
179.875 246.488 179.442 246.475 179.057 246.36 cv
179.264 246.712 179.436 247.115 179.412 247.461 cv
179.397 247.68 179.305 247.866 179.146 248 cv
178.95 248.166 178.693 248.236 178.4 248.236 cv
cp
0 0 0 rgb
f
178.241 245.918 mo
178.106 245.879 li
174.864 243.809 li
174.748 243.734 174.713 243.579 174.788 243.463 cv
174.863 243.347 175.017 243.314 175.133 243.387 cv
178.375 245.457 li
178.492 245.531 178.526 245.687 178.452 245.803 cv
178.241 245.918 li
cp
f
179.45 250.729 mo
179.337 250.729 179.235 250.653 179.208 250.538 cv
179.18 250.426 178.545 247.749 179.587 246.327 cv
179.669 246.216 179.825 246.191 179.937 246.273 cv
180.048 246.354 180.072 246.511 179.991 246.622 cv
179.086 247.856 179.687 250.396 179.693 250.421 cv
179.726 250.555 179.643 250.689 179.509 250.723 cv
179.45 250.729 li
cp
f
201.229 264.176 mo
201.077 264.168 200.972 264.05 200.98 263.911 cv
201.18 260.414 li
201.188 260.277 201.298 260.191 201.444 260.179 cv
201.582 260.188 201.687 260.305 201.679 260.443 cv
201.479 263.94 li
201.472 264.073 201.361 264.176 201.229 264.176 cv
cp
.968627 .772549 .215686 rgb
f
207.61 233.621 mo
207.617 233.752 li
207.84 236.218 li
208.403 238.515 li
208.403 238.515 207.861 238.609 210.11 238.36 cv
213.123 238.016 214.038 236.673 214.038 236.673 cv
213.96 232.126 li
213.052 232.343 li
207.61 233.621 li
cp
.976471 .521569 .458824 rgb
f
207.617 233.752 mo
207.84 236.218 li
209.3 235.973 211.944 235.215 212.919 232.856 cv
212.993 232.665 213.041 232.493 213.052 232.352 cv
207.625 233.714 li
207.617 233.752 li
cp
0 0 0 rgb
f
206.122 221.972 mo
206.122 221.972 203.604 228.531 204.78 232.1 cv
205.958 235.667 209.224 234.949 211.163 234.161 cv
213.101 233.373 213.96 232.123 213.96 232.123 cv
213.96 232.123 215.829 232.663 216.982 230.896 cv
218.135 229.129 217.288 227.198 216.216 226.796 cv
215.146 226.394 213.93 227.209 213.93 227.209 cv
214.825 225.295 li
214.825 225.295 210.272 215.981 206.122 221.972 cv
cp
.976471 .521569 .458824 rgb
f
206.951 220.979 mo
206.951 220.979 206.903 224.411 210.417 225.81 cv
213.93 227.209 216.216 226.796 216.216 226.796 cv
215.79 222.343 li
211.268 217.856 li
207.47 219.26 li
206.951 220.979 li
cp
0 0 0 rgb
f
213.652 226.232 mo
213.754 228.181 li
215.41 226.392 li
213.652 226.232 li
cp
f
208.678 231.7 mo
208.587 231.7 208.5 231.65 208.455 231.563 cv
208.393 231.441 208.441 231.291 208.563 231.228 cv
208.568 231.225 209.055 230.968 209.321 230.383 cv
209.379 230.258 209.527 230.202 209.652 230.259 cv
209.778 230.315 209.833 230.464 209.776 230.59 cv
209.435 231.341 208.816 231.66 208.79 231.674 cv
208.678 231.7 li
cp
f
205.409 224.41 mo
205.294 224.41 205.191 224.331 205.165 224.215 cv
205.135 224.08 205.219 223.946 205.354 223.916 cv
206.542 223.65 li
206.677 223.622 206.81 223.705 206.84 223.84 cv
206.87 223.975 206.786 224.108 206.651 224.139 cv
205.463 224.404 li
205.409 224.41 li
cp
f
209.56 227.673 mo
209.404 227.662 209.3 227.543 209.31 227.405 cv
209.388 226.294 li
208.856 225.725 li
208.763 225.623 208.768 225.465 208.869 225.371 cv
208.971 225.277 209.128 225.281 209.223 225.384 cv
209.828 226.033 li
209.894 226.221 li
209.809 227.44 li
209.799 227.572 209.689 227.673 209.56 227.673 cv
cp
f
206.002 227.679 mo
205.846 227.669 205.743 227.549 205.752 227.411 cv
205.83 226.301 li
205.299 225.73 li
205.205 225.63 205.21 225.472 205.312 225.378 cv
205.413 225.284 205.571 225.288 205.665 225.391 cv
206.27 226.04 li
206.336 226.228 li
206.251 227.446 li
206.242 227.578 206.132 227.679 206.002 227.679 cv
cp
f
218.073 235.878 mo
218.073 235.878 228.237 239.221 233.57 245.099 cv
238.904 250.977 241.379 256.532 241.379 256.532 cv
225.458 262.178 li
218.073 235.878 li
cp
.658824 .368627 .278431 rgb
f
214.303 230.097 mo
214.127 230.024 li
214.029 229.928 214.028 229.77 214.125 229.671 cv
215.939 227.827 li
216.037 227.73 216.194 227.727 216.293 227.825 cv
216.392 227.922 216.393 228.08 216.296 228.179 cv
214.481 230.022 li
214.303 230.097 li
cp
0 0 0 rgb
f
216.493 229.738 mo
216.426 229.729 li
214.986 229.324 li
214.853 229.287 214.775 229.149 214.813 229.017 cv
214.85 228.883 214.988 228.803 215.121 228.844 cv
216.561 229.248 li
216.694 229.285 216.771 229.423 216.734 229.556 cv
216.703 229.666 216.603 229.738 216.493 229.738 cv
cp
f
206.815 230.243 mo
206.714 230.243 206.619 230.182 206.582 230.081 cv
205.841 228.122 207.196 226.822 207.254 226.768 cv
207.354 226.674 207.512 226.679 207.606 226.779 cv
207.701 226.879 207.696 227.037 207.596 227.132 cv
207.548 227.178 206.43 228.265 207.049 229.905 cv
207.098 230.034 207.033 230.179 206.904 230.227 cv
206.815 230.243 li
cp
f
226.312 254.736 mo
226.146 254.777 li
225.97 254.855 225.851 254.992 225.78 255.196 cv
225.483 256.063 226.15 257.83 226.676 258.962 cv
226.87 257.229 226.906 255.141 226.429 254.776 cv
226.312 254.736 li
cp
226.817 260.056 mo
226.727 260.056 226.642 260.007 226.598 259.925 cv
226.523 259.788 224.786 256.557 225.307 255.034 cv
225.423 254.695 225.638 254.455 225.945 254.32 cv
226.317 254.156 226.58 254.261 226.733 254.379 cv
227.721 255.136 227.183 259.063 227.064 259.843 cv
227.048 259.949 226.966 260.033 226.86 260.052 cv
226.817 260.056 li
cp
.968627 .772549 .215686 rgb
f
214.303 235.883 mo
214.303 235.883 211.707 239.781 209.946 241.727 cv
207.834 236.947 li
211.674 235.292 li
214.303 235.883 li
cp
.976471 .521569 .458824 rgb
f
205.589 245.349 mo
205.372 245.223 li
205.303 245.103 205.345 244.949 205.465 244.881 cv
211.304 241.563 214.048 235.618 214.075 235.559 cv
214.132 235.434 214.282 235.377 214.406 235.435 cv
214.532 235.491 214.587 235.64 214.53 235.766 cv
214.503 235.826 211.696 241.915 205.712 245.316 cv
205.589 245.349 li
cp
.968627 .772549 .215686 rgb
f
209.946 241.977 mo
209.761 241.895 li
208.454 240.455 207.419 236.607 207.375 236.444 cv
207.34 236.311 207.419 236.174 207.553 236.139 cv
207.688 236.103 207.823 236.183 207.859 236.315 cv
207.869 236.354 208.906 240.209 210.131 241.559 cv
210.224 241.661 210.216 241.819 210.114 241.912 cv
209.946 241.977 li
cp
f
239.469 290.52 mo
239.347 290.52 239.241 290.43 239.222 290.306 cv
238.178 283.178 li
238.158 283.041 238.252 282.914 238.389 282.895 cv
238.521 282.869 238.652 282.969 238.673 283.105 cv
239.717 290.233 li
239.737 290.37 239.643 290.497 239.506 290.517 cv
239.469 290.52 li
cp
0 0 0 rgb
f
242.509 289.092 mo
242.393 289.092 242.288 289.01 242.265 288.891 cv
241.134 283.19 li
241.107 283.055 241.195 282.923 241.331 282.896 cv
241.466 282.873 241.598 282.957 241.625 283.093 cv
242.755 288.793 li
242.782 288.929 242.694 289.061 242.559 289.087 cv
242.509 289.092 li
cp
f
322.325 336.226 mo
254.587 336.226 li
250.775 336.226 247.685 333.136 247.685 329.324 cv
247.685 266.015 li
247.685 262.203 250.775 259.112 254.587 259.112 cv
322.325 259.112 li
326.137 259.112 329.227 262.203 329.227 266.015 cv
329.227 329.324 li
329.227 333.136 326.137 336.226 322.325 336.226 cv
cp
.780392 .74902 .807843 rgb
f
307.953 336.226 mo
240.216 336.226 li
236.404 336.226 233.314 333.136 233.314 329.324 cv
233.314 266.015 li
233.314 262.203 236.404 259.112 240.216 259.112 cv
307.953 259.112 li
311.765 259.112 314.855 262.203 314.855 266.015 cv
314.855 329.324 li
314.855 333.136 311.765 336.226 307.953 336.226 cv
cp
.886275 .87451 .898039 rgb
f
329.104 333.521 mo
329.104 338.157 li
329.104 339.375 329.027 340.561 328.879 341.693 cv
328.122 347.431 325.576 351.654 322.547 351.654 cv
248.685 351.654 li
245.655 351.654 243.104 347.431 242.348 341.693 cv
242.199 340.561 242.122 339.375 242.122 338.157 cv
242.122 333.521 li
242.122 326.068 245.059 320.023 248.685 320.023 cv
322.547 320.023 li
326.168 320.023 329.104 326.068 329.104 333.521 cv
cp
.67451 .631373 .698039 rgb
f
318.631 333.713 mo
318.631 338.35 li
318.631 339.567 318.552 340.753 318.399 341.886 cv
317.625 347.623 315.017 351.847 311.914 351.847 cv
236.257 351.847 li
233.154 351.847 230.541 347.623 229.767 341.886 cv
229.614 340.753 229.535 339.567 229.535 338.35 cv
229.535 333.713 li
229.535 326.261 232.543 320.216 236.257 320.216 cv
311.914 320.216 li
315.623 320.216 318.631 326.261 318.631 333.713 cv
cp
.733333 .686275 .752941 rgb
f
243.162 364.484 mo
242.619 364.484 li
241.286 364.484 240.158 363.498 239.979 362.177 cv
238.086 348.127 li
246.428 348.127 li
245.822 361.938 li
245.76 363.362 244.587 364.484 243.162 364.484 cv
cp
f
259.506 364.484 mo
258.963 364.484 li
257.629 364.484 256.502 363.498 256.324 362.177 cv
254.431 348.127 li
262.771 348.127 li
262.166 361.938 li
262.104 363.362 260.931 364.484 259.506 364.484 cv
cp
.67451 .631373 .698039 rgb
f
305.38 364.484 mo
305.923 364.484 li
307.256 364.484 308.384 363.498 308.562 362.177 cv
310.455 348.127 li
302.113 348.127 li
302.719 361.938 li
302.781 363.362 303.954 364.484 305.38 364.484 cv
cp
.733333 .686275 .752941 rgb
f
321.896 363.513 mo
322.439 363.513 li
323.772 363.513 324.9 362.526 325.079 361.205 cv
326.972 347.155 li
318.631 347.155 li
319.236 360.966 li
319.299 362.39 320.472 363.513 321.896 363.513 cv
cp
.67451 .631373 .698039 rgb
f
278.172 257.784 mo
278.172 257.784 281.188 251.697 285.064 253.819 cv
288.456 255.677 286.231 259.876 284.481 261.08 cv
282.731 262.284 280.985 262.298 280.985 262.298 cv
280.985 262.298 284.337 265.505 282.617 269.937 cv
280.898 274.368 272.481 274.088 272.481 269.937 cv
272.481 265.784 278.172 257.784 278.172 257.784 cv
cp
.741176 .741176 .776471 rgb
f
247.46 318.77 mo
247.46 325.907 241.674 331.694 234.536 331.694 cv
227.398 331.694 221.612 325.907 221.612 318.77 cv
221.612 311.632 227.398 305.846 234.536 305.846 cv
241.674 305.846 247.46 311.632 247.46 318.77 cv
cp
.866667 .843137 .878431 rgb
f
240.274 318.77 mo
240.274 321.938 237.705 324.508 234.536 324.508 cv
231.368 324.508 228.799 321.938 228.799 318.77 cv
228.799 315.602 231.368 313.032 234.536 313.032 cv
237.705 313.032 240.274 315.602 240.274 318.77 cv
cp
.733333 .686275 .752941 rgb
f
300.462 324.784 mo
300.462 326.804 291.092 328.441 279.532 328.441 cv
267.972 328.441 258.601 326.804 258.601 324.784 cv
258.601 322.764 267.972 321.127 279.532 321.127 cv
291.092 321.127 300.462 322.764 300.462 324.784 cv
cp
.686275 .647059 .709804 rgb
f
255.008 345.766 mo
255.008 345.766 256.355 353.972 256.037 354.541 cv
255.719 355.111 248.546 366.15 248.835 368.618 cv
249.124 371.086 251.128 371.62 251.128 371.62 cv
251.128 371.62 274.477 354.26 274.935 353.244 cv
275.393 352.229 268.408 341.887 268.408 341.887 cv
255.008 345.766 li
cp
.976471 .521569 .458824 rgb
f
250.181 371.114 mo
274.272 351.356 li
276.785 354.76 li
252.275 374.011 li
250.181 371.114 li
cp
.709804 .313726 .282353 rgb
f
251.093 362.875 mo
253.297 359.006 li
259.538 363.44 li
257.078 366.558 li
251.093 362.875 li
cp
f
225.67 352.938 mo
225.67 352.938 221.252 359.982 220.637 360.2 cv
220.021 360.417 207.34 363.951 205.925 365.993 cv
204.509 368.035 205.659 369.762 205.659 369.762 cv
205.659 369.762 234.653 372.186 235.668 371.727 cv
236.684 371.269 238.868 353.925 238.868 353.925 cv
225.67 352.938 li
cp
.976471 .521569 .458824 rgb
f
205.283 368.756 mo
236.42 369.872 li
236.054 374.087 li
204.938 372.313 li
205.283 368.756 li
cp
.709804 .313726 .282353 rgb
f
211.417 363.18 mo
215.629 361.735 li
217.377 369.189 li
213.47 369.9 li
211.417 363.18 li
cp
f
259.324 316.318 mo
274.234 344.709 li
253.819 353.925 li
244.82 336.749 li
249.433 317.15 li
259.324 316.318 li
cp
.333333 .447059 .305882 rgb
f
286.727 305.466 mo
286.727 305.466 288.089 319.382 284.264 321.163 cv
280.439 322.943 254.759 325.663 253.341 326.776 cv
251.923 327.889 242.408 358.835 242.408 358.835 cv
219.127 356.754 li
219.127 356.754 227.629 315.751 233.666 311.826 cv
242.122 306.33 263.765 305.466 263.765 305.466 cv
286.727 305.466 li
cp
.372549 .517647 .341176 rgb
f
247.635 342.574 mo
247.557 342.562 li
247.426 342.519 247.354 342.377 247.398 342.246 cv
247.591 341.657 252.152 327.806 253.15 326.616 cv
254.166 325.402 261.877 324.792 262.753 324.727 cv
262.885 324.702 263.01 324.818 263.021 324.957 cv
263.031 325.095 262.928 325.215 262.79 325.225 cv
259.563 325.467 254.196 326.146 253.533 326.937 cv
252.756 327.864 249.184 338.415 247.873 342.402 cv
247.838 342.508 247.74 342.574 247.635 342.574 cv
cp
.968627 .701961 .411765 rgb
f
249.833 322.047 mo
249.676 322.047 249.531 322.113 249.386 322.248 cv
249.254 322.371 249.2 322.518 249.213 322.708 cv
249.298 323.89 251.858 325.973 253.115 326.883 cv
252.643 325.624 251.173 322.346 249.978 322.064 cv
249.833 322.047 li
cp
253.225 327.517 mo
253.082 327.472 li
252.648 327.171 248.839 324.478 248.714 322.744 cv
248.69 322.405 248.805 322.107 249.045 321.883 cv
249.353 321.596 249.715 321.488 250.092 321.578 cv
251.763 321.97 253.396 326.207 253.576 326.688 cv
253.624 326.817 253.559 326.962 253.43 327.011 cv
253.315 327.025 li
253.367 327.062 li
253.48 327.14 253.509 327.296 253.43 327.409 cv
253.225 327.517 li
cp
f
267.358 262.553 mo
267.358 262.553 265.957 259.284 266.225 257.851 cv
266.493 256.416 272.177 252.196 276.941 254.487 cv
281.704 256.778 281.95 263.081 280.838 265.673 cv
277.976 272.348 272.233 269.19 272.233 269.19 cv
272.233 269.19 263.056 266.271 267.358 262.553 cv
cp
.741176 .741176 .776471 rgb
f
287.201 306.317 mo
287.201 306.317 287.186 280.193 285.643 278.426 cv
280.885 272.974 269.466 271.144 263.906 275.293 cv
260.425 277.891 260.939 285.739 261.102 297.394 cv
261.193 303.951 261.45 306.317 261.45 306.317 cv
287.201 306.317 li
cp
1 .65098 .231373 rgb
f
268.099 270.149 mo
268.092 270.279 li
268.07 272.733 li
268.044 274.658 li
268.044 274.658 267.856 275.096 270.1 275.07 cv
273.106 275.026 274.141 273.791 274.141 273.791 cv
274.51 269.297 li
273.593 269.422 li
268.099 270.149 li
cp
.976471 .521569 .458824 rgb
f
268.092 270.279 mo
268.07 272.733 li
269.535 272.635 272.218 272.147 273.412 269.915 cv
273.504 269.733 273.567 269.569 273.592 269.431 cv
268.104 270.242 li
268.092 270.279 li
cp
0 0 0 rgb
f
267.773 258.509 mo
267.773 258.509 264.645 264.734 265.456 268.37 cv
266.267 272.006 269.561 271.618 271.55 271.03 cv
273.54 270.442 274.511 269.294 274.511 269.294 cv
274.511 269.294 276.301 270.011 277.612 268.38 cv
278.924 266.749 278.277 264.762 277.26 264.259 cv
276.242 263.757 274.963 264.442 274.963 264.442 cv
276.034 262.642 li
276.034 262.642 272.456 253.006 267.773 258.509 cv
cp
.976471 .521569 .458824 rgb
f
274.963 264.442 mo
274.963 264.442 272.247 262.885 271.335 260.832 cv
270.422 258.78 270.432 257.773 270.432 257.773 cv
270.432 257.773 269.962 259.068 268.933 259.33 cv
267.904 259.592 267.271 259.598 267.271 259.598 cv
266.535 261.436 li
267.167 256.999 li
267.167 256.999 269.986 255.659 270.354 255.677 cv
270.722 255.694 275.328 256.745 275.583 257.037 cv
275.839 257.33 277.133 261.006 277.133 261.006 cv
277.158 262.641 li
274.963 264.442 li
cp
.741176 .741176 .776471 rgb
f
329.227 331.694 mo
295.967 331.694 li
295.967 305.846 li
329.227 305.846 li
329.227 331.694 li
cp
.780392 .74902 .807843 rgb
f
308.891 318.77 mo
308.891 325.907 303.104 331.694 295.967 331.694 cv
288.829 331.694 283.043 325.907 283.043 318.77 cv
283.043 311.632 288.829 305.846 295.967 305.846 cv
303.104 305.846 308.891 311.632 308.891 318.77 cv
cp
.866667 .843137 .878431 rgb
f
301.704 318.77 mo
301.704 321.938 299.136 324.508 295.967 324.508 cv
292.798 324.508 290.229 321.938 290.229 318.77 cv
290.229 315.602 292.798 313.032 295.967 313.032 cv
299.136 313.032 301.704 315.602 301.704 318.77 cv
cp
.733333 .686275 .752941 rgb
f
269.862 275.317 mo
268.493 275.317 267.569 274.974 267.496 274.945 cv
267.367 274.896 267.304 274.751 267.353 274.622 cv
267.402 274.493 267.549 274.426 267.676 274.479 cv
267.708 274.491 270.982 275.698 274.368 273.382 cv
274.483 273.303 274.639 273.332 274.716 273.446 cv
274.794 273.561 274.765 273.716 274.651 273.794 cv
272.886 275.003 271.171 275.317 269.862 275.317 cv
cp
1 1 1 rgb
f
355.469 314.629 mo
352.214 321.182 346.843 325.136 343.473 323.462 cv
340.103 321.787 340.009 315.118 343.264 308.566 cv
346.519 302.014 351.89 298.06 355.26 299.733 cv
358.63 301.407 358.724 308.076 355.469 314.629 cv
cp
.513726 .619608 .490196 rgb
f
320.698 314.157 mo
327.073 317.747 330.745 323.314 328.899 326.594 cv
327.053 329.873 320.389 329.622 314.013 326.033 cv
307.638 322.444 303.966 316.876 305.812 313.597 cv
307.658 310.317 314.322 310.568 320.698 314.157 cv
cp
f
319.364 340.642 mo
314.001 339.832 309.99 336.94 310.406 334.182 cv
310.822 331.423 315.508 329.842 320.871 330.651 cv
326.234 331.46 330.245 334.353 329.829 337.111 cv
329.413 339.87 324.728 341.451 319.364 340.642 cv
cp
f
350.32 321.748 mo
356.163 317.344 362.735 316.21 365 319.216 cv
367.266 322.221 364.365 328.227 358.522 332.631 cv
352.681 337.034 346.107 338.168 343.843 335.162 cv
341.577 332.157 344.478 326.151 350.32 321.748 cv
cp
f
335.907 345.629 mo
335.801 345.629 335.701 345.56 335.668 345.453 cv
331.827 333.021 318.557 334.886 318.422 334.906 cv
318.287 334.924 318.157 334.833 318.137 334.697 cv
318.116 334.561 318.21 334.433 318.346 334.412 cv
318.482 334.391 332.175 332.457 336.146 345.305 cv
336.187 345.437 336.113 345.577 335.981 345.618 cv
335.907 345.629 li
cp
.866667 .843137 .878431 rgb
f
337.017 344.692 mo
336.902 344.692 336.8 344.614 336.773 344.499 cv
333.222 329.268 319.942 320.632 319.809 320.547 cv
319.692 320.473 319.658 320.317 319.732 320.201 cv
319.808 320.086 319.962 320.053 320.078 320.125 cv
320.214 320.212 333.663 328.958 337.26 344.386 cv
337.291 344.521 337.208 344.654 337.073 344.686 cv
337.017 344.692 li
cp
f
336.117 350.831 mo
335.993 350.831 335.886 350.739 335.869 350.612 cv
333.961 335.664 349.562 308.807 349.72 308.537 cv
349.79 308.416 349.943 308.377 350.062 308.447 cv
350.181 308.518 350.221 308.67 350.151 308.789 cv
349.994 309.058 334.479 335.77 336.365 350.55 cv
336.383 350.687 336.286 350.812 336.148 350.829 cv
336.117 350.831 li
cp
f
337.684 343.594 mo
337.514 343.573 337.418 343.447 337.436 343.311 cv
337.45 343.199 339.128 332.086 357.074 323.848 cv
357.2 323.789 357.348 323.845 357.406 323.971 cv
357.464 324.097 357.408 324.245 357.283 324.303 cv
339.61 332.415 337.946 343.269 337.932 343.377 cv
337.914 343.503 337.807 343.594 337.684 343.594 cv
cp
f
346.343 366.703 mo
331.26 366.703 li
330.442 366.703 329.758 366.12 329.677 365.356 cv
327.37 343.383 li
327.277 342.505 328.013 341.743 328.952 341.743 cv
348.65 341.743 li
349.59 341.743 350.325 342.505 350.233 343.383 cv
347.926 365.356 li
347.846 366.12 347.161 366.703 346.343 366.703 cv
cp
.815686 .788235 .827451 rgb
f
343.005 366.703 mo
327.922 366.703 li
327.104 366.703 326.419 366.12 326.339 365.356 cv
324.031 343.383 li
323.939 342.505 324.674 341.743 325.614 341.743 cv
345.312 341.743 li
346.252 341.743 346.986 342.505 346.895 343.383 cv
344.587 365.356 li
344.507 366.12 343.822 366.703 343.005 366.703 cv
cp
.866667 .843137 .878431 rgb
f
268.078 267.645 mo
268.187 267.797 268.377 267.948 268.629 267.927 cv
268.896 267.899 269.185 267.652 269.409 267.398 cv
268.078 267.645 li
cp
268.567 268.431 mo
267.926 268.431 267.568 267.856 267.466 267.536 cv
267.489 267.332 li
267.658 267.214 li
269.944 266.791 li
270.044 266.77 270.14 266.813 270.195 266.895 cv
270.205 267.165 li
270.133 267.285 269.479 268.343 268.68 268.425 cv
268.567 268.431 li
cp
0 0 0 rgb
f
274.866 267.581 mo
274.686 267.504 li
274.59 267.404 274.594 267.246 274.693 267.15 cv
276.707 265.225 li
276.808 265.131 276.965 265.132 277.061 265.232 cv
277.156 265.332 277.152 265.49 277.053 265.586 cv
275.039 267.512 li
274.866 267.581 li
cp
f
277.01 267.125 mo
275.48 266.967 li
275.344 266.952 275.244 266.829 275.258 266.691 cv
275.272 266.555 275.396 266.451 275.533 266.469 cv
277.036 266.626 li
277.173 266.641 277.272 266.764 277.259 266.901 cv
277.245 267.029 277.137 267.125 277.01 267.125 cv
cp
f
271.57 261.538 mo
271.507 261.53 li
269.927 261.115 li
269.793 261.08 269.713 260.943 269.748 260.81 cv
269.784 260.677 269.915 260.6 270.054 260.631 cv
271.634 261.046 li
271.768 261.081 271.848 261.218 271.813 261.352 cv
271.782 261.464 271.682 261.538 271.57 261.538 cv
cp
.521569 .517647 .588235 rgb
f
267.944 261.123 mo
266.761 261.123 li
266.623 261.123 266.511 261.011 266.511 260.873 cv
266.511 260.735 266.623 260.623 266.761 260.623 cv
267.944 260.623 li
268.082 260.623 268.194 260.735 268.194 260.873 cv
268.194 261.011 268.082 261.123 267.944 261.123 cv
cp
f
267.353 266.241 mo
267.251 266.241 267.155 266.179 267.118 266.077 cv
266.537 264.494 268.316 263.106 268.393 263.048 cv
268.501 262.964 268.657 262.982 268.743 263.094 cv
268.827 263.203 268.807 263.36 268.697 263.444 cv
268.682 263.456 267.133 264.668 267.587 265.905 cv
267.635 266.035 267.568 266.179 267.438 266.226 cv
267.353 266.241 li
cp
0 0 0 rgb
f
270.617 264.315 mo
270.438 264.288 270.347 264.158 270.371 264.022 cv
270.562 262.941 li
270.065 262.481 li
269.964 262.387 269.958 262.229 270.052 262.128 cv
270.146 262.028 270.305 262.021 270.405 262.114 cv
271.001 262.667 li
271.077 262.894 li
270.863 264.108 li
270.842 264.23 270.736 264.315 270.617 264.315 cv
cp
f
266.845 263.893 mo
266.665 263.865 266.574 263.735 266.599 263.6 cv
266.789 262.519 li
266.293 262.059 li
266.191 261.964 266.186 261.807 266.279 261.705 cv
266.374 261.605 266.532 261.599 266.633 261.691 cv
267.229 262.244 li
267.305 262.471 li
267.091 263.686 li
267.069 263.808 266.964 263.893 266.845 263.893 cv
cp
f
104.491 366.952 mo
70.6098 366.952 43.1445 365.425 43.1445 363.54 cv
43.1445 361.655 70.6098 360.128 104.491 360.128 cv
138.372 360.128 165.837 361.655 165.837 363.54 cv
165.837 365.425 138.372 366.952 104.491 366.952 cv
.92549 .913725 .933333 rgb
f
72.0664 364.676 mo
71.5176 364.676 li
70.1689 364.676 69.0288 363.679 68.8486 362.342 cv
66.9341 348.133 li
75.3691 348.133 li
74.7568 362.101 li
74.6938 363.54 73.5078 364.676 72.0664 364.676 cv
cp
.733333 .686275 .752941 rgb
f
56.7114 363.605 mo
56.1621 363.605 li
54.814 363.605 53.6733 362.607 53.4932 361.271 cv
51.5786 347.063 li
60.0142 347.063 li
59.4019 361.03 li
59.3384 362.47 58.1528 363.605 56.7114 363.605 cv
cp
.67451 .631373 .698039 rgb
f
54.9297 336.097 mo
123.434 336.097 li
127.289 336.097 130.414 332.972 130.414 329.117 cv
130.414 265.091 li
130.414 261.236 127.289 258.111 123.434 258.111 cv
54.9297 258.111 li
51.0747 258.111 47.9497 261.236 47.9497 265.091 cv
47.9497 329.117 li
47.9497 332.972 51.0747 336.097 54.9297 336.097 cv
cp
.780392 .74902 .807843 rgb
f
69.4639 336.097 mo
137.968 336.097 li
141.823 336.097 144.948 332.972 144.948 329.117 cv
144.948 265.091 li
144.948 261.236 141.823 258.111 137.968 258.111 cv
69.4639 258.111 li
65.6089 258.111 62.4839 261.236 62.4839 265.091 cv
62.4839 329.117 li
62.4839 332.972 65.6089 336.097 69.4639 336.097 cv
cp
.886275 .87451 .898039 rgb
f
48.0728 333.361 mo
48.0728 338.051 li
48.0728 339.281 48.1504 340.48 48.3013 341.626 cv
49.0659 347.429 51.6406 351.7 54.7046 351.7 cv
129.403 351.7 li
132.467 351.7 135.047 347.429 135.812 341.626 cv
135.962 340.48 136.04 339.281 136.04 338.051 cv
136.04 333.361 li
136.04 325.824 133.07 319.712 129.403 319.712 cv
54.7046 319.712 li
51.0425 319.712 48.0728 325.824 48.0728 333.361 cv
cp
.67451 .631373 .698039 rgb
f
58.665 333.556 mo
58.665 338.245 li
58.665 339.476 58.7451 340.675 58.8994 341.82 cv
59.6826 347.623 62.3203 351.895 65.458 351.895 cv
141.971 351.895 li
145.109 351.895 147.752 347.623 148.535 341.82 cv
148.69 340.675 148.77 339.476 148.77 338.245 cv
148.77 333.556 li
148.77 326.019 145.728 319.906 141.971 319.906 cv
65.458 319.906 li
61.7075 319.906 58.665 326.019 58.665 333.556 cv
cp
.733333 .686275 .752941 rgb
f
134.989 364.676 mo
135.538 364.676 li
136.886 364.676 138.026 363.679 138.207 362.342 cv
140.121 348.133 li
131.686 348.133 li
132.298 362.101 li
132.361 363.54 133.547 364.676 134.989 364.676 cv
cp
.27451 .27451 .498039 rgb
f
130.641 318.443 mo
130.641 325.662 136.493 331.514 143.711 331.514 cv
150.93 331.514 156.782 325.662 156.782 318.443 cv
156.782 311.225 150.93 305.373 143.711 305.373 cv
136.493 305.373 130.641 311.225 130.641 318.443 cv
cp
.866667 .843137 .878431 rgb
f
137.909 318.443 mo
137.909 321.648 140.507 324.246 143.711 324.246 cv
146.916 324.246 149.514 321.648 149.514 318.443 cv
149.514 315.239 146.916 312.641 143.711 312.641 cv
140.507 312.641 137.909 315.239 137.909 318.443 cv
cp
.27451 .27451 .498039 rgb
f
77.0391 323.604 mo
77.0391 325.647 86.5166 327.304 98.207 327.304 cv
109.897 327.304 119.375 325.647 119.375 323.604 cv
119.375 321.562 109.897 319.906 98.207 319.906 cv
86.5166 319.906 77.0391 321.562 77.0391 323.604 cv
cp
.686275 .647059 .709804 rgb
f
47.9497 331.514 mo
81.5859 331.514 li
81.5859 305.373 li
47.9497 305.373 li
47.9497 331.514 li
cp
.780392 .74902 .807843 rgb
f
68.5156 318.443 mo
68.5156 325.662 74.3672 331.514 81.5859 331.514 cv
88.8042 331.514 94.6558 325.662 94.6558 318.443 cv
94.6558 311.225 88.8042 305.373 81.5859 305.373 cv
74.3672 305.373 68.5156 311.225 68.5156 318.443 cv
cp
.866667 .843137 .878431 rgb
f
75.7832 318.443 mo
75.7832 321.648 78.3809 324.246 81.5859 324.246 cv
84.7905 324.246 87.3882 321.648 87.3882 318.443 cv
87.3882 315.239 84.7905 312.641 81.5859 312.641 cv
78.3809 312.641 75.7832 315.239 75.7832 318.443 cv
cp
.733333 .686275 .752941 rgb
f
145.615 275.856 mo
145.615 275.856 146.381 272.459 148.196 270.911 cv
150.012 269.363 152.159 268.366 151.783 269.743 cv
151.408 271.121 150.151 273.371 150.151 273.371 cv
153.444 272.494 li
153.444 272.494 155.591 271.497 157.151 271.082 cv
158.711 270.666 159.202 271.813 159.202 271.813 cv
159.202 271.813 160.762 271.397 161.44 271.855 cv
162.119 272.313 161.638 273.293 161.638 273.293 cv
161.638 273.293 163.876 273.336 163.034 275.051 cv
162.191 276.765 157.761 279.647 155.614 280.646 cv
153.467 281.643 148.628 282.292 148.628 282.292 cv
148.628 282.292 144.283 283.242 145.615 275.856 cv
cp
.976471 .521569 .458824 rgb
f
157.658 276.666 mo
157.54 276.637 li
151.827 273.574 li
151.706 273.509 151.66 273.357 151.725 273.235 cv
151.791 273.113 151.942 273.069 152.063 273.133 cv
157.776 276.195 li
157.897 276.261 157.943 276.412 157.878 276.534 cv
157.658 276.666 li
cp
0 0 0 rgb
f
118.55 276.141 mo
114.188 272.661 li
108.692 272.245 li
103.624 274.127 li
106.276 306.942 li
106.276 306.942 114.262 309.12 119.532 306.341 cv
124.802 303.562 118.55 276.141 118.55 276.141 cv
cp
.372549 .517647 .341176 rgb
f
98.1875 275.41 mo
100.664 273.113 104.698 272.48 107.068 272.308 cv
107.068 272.308 106.487 287.846 107.306 297.409 cv
107.769 302.814 108.05 306.576 108.207 308.828 cv
102.516 308.969 96.1543 308.791 96.1543 308.791 cv
96.1543 308.791 94.5229 278.807 98.1875 275.41 cv
cp
.709804 .313726 .282353 rgb
f
123.763 297.001 mo
123.73 302.771 123.597 307.452 123.597 307.452 cv
123.597 307.452 122.527 308.199 118.624 308.882 cv
118.426 306.402 117.336 297.955 116.655 291.646 cv
115.783 283.578 114.188 272.661 114.188 272.661 cv
107.068 272.311 li
107.788 272.258 108.361 272.245 108.692 272.245 cv
108.889 272.245 109.004 272.251 109.004 272.251 cv
109.004 272.251 117.039 272.58 120.84 274.608 cv
120.84 274.608 120.936 274.66 121.107 274.753 cv
121.757 275.14 122.266 275.586 122.546 276.092 cv
123.654 278.081 123.82 288.67 123.763 297.001 cv
cp
f
102.688 273.057 mo
102.688 273.057 93.7056 274.491 88.3857 281.559 cv
83.8247 287.618 82.3647 294.512 82.3647 294.512 cv
82.3647 294.512 87.4155 293.662 90.4741 293.693 cv
93.5332 293.726 97.9326 294.088 97.9326 294.088 cv
102.688 273.057 li
cp
f
98.0127 293.779 mo
97.8403 293.758 97.7451 293.631 97.7646 293.494 cv
98.146 290.817 li
98.166 290.681 98.2949 290.581 98.4287 290.605 cv
98.5654 290.625 98.6606 290.751 98.6411 290.888 cv
98.2598 293.564 li
98.2417 293.689 98.1348 293.779 98.0127 293.779 cv
cp
1 .65098 .231373 rgb
f
165.917 352.156 mo
165.917 352.156 169.878 356.872 170.801 357.322 cv
171.725 357.772 181.363 361.066 183.206 362.887 cv
185.049 364.708 185.166 368.271 184.635 368.604 cv
184.104 368.936 152.354 368.458 152.354 368.458 cv
152.089 353.145 li
165.917 352.156 li
cp
.709804 .415686 .301961 rgb
f
139.213 357.645 mo
139.213 357.645 140.806 363.946 142.109 364.614 cv
143.412 365.282 149.014 368.833 152.052 372.048 cv
154.6 374.743 152.033 376.272 152.033 376.272 cv
134.343 376.193 li
119.186 364.953 li
124.671 353.357 li
139.213 357.645 li
cp
f
169.117 355.394 mo
169.117 355.394 164.667 360.449 165.677 360.866 cv
166.688 361.283 175.246 360.013 175.029 359.097 cv
174.812 358.181 170.143 355.323 169.117 355.394 cv
cp
.313726 .470588 .286275 rgb
f
133.663 285.205 mo
133.663 285.205 138.389 283.569 140.934 281.569 cv
143.478 279.57 146.446 275.299 146.446 275.299 cv
152.361 281.626 li
152.361 281.626 147.477 300.655 134.117 298.928 cv
120.758 297.201 133.663 285.205 133.663 285.205 cv
cp
.976471 .521569 .458824 rgb
f
140.849 361.462 mo
140.849 361.462 135.156 365.063 136.009 365.748 cv
136.862 366.432 145.432 367.616 145.481 366.677 cv
145.531 365.736 141.853 361.683 140.849 361.462 cv
cp
.313726 .470588 .286275 rgb
f
172.883 352.224 mo
172.883 352.224 160.244 317.277 150.354 310.571 cv
142.312 305.118 121.644 305.08 121.644 305.08 cv
138.257 336.001 li
150.354 356.995 li
172.883 352.224 li
cp
.917647 .505882 .141176 rgb
f
142.71 359.449 mo
142.71 359.449 148.776 321.645 143.711 312.641 cv
138.647 303.637 108.283 304.72 108.283 304.72 cv
96.0688 306.989 li
96.0688 306.989 93.4648 319.897 100.963 323.846 cv
106.961 327.004 123.881 329.561 123.881 329.561 cv
119.021 359.449 li
142.71 359.449 li
cp
.94902 .552941 .164706 rgb
f
157.795 376.58 mo
157.036 376.58 156.42 375.965 156.42 375.205 cv
156.42 337.41 li
159.169 337.41 li
159.169 375.205 li
159.169 375.965 158.554 376.58 157.795 376.58 cv
cp
.780392 .74902 .807843 rgb
f
203.781 376.58 mo
203.021 376.58 202.406 375.965 202.406 375.205 cv
202.406 337.41 li
205.155 337.41 li
205.155 375.205 li
205.155 375.965 204.54 376.58 203.781 376.58 cv
cp
f
221.584 335.706 mo
221.584 337.881 203.319 339.644 180.788 339.644 cv
158.256 339.644 139.991 337.881 139.991 335.706 cv
139.991 333.531 158.256 331.768 180.788 331.768 cv
203.319 331.768 221.584 333.531 221.584 335.706 cv
cp
f
121.107 274.753 mo
136.057 284.162 li
135.769 300.026 li
135.769 300.026 123.772 301.995 121.852 297.833 cv
118.804 291.227 121.107 274.753 121.107 274.753 cv
cp
.709804 .313726 .282353 rgb
f
139.991 331.514 mo
139.991 335.706 li
221.584 335.706 li
221.584 331.514 li
139.991 331.514 li
cp
.780392 .74902 .807843 rgb
f
221.584 331.514 mo
221.584 333.688 203.319 335.452 180.788 335.452 cv
158.256 335.452 139.991 333.688 139.991 331.514 cv
139.991 329.339 158.256 327.575 180.788 327.575 cv
203.319 327.575 221.584 329.339 221.584 331.514 cv
cp
.866667 .843137 .878431 rgb
f
178.704 330.727 mo
165.528 330.727 li
166.398 329.976 li
166.539 329.854 166.719 329.787 166.905 329.787 cv
177.396 329.787 li
177.594 329.787 177.784 329.862 177.928 329.998 cv
178.704 330.727 li
cp
1 1 1 rgb
f
180.885 333.026 mo
167.709 333.026 li
168.579 332.275 li
168.72 332.153 168.9 332.086 169.086 332.086 cv
179.578 332.086 li
179.775 332.086 179.965 332.161 180.109 332.297 cv
180.885 333.026 li
cp
f
193.417 331.809 mo
180.242 331.809 li
180.242 331.033 li
193.417 331.033 li
193.417 331.809 li
cp
1 .74902 .411765 rgb
f
193.417 330.257 mo
180.242 330.257 li
180.242 329.481 li
193.417 329.481 li
193.417 330.257 li
cp
f
193.417 328.705 mo
180.242 328.705 li
180.242 327.93 li
193.417 327.93 li
193.417 328.705 li
cp
f
193.417 327.153 mo
180.242 327.153 li
180.242 326.378 li
193.417 326.378 li
193.417 327.153 li
cp
f
193.417 331.033 mo
180.242 331.033 li
180.242 330.257 li
193.417 330.257 li
193.417 331.033 li
cp
1 .65098 .231373 rgb
f
236.629 296.756 mo
236.629 296.756 238.851 300.646 243.5 299.724 cv
247.374 298.955 245.126 293.441 245.126 293.441 cv
236.629 296.756 li
cp
.976471 .521569 .458824 rgb
f
246.5 293.959 mo
243.489 301.324 li
243.489 301.324 261.417 305.146 264.667 294.906 cv
267.917 284.667 264.241 275.061 264.241 275.061 cv
246.333 289.671 li
246.5 293.959 li
cp
1 .65098 .231373 rgb
f
193.417 329.481 mo
180.242 329.481 li
180.242 328.705 li
193.417 328.705 li
193.417 329.481 li
cp
f
121.649 293.935 mo
115.599 293.935 li
115.255 293.935 114.978 293.656 114.978 293.313 cv
114.978 283.293 li
114.978 282.95 115.255 282.672 115.599 282.672 cv
121.649 282.672 li
121.992 282.672 122.271 282.95 122.271 283.293 cv
122.271 293.313 li
122.271 293.656 121.992 293.935 121.649 293.935 cv
cp
1 1 1 rgb
f
123.508 294.208 mo
117.628 292.781 li
117.294 292.701 117.09 292.365 117.171 292.031 cv
119.533 282.294 li
119.614 281.961 119.95 281.756 120.283 281.837 cv
126.163 283.264 li
126.497 283.344 126.702 283.68 126.621 284.014 cv
124.258 293.751 li
124.178 294.084 123.842 294.289 123.508 294.208 cv
cp
1 .65098 .231373 rgb
f
124.186 296.32 mo
118.946 293.296 li
118.648 293.124 118.546 292.744 118.718 292.447 cv
123.728 283.77 li
123.899 283.473 124.28 283.37 124.577 283.542 cv
129.817 286.567 li
130.114 286.739 130.216 287.119 130.044 287.416 cv
125.034 296.094 li
124.863 296.391 124.483 296.492 124.186 296.32 cv
cp
1 1 1 rgb
f
242.623 294.199 mo
236.723 295.542 li
236.389 295.618 236.056 295.408 235.979 295.074 cv
233.756 285.304 li
233.68 284.97 233.889 284.637 234.224 284.561 cv
240.124 283.218 li
240.458 283.142 240.791 283.351 240.867 283.686 cv
243.091 293.455 li
243.167 293.79 242.958 294.123 242.623 294.199 cv
cp
f
244.496 294.054 mo
238.446 293.968 li
238.103 293.963 237.829 293.681 237.834 293.338 cv
237.976 283.319 li
237.981 282.976 238.263 282.702 238.606 282.706 cv
244.656 282.793 li
245 282.798 245.274 283.079 245.269 283.423 cv
245.126 293.441 li
245.122 293.784 244.839 294.059 244.496 294.054 cv
cp
1 .65098 .231373 rgb
f
245.625 295.964 mo
239.845 294.177 li
239.517 294.075 239.333 293.728 239.435 293.399 cv
242.394 283.826 li
242.496 283.499 242.843 283.315 243.171 283.416 cv
248.952 285.203 li
249.28 285.305 249.463 285.652 249.362 285.98 cv
246.403 295.554 li
246.301 295.881 245.954 296.064 245.625 295.964 cv
cp
1 1 1 rgb
f
193.417 327.93 mo
180.242 327.93 li
180.242 327.153 li
193.417 327.153 li
193.417 327.93 li
cp
1 .65098 .231373 rgb
f
111.7 293.899 mo
111.7 293.899 112.692 290.295 113.442 289.658 cv
114.191 289.022 114.978 288.408 114.978 288.408 cv
114.978 290.853 li
112.634 294.884 li
111.7 293.899 li
cp
.976471 .521569 .458824 rgb
f
113.339 290.813 mo
113.123 290.689 li
113.053 290.57 113.094 290.417 113.213 290.348 cv
114.852 289.392 li
114.97 289.32 115.124 289.36 115.193 289.481 cv
115.263 289.601 115.223 289.754 115.104 289.823 cv
113.465 290.779 li
113.339 290.813 li
cp
0 0 0 rgb
f
83.6123 294.317 mo
83.6123 294.317 81.0239 302.449 87.417 306.063 cv
93.8096 309.676 115.42 299.441 115.42 299.441 cv
112.634 291.931 li
95.7949 293.693 li
95.7949 293.693 85.645 293.691 83.6123 294.317 cv
cp
.976471 .521569 .458824 rgb
f
127.725 325.944 mo
126.902 325.944 125.37 327.795 124.393 329.238 cv
125.388 329.076 127.478 328.622 128.137 327.59 cv
128.354 327.251 128.388 326.881 128.242 326.46 cv
128.076 325.981 127.856 325.956 127.784 325.947 cv
127.725 325.944 li
cp
123.881 329.812 mo
123.668 329.692 li
123.67 329.428 li
123.94 329.002 126.355 325.279 127.841 325.45 cv
128.117 325.482 128.492 325.655 128.714 326.296 cv
128.911 326.863 128.858 327.39 128.558 327.859 cv
127.556 329.428 124.055 329.795 123.906 329.811 cv
123.881 329.812 li
cp
1 1 1 rgb
f
100.127 312.343 mo
100.023 312.343 99.9268 312.277 99.8911 312.174 cv
99.8462 312.043 99.916 311.901 100.046 311.856 cv
100.084 311.844 103.792 310.535 103.355 307.793 cv
103.334 307.657 103.427 307.528 103.563 307.507 cv
103.697 307.485 103.828 307.578 103.85 307.715 cv
104.352 310.872 100.25 312.315 100.208 312.329 cv
100.127 312.343 li
cp
f
114.464 290.265 mo
114.464 290.265 128.451 289.807 128.202 290.958 cv
127.953 292.109 126.257 292.146 126.257 292.146 cv
126.257 292.146 129.05 292.408 128.601 293.456 cv
128.152 294.503 126.007 294.657 126.007 294.657 cv
126.007 294.657 127.84 295.396 126.955 296.349 cv
126.538 296.798 119.694 298.559 114.158 298.11 cv
108.622 297.661 109.443 293.935 109.443 293.935 cv
114.464 290.265 li
cp
.976471 .521569 .458824 rgb
f
126.257 292.396 mo
120.486 292.181 li
120.348 292.176 120.241 292.06 120.246 291.921 cv
120.251 291.783 120.367 291.692 120.505 291.681 cv
126.266 291.896 li
126.404 291.901 126.512 292.018 126.507 292.156 cv
126.501 292.291 126.391 292.396 126.257 292.396 cv
cp
0 0 0 rgb
f
126.007 294.907 mo
120.466 294.762 li
120.328 294.758 120.219 294.644 120.223 294.505 cv
120.227 294.367 120.352 294.273 120.479 294.262 cv
126.014 294.407 li
126.152 294.411 126.261 294.525 126.257 294.664 cv
126.254 294.8 126.143 294.907 126.007 294.907 cv
cp
f
121.167 297.292 mo
121.167 297.292 117.178 301.154 111.7 298.837 cv
104.846 295.938 115.599 293.935 115.599 293.935 cv
121.167 297.292 li
cp
.976471 .521569 .458824 rgb
f
146.541 278.513 mo
146.429 278.513 146.328 278.438 146.298 278.325 cv
146.264 278.191 146.344 278.056 146.478 278.021 cv
148.188 277.576 149.286 276.868 149.739 275.914 cv
150.212 274.919 149.794 273.981 149.79 273.972 cv
149.732 273.847 149.787 273.698 149.912 273.641 cv
150.035 273.582 150.185 273.637 150.243 273.762 cv
150.265 273.808 150.765 274.91 150.195 276.12 cv
149.677 277.218 148.469 278.021 146.604 278.505 cv
146.541 278.513 li
cp
0 0 0 rgb
f
239.5 288.178 mo
239.037 287.962 238.521 287.893 238.009 287.916 cv
236.28 287.993 231.473 289.066 231.179 290.874 cv
230.897 292.605 233.586 292.092 233.586 292.092 cv
233.586 292.092 231.502 292.938 232.565 294.161 cv
233.453 295.183 234.824 294.698 234.824 294.698 cv
234.824 294.698 232.741 295.787 234.582 296.816 cv
236.422 297.846 241.278 296.313 242.649 295.202 cv
244.02 294.091 241.625 293.008 241.625 293.008 cv
241.625 293.008 242.945 291.615 242.309 290.779 cv
241.636 289.896 240.195 290.462 240.195 290.462 cv
240.195 290.462 241.169 288.955 239.5 288.178 cv
cp
.976471 .521569 .458824 rgb
f
233.586 292.342 mo
233.472 292.342 233.369 292.264 233.342 292.147 cv
233.312 292.014 233.396 291.879 233.53 291.849 cv
239.616 290.447 li
239.754 290.412 239.885 290.5 239.916 290.635 cv
239.946 290.769 239.862 290.903 239.728 290.934 cv
233.642 292.335 li
233.586 292.342 li
cp
0 0 0 rgb
f
234.824 294.949 mo
234.711 294.949 234.608 294.873 234.581 294.758 cv
234.548 294.624 234.63 294.489 234.765 294.456 cv
240.854 292.976 li
240.991 292.943 241.123 293.025 241.156 293.16 cv
241.188 293.294 241.106 293.429 240.972 293.462 cv
234.883 294.942 li
234.824 294.949 li
cp
f
264.113 299.276 mo
264.113 299.276 263.078 299.455 261.672 299.348 cv
260.267 299.24 255.298 301.089 253.588 301.708 cv
251.878 302.328 248.24 306.094 248.907 306.564 cv
249.574 307.035 253.337 304.913 253.337 304.913 cv
253.337 304.913 250.882 309.168 251.537 309.691 cv
252.192 310.215 253.242 309.093 253.242 309.093 cv
253.242 309.093 252.455 310.375 253.511 310.492 cv
254.568 310.61 257.619 306.582 257.619 306.582 cv
257.619 306.582 256.615 310.212 257.359 310.364 cv
258.104 310.517 260.053 306.943 260.053 306.943 cv
260.053 306.943 263.862 308.752 265.375 306.25 cv
266.887 303.748 267.036 302.051 267.036 302.051 cv
264.113 299.276 li
cp
.976471 .521569 .458824 rgb
f
282.052 275.592 mo
282.052 275.592 295.967 282.946 292.207 298.555 cv
289.384 310.275 264.267 308.101 264.267 308.101 cv
263.906 297.308 li
263.906 297.308 277.754 293.549 278.83 292.962 cv
280.907 291.83 282.052 275.592 282.052 275.592 cv
cp
1 .65098 .231373 rgb
f
265.361 297.644 mo
265.268 297.644 265.177 297.59 265.135 297.499 cv
265.076 297.374 265.131 297.225 265.256 297.167 cv
265.333 297.131 273.052 293.571 280.941 292.173 cv
281.074 292.145 281.207 292.238 281.231 292.375 cv
281.256 292.512 281.165 292.641 281.029 292.665 cv
273.205 294.052 265.543 297.585 265.467 297.62 cv
265.361 297.644 li
cp
1 1 1 rgb
f
278.998 290.452 mo
278.297 290.452 277.193 291.698 276.36 292.89 cv
277.984 291.843 279.237 290.812 279.22 290.501 cv
279.158 290.477 li
278.998 290.452 li
cp
275.542 293.94 mo
275.365 293.867 li
275.284 293.786 275.269 293.66 275.327 293.563 cv
275.576 293.145 277.813 289.511 279.314 290.002 cv
279.634 290.106 279.703 290.322 279.716 290.441 cv
279.815 291.34 276.919 293.163 275.67 293.905 cv
275.542 293.94 li
cp
f
253.242 309.343 mo
253.118 309.31 li
252.998 309.241 252.957 309.089 253.025 308.969 cv
255.431 304.762 li
255.498 304.642 255.65 304.6 255.771 304.669 cv
255.892 304.737 255.933 304.89 255.864 305.01 cv
253.459 309.217 li
253.242 309.343 li
cp
0 0 0 rgb
f
253.337 305.163 mo
253.206 305.126 li
253.088 305.054 253.052 304.899 253.124 304.782 cv
253.769 303.736 li
253.84 303.617 253.993 303.581 254.112 303.654 cv
254.23 303.727 254.267 303.881 254.194 303.998 cv
253.55 305.044 li
253.337 305.163 li
cp
f
261.102 297.644 mo
260.965 297.644 260.854 297.534 260.852 297.397 cv
260.773 292.635 li
260.377 292.201 258.551 290 259.296 287.106 cv
260.207 283.569 262.537 279.902 262.561 279.865 cv
262.636 279.75 262.789 279.717 262.906 279.789 cv
263.022 279.864 263.057 280.019 262.982 280.135 cv
262.959 280.171 260.671 283.773 259.78 287.231 cv
259.036 290.12 261.178 292.337 261.199 292.358 cv
261.271 292.53 li
261.352 297.39 li
261.354 297.527 261.244 297.642 261.105 297.644 cv
261.102 297.644 li
cp
1 1 1 rgb
f
116.829 259.073 mo
116.829 259.073 118.632 253.175 115.981 251.945 cv
113.331 250.716 111.617 254.16 111.617 254.16 cv
111.617 254.16 105.62 254.555 103.273 257.708 cv
100.927 260.861 106.39 266.604 106.39 266.604 cv
116.829 259.073 li
cp
.741176 .741176 .776471 rgb
f
107.424 267.844 mo
106.941 273.542 li
106.941 273.542 107.816 275.017 111.015 275.551 cv
113.398 275.949 114.287 275.479 114.287 275.479 cv
114.188 272.661 li
114.089 269.914 li
108.381 268.142 li
107.424 267.844 li
cp
.976471 .521569 .458824 rgb
f
108.381 268.142 mo
108.383 268.293 108.425 268.476 108.497 268.687 cv
109.496 271.541 112.813 272.42 114.188 272.661 cv
114.089 269.914 li
108.381 268.142 li
cp
0 0 0 rgb
f
112.432 275.955 mo
109.164 275.955 106.999 273.909 106.892 273.807 cv
106.792 273.711 106.79 273.553 106.885 273.454 cv
106.983 273.354 107.141 273.352 107.239 273.447 cv
107.268 273.475 110.191 276.225 114.227 275.235 cv
114.363 275.201 114.497 275.285 114.529 275.419 cv
114.562 275.554 114.48 275.688 114.346 275.722 cv
113.675 275.886 113.034 275.955 112.432 275.955 cv
cp
1 .65098 .231373 rgb
f
116.381 257.468 mo
116.381 257.468 118.685 264.616 117.221 268.355 cv
115.757 272.094 112.313 271.137 110.29 270.183 cv
108.268 269.229 107.423 267.845 107.423 267.845 cv
107.423 267.845 105.397 268.312 104.27 266.358 cv
103.143 264.405 104.159 262.395 105.326 262.027 cv
106.493 261.66 107.742 262.602 107.742 262.602 cv
106.899 260.507 li
106.899 260.507 112.3 250.833 116.381 257.468 cv
cp
.976471 .521569 .458824 rgb
f
107.423 267.845 mo
107.423 267.845 105.583 276.293 113.165 277.111 cv
120.746 277.93 117.708 265.991 117.708 265.991 cv
117.708 265.991 117.251 265.206 114.978 265.206 cv
111.7 265.206 107.423 267.845 107.423 267.845 cv
cp
.741176 .741176 .776471 rgb
f
107.305 265.588 mo
107.142 265.527 li
104.813 263.533 li
104.708 263.444 104.696 263.286 104.786 263.182 cv
104.876 263.075 105.034 263.063 105.138 263.154 cv
107.467 265.148 li
107.572 265.237 107.584 265.396 107.495 265.5 cv
107.305 265.588 li
cp
0 0 0 rgb
f
105.046 265.365 mo
104.926 265.365 104.82 265.279 104.8 265.157 cv
104.777 265.021 104.869 264.892 105.005 264.869 cv
106.674 264.587 li
106.809 264.561 106.94 264.654 106.962 264.791 cv
106.985 264.928 106.894 265.057 106.757 265.079 cv
105.088 265.361 li
105.046 265.365 li
cp
f
115.533 265.365 mo
115.474 265.358 li
115.34 265.326 115.257 265.19 115.29 265.057 cv
115.676 263.454 114.715 262.494 114.674 262.454 cv
114.576 262.357 114.573 262.199 114.669 262.101 cv
114.765 262.002 114.922 261.998 115.021 262.095 cv
115.071 262.142 116.231 263.285 115.776 265.174 cv
115.748 265.288 115.646 265.365 115.533 265.365 cv
cp
f
116.654 262.85 mo
116.536 262.85 116.431 262.766 116.409 262.645 cv
116.171 261.353 li
116.146 261.217 116.236 261.087 116.372 261.062 cv
116.508 261.036 116.638 261.126 116.663 261.263 cv
116.901 262.555 li
116.926 262.69 116.836 262.82 116.7 262.846 cv
116.654 262.85 li
cp
f
113.164 262.622 mo
113.046 262.622 112.941 262.538 112.918 262.417 cv
112.681 261.125 li
112.656 260.989 112.746 260.859 112.881 260.834 cv
113.02 260.809 113.148 260.898 113.173 261.035 cv
113.411 262.327 li
113.436 262.463 113.346 262.593 113.21 262.618 cv
113.164 262.622 li
cp
f
116.829 259.073 mo
116.829 259.073 116.324 257.915 114.952 257.789 cv
113.579 257.664 112.695 258.563 112.695 258.563 cv
112.695 258.563 113.102 260.927 111.13 261.997 cv
109.158 263.067 107.742 262.602 107.742 262.602 cv
106.428 262.004 li
105.602 259.94 li
109.879 256.049 li
115.178 253.802 li
117.178 255.951 li
116.829 259.073 li
cp
.741176 .741176 .776471 rgb
f
111.617 254.16 mo
111.617 254.16 111.696 251.098 108.381 252.175 cv
105.067 253.251 104.976 257.431 104.976 257.431 cv
111.617 254.16 li
cp
f
117.02 260.118 mo
115.938 259.93 li
115.802 259.905 115.711 259.775 115.735 259.64 cv
115.759 259.504 115.886 259.412 116.025 259.438 cv
117.063 259.622 li
117.199 259.646 117.29 259.776 117.265 259.912 cv
117.244 260.033 117.138 260.118 117.02 260.118 cv
cp
.521569 .517647 .588235 rgb
f
112.256 260.433 mo
112.152 260.433 112.055 260.367 112.019 260.264 cv
111.975 260.133 112.044 259.99 112.175 259.946 cv
113.638 259.447 li
113.766 259.398 113.91 259.472 113.955 259.603 cv
114 259.733 113.93 259.876 113.799 259.92 cv
112.336 260.419 li
112.256 260.433 li
cp
f
113.569 266.83 mo
113.569 266.83 114.371 268.146 114.954 267.88 cv
115.537 267.613 116.127 267.088 116.127 267.088 cv
113.569 266.83 li
cp
.976471 .521569 .458824 rgb
f
275.976 69.2378 mo
275.976 69.2378 282.773 70.5557 284.335 71.4722 cv
285.898 72.3887 288.556 76.4272 287.425 77.2603 cv
286.713 77.7852 285.14 76.6226 285.14 76.6226 cv
285.14 76.6226 282.545 81.1235 278.882 79.6284 cv
275.004 78.0459 274.886 77.835 274.886 77.835 cv
275.976 69.2378 li
cp
f
250.512 61.8584 mo
250.512 61.8584 246.622 72.083 256.107 74.5386 cv
265.592 76.9937 277.741 77.2031 277.741 77.2031 cv
279.165 70.2002 li
262.977 63.1875 li
250.512 61.8584 li
cp
f
252.272 51.3335 mo
252.582 50.7344 254.012 50.4453 254.538 50.8677 cv
257.597 53.3286 263.033 60.6426 266.667 62.9746 cv
271.25 65.9165 279.165 69.0137 279.165 69.0137 cv
276.373 77.2031 li
276.373 77.2031 262.524 82.0586 254.486 72.8667 cv
247.942 65.3823 250.505 54.7466 252.272 51.3335 cv
cp
.658824 .368627 .278431 rgb
f
286.966 186.003 mo
247.676 186.003 215.825 183.902 215.825 181.31 cv
215.825 178.717 247.676 176.616 286.966 176.616 cv
326.256 176.616 358.107 178.717 358.107 181.31 cv
358.107 183.902 326.256 186.003 286.966 186.003 cv
.92549 .913725 .933333 rgb
f
248.117 146.661 mo
249.935 168.062 li
262.72 167.513 li
262.72 145.205 li
248.117 146.661 li
cp
.976471 .521569 .458824 rgb
f
233.09 146.661 mo
234.2 166.989 li
246.876 166.476 li
248.117 143.926 li
233.09 146.661 li
cp
f
237.37 35.1934 mo
237.37 35.1934 235.255 39.2036 235.263 48.603 cv
235.27 58.002 235.27 58.002 235.27 58.002 cv
253.282 58.3872 li
253.282 58.3872 252.882 37.5259 250.946 33.9556 cv
249.011 30.3853 237.37 35.1934 237.37 35.1934 cv
cp
0 0 0 rgb
f
260.229 83.0942 mo
260.229 83.0942 264.687 101.253 266.56 116.632 cv
268.433 132.011 267.994 157.844 266.732 158.778 cv
265.469 159.711 252.114 160.048 252.114 160.048 cv
252.114 160.048 247.126 162.183 238.528 161.963 cv
232.287 161.803 229.835 160.113 229.835 160.113 cv
229.835 160.113 228.717 93.3667 233.464 82.791 cv
237.18 74.5142 260.229 83.0942 260.229 83.0942 cv
cp
.709804 .415686 .301961 rgb
f
260.844 80.6982 mo
260.844 84.4868 li
260.844 84.4868 251.439 86.687 243.72 86.1211 cv
236.001 85.5557 233.116 84.1729 233.116 84.1729 cv
229.835 64.9375 li
240.164 50.7305 li
247.762 50.1025 li
250.286 50.2026 li
251.386 50.2466 252.48 50.3931 253.555 50.6411 cv
254.538 50.8677 li
260.528 78.1265 li
260.844 80.6982 li
cp
.658824 .368627 .278431 rgb
f
249.162 39.188 mo
249.162 39.188 252.904 37.5962 253.191 40.4927 cv
253.524 43.8481 249.514 43.8735 249.514 43.8735 cv
249.162 39.188 li
cp
.976471 .521569 .458824 rgb
f
251.021 42.2402 mo
250.894 42.2061 li
250.775 42.1362 250.735 41.9829 250.805 41.8638 cv
252.056 39.7261 li
252.126 39.6074 252.279 39.5679 252.397 39.6367 cv
252.517 39.7065 252.557 39.8599 252.487 39.979 cv
251.236 42.1167 li
251.021 42.2402 li
cp
0 0 0 rgb
f
252.474 41.6006 mo
251.401 41.5811 li
251.264 41.5786 251.153 41.4644 251.156 41.3267 cv
251.159 41.1899 251.271 41.0811 251.406 41.0811 cv
252.479 41.1006 li
252.616 41.103 252.727 41.2173 252.724 41.355 cv
252.721 41.4917 252.609 41.6006 252.474 41.6006 cv
cp
f
242.384 46.4302 mo
242.384 51.4116 li
242.384 51.4116 243.899 52.23 245.794 52.2646 cv
248.353 52.3115 249.218 50.7949 249.218 50.7949 cv
249.205 46.1914 li
242.384 46.4302 li
cp
.976471 .521569 .458824 rgb
f
242.407 47.0854 mo
242.407 47.0854 243.643 50.6592 246.547 50.229 cv
248.889 49.8823 249.416 46.4146 249.416 46.4146 cv
242.407 47.0854 li
cp
0 0 0 rgb
f
250.367 36.3062 mo
250.367 36.3062 251.998 43.4956 249.935 46.6758 cv
247.722 50.0864 244.425 48.9106 243.095 47.8857 cv
241.302 46.5029 240.681 44.7402 240.681 44.7402 cv
240.681 44.7402 238.212 45.228 237.393 43.2148 cv
236.531 41.1001 238.07 39.397 239.304 39.2979 cv
240.539 39.1987 240.682 39.4238 240.682 39.4238 cv
240.323 37.166 li
240.323 37.166 247.837 28.8369 250.367 36.3062 cv
cp
.976471 .521569 .458824 rgb
f
240.273 42.7085 mo
240.11 42.6479 li
238.208 41.0122 li
238.104 40.9224 238.092 40.7646 238.182 40.6597 cv
238.272 40.5557 238.43 40.5439 238.535 40.6333 cv
240.437 42.269 li
240.541 42.3589 240.553 42.5166 240.463 42.6216 cv
240.273 42.7085 li
cp
0 0 0 rgb
f
238.514 43.0068 mo
238.314 42.9067 li
238.231 42.7964 238.254 42.6396 238.364 42.5566 cv
239.489 41.7129 li
239.599 41.6309 239.755 41.6523 239.839 41.7632 cv
239.922 41.8735 239.899 42.0303 239.789 42.1133 cv
238.664 42.957 li
238.514 43.0068 li
cp
f
246.7 43.9946 mo
246.563 43.9531 li
246.447 43.8774 246.416 43.7222 246.492 43.6069 cv
247.214 42.5117 246.537 40.832 246.53 40.8149 cv
246.477 40.6875 246.538 40.5415 246.666 40.4888 cv
246.795 40.438 246.939 40.4971 246.992 40.624 cv
247.024 40.7026 247.778 42.564 246.909 43.8823 cv
246.7 43.9946 li
cp
f
249.298 38.4839 mo
249.121 38.4102 li
248.821 38.1079 248.237 38.0122 248.037 38.0005 cv
247.899 37.9927 247.794 37.8745 247.802 37.7368 cv
247.81 37.5991 247.919 37.5 248.065 37.5015 cv
248.103 37.5034 248.98 37.5596 249.476 38.0576 cv
249.573 38.1553 249.573 38.314 249.475 38.4111 cv
249.298 38.4839 li
cp
f
243.323 38.4897 mo
243.189 38.4395 li
243.171 38.1543 li
243.623 37.6396 244.477 37.5313 244.513 37.5269 cv
244.623 37.5186 244.725 37.5923 244.738 37.7031 cv
244.751 37.814 244.673 37.9146 244.562 37.9282 cv
244.555 37.9292 243.823 38.0234 243.475 38.4209 cv
243.323 38.4897 li
cp
f
245.985 45.3584 mo
246.078 45.478 246.182 45.5542 246.298 45.5864 cv
246.424 45.6211 246.56 45.6025 246.688 45.561 cv
245.985 45.3584 li
cp
246.438 46.1045 mo
246.35 46.1045 246.259 46.0938 246.168 46.0693 cv
245.766 45.9595 245.465 45.6138 245.276 45.041 cv
245.333 44.7891 li
245.397 44.7217 245.492 44.6958 245.583 44.7222 cv
247.394 45.2441 li
247.568 45.4297 li
247.489 45.6724 li
247.466 45.6924 246.989 46.1045 246.438 46.1045 cv
cp
f
250.792 38.8965 mo
250.792 38.8965 249.715 37.2065 248.848 36.0142 cv
247.98 34.8218 247.98 34.8218 247.98 34.8218 cv
247.98 34.8218 247.201 37.667 245.263 38.8511 cv
243.325 40.0356 241.087 39.8887 241.087 39.8887 cv
241.148 41.6187 li
241.148 41.6187 240.536 39.3564 240.163 39.3149 cv
239.791 39.2739 239.226 39.1973 238.585 39.5205 cv
237.939 39.8467 237.802 40.1724 237.802 40.1724 cv
237.802 40.1724 236.984 36.0576 237.37 35.1934 cv
237.756 34.3296 240.559 28.7891 247.717 30.9819 cv
253.154 32.6475 250.792 38.8965 250.792 38.8965 cv
cp
f
248.607 40.9551 mo
248.475 40.9551 248.365 40.8525 248.357 40.7192 cv
248.288 39.5098 li
248.373 39.3076 li
248.989 38.7686 li
249.093 38.6772 249.251 38.687 249.342 38.792 cv
249.433 38.896 249.422 39.0537 249.318 39.1445 cv
248.794 39.6035 li
248.856 40.6909 li
248.864 40.8286 248.759 40.9468 248.621 40.9546 cv
248.607 40.9551 li
cp
f
244.587 41.1387 mo
244.455 41.1387 244.345 41.0361 244.337 40.9028 cv
244.268 39.6934 li
244.334 39.5098 li
244.909 38.8867 li
245.003 38.7852 245.161 38.7793 245.262 38.8726 cv
245.364 38.9663 245.37 39.1245 245.276 39.2256 cv
244.773 39.771 li
244.836 40.8745 li
244.844 41.0122 244.739 41.1304 244.601 41.1382 cv
244.587 41.1387 li
cp
f
282.899 181.363 mo
283.206 181.328 283.417 181.03 283.37 180.71 cv
283.142 179.194 282.313 174.956 279.957 173.119 cv
277.062 170.862 270.925 169.867 268.715 168.357 cv
266.505 166.847 264.068 163.256 262.72 163.902 cv
261.372 164.548 258.797 167.583 255.17 167.075 cv
251.542 166.567 249.88 165.655 248.885 166.517 cv
247.89 167.379 247.1 179.7 247.505 180.442 cv
247.911 181.184 253.045 180.602 253.489 180.729 cv
253.933 180.855 255.246 177.943 256.077 178.399 cv
256.908 178.855 257.905 180.252 259.13 180.908 cv
260.272 181.52 279.224 181.786 282.899 181.363 cv
cp
.678431 .294118 .266667 rgb
f
250.022 179.014 mo
250.022 180.297 249.591 181.766 248.708 182.136 cv
247.825 182.505 240.677 183.276 234.422 182.731 cv
228.435 182.208 228.516 182.424 228.074 181.879 cv
227.858 181.602 226.956 179.661 227.438 178.418 cv
227.521 178.223 li
227.767 177.596 228.024 176.99 228.209 176.559 cv
228.394 176.148 228.62 175.758 228.887 175.378 cv
229.534 174.484 230.817 172.636 231.146 171.681 cv
231.578 170.407 232.235 167.655 232.676 166.361 cv
233.01 165.397 236.937 163.88 238.829 163.198 cv
239.484 162.962 240.188 162.905 240.874 163.031 cv
242.785 163.382 246.729 164.161 247.394 164.717 cv
248.267 165.447 248.708 171.506 248.708 172.42 cv
248.708 173.334 li
248.708 174.187 249.293 175.871 249.673 177.268 cv
249.776 177.617 249.858 177.945 249.92 178.243 cv
249.981 178.541 250.022 178.798 250.022 179.014 cv
cp
.737255 .341176 .290196 rgb
f
250.979 156.15 mo
250.844 156.15 250.733 156.043 250.729 155.908 cv
248.813 97.0278 li
248.81 96.9312 248.862 96.8418 248.948 96.7974 cv
254.543 93.8984 li
254.666 93.8354 254.816 93.8823 254.88 94.0054 cv
254.943 94.1284 254.896 94.2793 254.773 94.3428 cv
249.318 97.1689 li
251.229 155.892 li
251.232 156.03 251.125 156.146 250.987 156.15 cv
250.979 156.15 li
cp
.968627 .772549 .215686 rgb
f
264.748 170.863 mo
264.53 170.736 li
264.463 170.616 264.505 170.464 264.624 170.396 cv
268.591 168.14 li
268.71 168.07 268.862 168.113 268.933 168.233 cv
269 168.354 268.958 168.506 268.839 168.574 cv
264.872 170.83 li
264.748 170.863 li
cp
1 1 1 rgb
f
268.715 171.738 mo
268.498 171.613 li
268.43 171.494 268.471 171.341 268.59 171.272 cv
271.679 169.488 li
271.796 169.419 271.949 169.459 272.021 169.58 cv
272.089 169.699 272.048 169.852 271.929 169.921 cv
268.84 171.705 li
268.715 171.738 li
cp
f
243.145 170.846 mo
243.04 170.823 li
240.838 169.805 236.329 170.83 236.283 170.84 cv
236.153 170.873 236.015 170.787 235.983 170.652 cv
235.953 170.518 236.036 170.384 236.171 170.353 cv
236.362 170.309 240.895 169.28 243.25 170.369 cv
243.375 170.427 243.43 170.576 243.372 170.701 cv
243.33 170.792 243.239 170.846 243.145 170.846 cv
cp
f
243.145 173.43 mo
243.04 173.407 li
240.838 172.389 236.329 173.413 236.283 173.423 cv
236.153 173.457 236.015 173.371 235.983 173.236 cv
235.953 173.102 236.036 172.967 236.171 172.936 cv
236.362 172.893 240.895 171.863 243.25 172.953 cv
243.375 173.011 243.43 173.159 243.372 173.285 cv
243.33 173.376 243.239 173.43 243.145 173.43 cv
cp
f
297.371 62.9707 mo
297.371 62.9707 291.587 63.3105 290.861 57.728 cv
290.135 52.1455 291.841 50.9053 291.841 50.9053 cv
297.047 50.8726 li
297.371 62.9707 li
cp
.741176 .741176 .776471 rgb
f
315.36 111.454 mo
314.789 111.454 314.326 110.991 314.326 110.42 cv
314.326 90.1323 li
314.326 89.561 314.789 89.0981 315.36 89.0981 cv
315.932 89.0981 316.395 89.561 316.395 90.1323 cv
316.395 110.42 li
316.395 110.991 315.932 111.454 315.36 111.454 cv
cp
.780392 .745098 .8 rgb
f
335.666 111.335 mo
335.124 111.335 334.669 110.913 334.635 110.365 cv
334.632 110.323 334.349 106.112 332.321 103.604 cv
329.927 100.64 319.63 97.5659 315.864 96.6318 cv
315.31 96.4941 314.972 95.9331 315.109 95.3789 cv
315.248 94.8237 315.809 94.4888 316.362 94.624 cv
317.817 94.9849 330.669 98.2666 333.931 102.304 cv
336.379 105.333 336.688 110.041 336.699 110.24 cv
336.733 110.81 336.3 111.299 335.729 111.333 cv
335.666 111.335 li
cp
f
317.1 93.7837 mo
272.824 93.7837 li
271.883 93.7837 271.121 93.021 271.121 92.0806 cv
271.121 76.6411 li
271.121 75.7007 271.883 74.938 272.824 74.938 cv
317.1 74.938 li
318.041 74.938 318.804 75.7007 318.804 76.6411 cv
318.804 92.0806 li
318.804 93.021 318.041 93.7837 317.1 93.7837 cv
cp
.729412 .698039 .74902 rgb
f
336.221 111.336 mo
324.724 111.336 315.369 126.552 315.369 145.255 cv
315.369 163.959 324.724 179.175 336.221 179.175 cv
347.719 179.175 357.073 163.959 357.073 145.255 cv
357.073 126.552 347.719 111.336 336.221 111.336 cv
cp
336.221 181.244 mo
323.583 181.244 313.301 165.1 313.301 145.255 cv
313.301 125.412 323.583 109.268 336.221 109.268 cv
348.859 109.268 359.142 125.412 359.142 145.255 cv
359.142 165.1 348.859 181.244 336.221 181.244 cv
cp
.780392 .745098 .8 rgb
f
335.203 144.657 mo
335.067 144.65 334.964 144.561 334.94 144.44 cv
328.628 112.369 li
328.599 112.224 328.693 112.083 328.839 112.054 cv
328.988 112.021 329.126 112.12 329.153 112.265 cv
335.258 143.279 li
344.42 112.931 li
344.463 112.79 344.613 112.712 344.754 112.751 cv
344.896 112.794 344.977 112.944 344.934 113.086 cv
335.46 144.466 li
335.426 144.58 335.321 144.657 335.203 144.657 cv
cp
f
328.891 178.605 mo
328.839 178.6 li
328.693 178.571 328.599 178.43 328.628 178.285 cv
334.94 146.213 li
334.964 146.093 335.067 146.003 335.189 145.998 cv
335.336 145.978 335.425 146.07 335.46 146.188 cv
344.934 177.568 li
344.977 177.71 344.896 177.859 344.754 177.902 cv
344.614 177.944 344.463 177.865 344.42 177.723 cv
335.258 147.375 li
329.153 178.389 li
329.129 178.517 329.017 178.605 328.891 178.605 cv
cp
f
315.371 156.168 mo
315.277 156.168 315.187 156.119 315.137 156.031 cv
315.064 155.901 315.111 155.738 315.24 155.666 cv
333.92 145.229 li
315.756 132.455 li
315.635 132.37 315.605 132.202 315.69 132.081 cv
315.776 131.959 315.944 131.931 316.064 132.016 cv
334.577 145.036 li
334.652 145.089 334.695 145.177 334.69 145.269 cv
334.686 145.361 334.634 145.444 334.554 145.489 cv
315.502 156.134 li
315.371 156.168 li
cp
f
356.079 156.168 mo
355.948 156.134 li
336.896 145.489 li
336.816 145.444 336.765 145.361 336.76 145.269 cv
336.755 145.177 336.798 145.089 336.873 145.036 cv
355.386 132.016 li
355.506 131.931 355.673 131.959 355.76 132.081 cv
355.845 132.202 355.815 132.37 355.694 132.455 cv
337.53 145.229 li
356.21 155.666 li
356.339 155.738 356.386 155.901 356.313 156.031 cv
356.264 156.119 356.173 156.168 356.079 156.168 cv
cp
f
339.438 144.389 mo
339.438 149.545 337.541 153.725 335.203 153.725 cv
332.864 153.725 330.969 149.545 330.969 144.389 cv
330.969 139.233 332.864 135.053 335.203 135.053 cv
337.541 135.053 339.438 139.233 339.438 144.389 cv
cp
f
297.813 179.936 mo
297.321 179.936 296.89 179.578 296.813 179.077 cv
288.438 124.657 li
288.354 124.104 288.732 123.587 289.285 123.502 cv
289.845 123.416 290.355 123.796 290.44 124.349 cv
298.814 178.77 li
298.899 179.322 298.521 179.839 297.968 179.924 cv
297.813 179.936 li
cp
.827451 .796078 .847059 rgb
f
342.583 180.286 mo
342.092 180.286 341.66 179.928 341.583 179.427 cv
333.208 125.007 li
333.123 124.454 333.502 123.937 334.055 123.852 cv
334.616 123.765 335.125 124.146 335.21 124.699 cv
343.585 179.12 li
343.67 179.672 343.291 180.189 342.738 180.274 cv
342.583 180.286 li
cp
f
274.575 111.454 mo
274.004 111.454 273.541 110.991 273.541 110.42 cv
273.541 90.1323 li
273.541 89.561 274.004 89.0981 274.575 89.0981 cv
275.146 89.0981 275.609 89.561 275.609 90.1323 cv
275.609 110.42 li
275.609 110.991 275.146 111.454 274.575 111.454 cv
cp
.780392 .745098 .8 rgb
f
347.384 182.677 mo
297.823 182.677 li
296.385 182.677 295.219 181.511 295.219 180.072 cv
295.219 177.774 li
295.219 176.336 296.385 175.169 297.823 175.169 cv
347.384 175.169 li
348.822 175.169 349.988 176.336 349.988 177.774 cv
349.988 180.072 li
349.988 181.511 348.822 182.677 347.384 182.677 cv
cp
.827451 .796078 .847059 rgb
f
274.593 111.971 mo
288.458 124.131 li
288.73 124.37 289.078 124.501 289.439 124.503 cv
319.293 124.639 li
320.699 124.646 321.338 122.885 320.255 121.988 cv
305.395 109.691 li
305.126 109.469 304.789 109.348 304.44 109.348 cv
275.58 109.348 li
274.198 109.348 273.554 111.06 274.593 111.971 cv
cp
.729412 .698039 .74902 rgb
f
312.117 154.128 mo
312.117 165.929 li
303.131 169.329 li
297.469 162.979 li
296.538 152.063 li
312.117 154.128 li
cp
.976471 .521569 .458824 rgb
f
328.937 151.682 mo
328.937 163.482 li
319.361 166.882 li
313.328 160.532 li
312.336 149.617 li
328.937 151.682 li
cp
f
309.342 97.0015 mo
309.342 97.0015 332.231 108.518 335.042 113.196 cv
337.852 117.875 334.757 155.997 334.757 155.997 cv
314.46 156.267 li
311.649 134.963 li
296.224 99.0762 li
309.342 97.0015 li
cp
.372549 .517647 .341176 rgb
f
283.107 97.5254 mo
283.107 97.5254 282.663 109.337 282.993 112.694 cv
283.323 116.051 290.967 121.467 290.967 121.467 cv
292.379 157.027 li
315.846 158.076 li
315.846 158.076 316.356 120.654 315.965 117.13 cv
315.573 113.605 299.96 100.788 299.96 100.788 cv
283.107 97.5254 li
cp
f
316.88 155.339 mo
316.735 155.336 316.627 155.221 316.63 155.083 cv
316.639 154.734 317.492 120.147 316.636 116.093 cv
316.053 113.336 308.509 105.951 308.433 105.876 cv
308.363 105.643 li
308.527 105.461 li
314.344 103.494 li
314.475 103.45 314.616 103.52 314.661 103.65 cv
314.705 103.781 314.635 103.923 314.504 103.967 cv
309.072 105.805 li
310.501 107.224 316.571 113.373 317.124 115.989 cv
317.993 120.101 317.165 153.668 317.13 155.096 cv
317.126 155.231 317.016 155.339 316.88 155.339 cv
cp
1 1 1 rgb
f
294.334 117.234 mo
294.031 117.234 293.753 117.321 293.493 117.495 cv
292.433 118.205 291.991 120.153 291.838 121.077 cv
293.447 120.116 295.567 118.567 295.481 117.78 cv
295.46 117.588 295.262 117.435 294.892 117.323 cv
294.696 117.264 294.511 117.234 294.334 117.234 cv
cp
291.52 121.801 mo
291.383 121.76 li
291.305 121.709 291.262 121.62 291.271 121.527 cv
291.284 121.39 291.614 118.152 293.215 117.08 cv
293.751 116.72 294.365 116.641 295.036 116.844 cv
295.616 117.02 295.934 117.316 295.978 117.726 cv
296.136 119.165 292.394 121.346 291.642 121.769 cv
291.52 121.801 li
cp
f
295.082 128.143 mo
294.519 128.143 294.057 127.69 294.048 127.125 cv
293.968 122.101 293.229 108.425 290.795 105.515 cv
288.346 102.585 278.073 99.478 274.321 98.5278 cv
273.768 98.3877 273.433 97.8252 273.572 97.2715 cv
273.713 96.7183 274.277 96.3809 274.829 96.5229 cv
276.275 96.8892 289.061 100.215 292.382 104.188 cv
295.723 108.183 296.086 125.168 296.116 127.092 cv
296.125 127.663 295.67 128.133 295.099 128.143 cv
295.082 128.143 li
cp
.780392 .745098 .8 rgb
f
276.373 111.336 mo
264.875 111.336 255.521 126.552 255.521 145.255 cv
255.521 163.959 264.875 179.175 276.373 179.175 cv
287.87 179.175 297.225 163.959 297.225 145.255 cv
297.225 126.552 287.87 111.336 276.373 111.336 cv
cp
276.373 181.244 mo
263.734 181.244 253.452 165.1 253.452 145.255 cv
253.452 125.412 263.734 109.268 276.373 109.268 cv
289.011 109.268 299.293 125.412 299.293 145.255 cv
299.293 165.1 289.011 181.244 276.373 181.244 cv
cp
f
275.354 144.657 mo
275.219 144.65 275.115 144.561 275.092 144.44 cv
268.78 112.369 li
268.751 112.224 268.846 112.083 268.991 112.054 cv
269.14 112.021 269.277 112.12 269.306 112.265 cv
275.409 143.279 li
284.571 112.931 li
284.614 112.79 284.765 112.712 284.905 112.751 cv
285.047 112.794 285.128 112.944 285.085 113.086 cv
275.611 144.466 li
275.577 144.58 275.473 144.657 275.354 144.657 cv
cp
f
269.043 178.605 mo
268.991 178.6 li
268.846 178.571 268.751 178.43 268.78 178.285 cv
275.092 146.213 li
275.115 146.093 275.219 146.003 275.341 145.998 cv
275.491 145.978 275.576 146.07 275.611 146.188 cv
285.085 177.568 li
285.128 177.71 285.047 177.859 284.905 177.902 cv
284.765 177.944 284.614 177.865 284.571 177.723 cv
275.409 147.375 li
269.306 178.389 li
269.281 178.517 269.169 178.605 269.043 178.605 cv
cp
f
255.522 156.168 mo
255.429 156.168 255.338 156.119 255.288 156.031 cv
255.216 155.901 255.263 155.738 255.392 155.666 cv
274.072 145.229 li
255.907 132.455 li
255.786 132.37 255.757 132.202 255.842 132.081 cv
255.928 131.959 256.096 131.931 256.216 132.016 cv
274.729 145.036 li
274.805 145.089 274.848 145.177 274.843 145.269 cv
274.838 145.361 274.786 145.444 274.706 145.489 cv
255.653 156.134 li
255.522 156.168 li
cp
f
296.231 156.168 mo
296.101 156.134 li
277.048 145.489 li
276.968 145.444 276.916 145.361 276.911 145.269 cv
276.906 145.177 276.949 145.089 277.024 145.036 cv
295.537 132.016 li
295.657 131.931 295.824 131.959 295.911 132.081 cv
295.996 132.202 295.967 132.37 295.846 132.455 cv
277.682 145.229 li
296.362 155.666 li
296.491 155.738 296.538 155.901 296.466 156.031 cv
296.416 156.119 296.325 156.168 296.231 156.168 cv
cp
f
279.589 144.389 mo
279.589 149.545 277.693 153.725 275.355 153.725 cv
273.017 153.725 271.121 149.545 271.121 144.389 cv
271.121 139.233 273.017 135.053 275.355 135.053 cv
277.693 135.053 279.589 139.233 279.589 144.389 cv
cp
f
313.282 99.043 mo
313.282 99.043 314.817 72.2588 306.854 68.3896 cv
298.151 64.1611 287.931 68.0718 287.931 68.0718 cv
288.217 101.143 li
313.282 99.043 li
cp
.968627 .772549 .215686 rgb
f
330.523 157.58 mo
330.523 157.58 335.548 163.508 336.715 164.07 cv
337.883 164.633 350.063 168.734 352.398 171.022 cv
354.734 173.309 354.901 177.804 354.234 178.226 cv
353.566 178.648 313.501 178.226 313.501 178.226 cv
313.081 158.906 li
330.523 157.58 li
cp
1 .631373 .262745 rgb
f
334.579 161.646 mo
334.579 161.646 328.992 168.051 330.27 168.572 cv
331.548 169.092 342.338 167.44 342.06 166.285 cv
341.78 165.131 335.873 161.552 334.579 161.646 cv
cp
1 1 1 rgb
f
299.991 94.6538 mo
299.991 94.6538 300.313 94.6753 301.629 94.8569 cv
302.876 95.0283 306.516 97.2905 306.516 97.2905 cv
306.516 97.2905 309.56 99.4946 311.741 102.009 cv
313.923 104.524 312.904 105.567 312.904 105.567 cv
312.904 105.567 314.189 107.418 313.128 107.857 cv
312.067 108.297 309.502 106.356 309.502 106.356 cv
309.502 106.356 312.559 109.233 310.722 109.425 cv
308.885 109.616 305.083 105.766 305.083 105.766 cv
305.083 105.766 296.682 105.367 295.341 101.882 cv
294.001 98.3975 299.991 94.6538 299.991 94.6538 cv
cp
.976471 .521569 .458824 rgb
f
301.384 92.333 mo
296.678 104.283 li
296.678 104.283 279.849 105.694 275.355 96.166 cv
270.211 85.2607 280.913 69.9468 287.542 68.1855 cv
294.171 66.4243 292.189 85.6895 292.189 85.6895 cv
301.384 92.333 li
cp
.968627 .772549 .215686 rgb
f
312.904 105.77 mo
312.733 105.676 li
312.717 105.651 311.078 103.097 308.558 100.713 cv
308.55 100.427 li
308.837 100.419 li
311.395 102.838 313.059 105.433 313.075 105.458 cv
313.136 105.553 313.107 105.678 313.013 105.738 cv
312.904 105.77 li
cp
0 0 0 rgb
f
309.887 106.646 mo
309.709 106.541 li
309.696 106.517 308.417 104.213 306.746 103.152 cv
306.651 103.092 306.623 102.967 306.684 102.872 cv
306.743 102.777 306.87 102.75 306.963 102.81 cv
308.723 103.928 310.011 106.247 310.064 106.345 cv
310.118 106.443 310.082 106.566 309.984 106.621 cv
309.887 106.646 li
cp
f
318.134 92.876 mo
318.134 92.876 317.815 92.9209 316.516 93.1987 cv
315.284 93.4619 311.821 95.9868 311.821 95.9868 cv
311.821 95.9868 308.948 98.4092 306.958 101.078 cv
304.968 103.747 306.061 104.712 306.061 104.712 cv
306.061 104.712 304.915 106.652 306.006 107.012 cv
307.097 107.373 309.512 105.248 309.512 105.248 cv
309.512 105.248 306.676 108.342 308.521 108.397 cv
310.368 108.453 313.875 104.333 313.875 104.333 cv
313.875 104.333 322.225 103.316 323.304 99.7417 cv
324.384 96.1675 318.134 92.876 318.134 92.876 cv
cp
.976471 .521569 .458824 rgb
f
306.061 104.962 mo
305.942 104.932 li
305.82 104.867 305.775 104.715 305.841 104.594 cv
305.854 104.566 307.326 101.851 309.703 99.2451 cv
309.796 99.1421 309.954 99.1367 310.057 99.229 cv
310.158 99.3218 310.165 99.48 310.072 99.582 cv
307.738 102.14 306.295 104.804 306.28 104.83 cv
306.061 104.962 li
cp
0 0 0 rgb
f
309.135 105.612 mo
309.031 105.59 li
308.905 105.532 308.85 105.384 308.907 105.258 cv
308.954 105.156 310.07 102.738 311.754 101.485 cv
311.865 101.404 312.021 101.426 312.104 101.537 cv
312.187 101.647 312.163 101.804 312.053 101.887 cv
310.474 103.062 309.373 105.442 309.362 105.466 cv
309.32 105.558 309.229 105.612 309.135 105.612 cv
cp
f
320.743 169.867 mo
320.743 169.867 314.335 162.301 312.336 160.113 cv
297.212 160.696 li
295.843 163.771 295.693 173.137 296.73 175.567 cv
297.769 177.998 305.406 182.045 315.439 182.018 cv
320.168 182.004 326.986 180.544 326.99 178.92 cv
326.997 176.366 322.355 171.55 320.743 169.867 cv
cp
.976471 .678431 .384314 rgb
f
318.731 168.304 mo
318.731 168.304 314.411 163.253 310.4 164.33 cv
306.389 165.406 305.33 168.272 306.249 169.049 cv
307.169 169.826 317.813 169.902 318.731 168.304 cv
cp
1 1 1 rgb
f
300.14 91.6846 mo
299.979 91.627 li
299.918 91.5752 293.752 86.4668 289.074 84.5928 cv
288.946 84.5415 288.884 84.396 288.935 84.2681 cv
288.985 84.1396 289.135 84.0786 289.26 84.1289 cv
294.011 86.0322 300.237 91.1904 300.3 91.2422 cv
300.405 91.3306 300.42 91.4883 300.332 91.5947 cv
300.14 91.6846 li
cp
.372549 .517647 .341176 rgb
f
288.902 81.8271 mo
288.694 81.8745 li
288.603 82.2847 289.537 83.4209 290.608 84.4639 cv
290.291 83.4834 289.752 82.1904 289.137 81.8867 cv
288.902 81.8271 li
cp
291.096 85.5103 mo
290.93 85.4468 li
290.243 84.835 288.016 82.7666 288.161 81.8394 cv
288.19 81.6484 288.309 81.499 288.491 81.4175 cv
288.775 81.293 289.074 81.2988 289.358 81.438 cv
290.547 82.0249 291.262 84.8784 291.339 85.2021 cv
291.364 85.3081 291.317 85.4189 291.224 85.4746 cv
291.096 85.5103 li
cp
f
302.51 55.0205 mo
302.51 55.0205 306.265 53.458 306.529 56.3569 cv
306.836 59.7148 302.826 59.709 302.826 59.709 cv
302.51 55.0205 li
cp
.976471 .521569 .458824 rgb
f
304.347 58.0874 mo
304.219 58.0522 li
304.101 57.9814 304.062 57.8281 304.132 57.7095 cv
305.399 55.5815 li
305.471 55.4619 305.624 55.4238 305.742 55.4946 cv
305.86 55.5654 305.899 55.7188 305.829 55.8374 cv
304.562 57.9653 li
304.347 58.0874 li
cp
0 0 0 rgb
f
305.805 57.459 mo
304.73 57.4316 li
304.593 57.4282 304.483 57.3135 304.487 57.1753 cv
304.491 57.0396 304.603 56.9316 304.737 56.9316 cv
305.812 56.959 li
305.949 56.9624 306.059 57.0771 306.055 57.2153 cv
306.051 57.3511 305.939 57.459 305.805 57.459 cv
cp
f
295.676 62.21 mo
295.637 67.1909 li
295.637 67.1909 297.603 68.335 299.497 68.3848 cv
302.055 68.4517 302.489 67.813 302.489 67.813 cv
302.498 62.0239 li
295.676 62.21 li
cp
.976471 .521569 .458824 rgb
f
295.693 62.8657 mo
295.693 62.8657 296.901 66.4487 299.81 66.041 cv
302.154 65.7124 302.707 62.249 302.707 62.249 cv
295.693 62.8657 li
cp
0 0 0 rgb
f
303.737 52.1484 mo
303.737 52.1484 305.312 59.3501 303.224 62.5146 cv
300.985 65.9077 297.697 64.7061 296.376 63.6709 cv
294.594 62.2744 293.985 60.5068 293.985 60.5068 cv
293.985 60.5068 291.514 60.9756 290.709 58.9561 cv
289.865 56.8345 291.416 55.1431 292.651 55.0537 cv
293.887 54.9644 294.028 55.1904 294.028 55.1904 cv
293.687 52.9297 li
293.687 52.9297 301.266 44.6597 303.737 52.1484 cv
cp
.976471 .521569 .458824 rgb
f
293.596 58.4717 mo
293.432 58.4102 li
291.543 56.7598 li
291.438 56.6685 291.428 56.5107 291.519 56.4067 cv
291.61 56.3018 291.77 56.2935 291.871 56.3828 cv
293.76 58.0332 li
293.864 58.1245 293.875 58.2822 293.784 58.3862 cv
293.596 58.4717 li
cp
0 0 0 rgb
f
291.835 58.7568 mo
291.634 58.6553 li
291.552 58.5444 291.575 58.3877 291.687 58.3057 cv
292.817 57.4707 li
292.929 57.3896 293.086 57.4131 293.167 57.5234 cv
293.249 57.6343 293.226 57.791 293.114 57.873 cv
291.983 58.708 li
291.835 58.7568 li
cp
f
300.013 59.8081 mo
299.873 59.7656 li
299.759 59.689 299.729 59.5337 299.805 59.4189 cv
300.535 58.3291 299.872 56.644 299.865 56.6274 cv
299.813 56.499 299.875 56.3535 300.003 56.3018 cv
300.131 56.2505 300.276 56.312 300.328 56.4399 cv
300.36 56.5186 301.1 58.3862 300.221 59.6973 cv
300.013 59.8081 li
cp
f
303.12 54.0718 mo
302.941 53.9966 li
302.643 53.6919 302.06 53.5913 301.859 53.5781 cv
301.722 53.5688 301.617 53.4502 301.627 53.3125 cv
301.636 53.1753 301.73 53.0713 301.893 53.0791 cv
301.93 53.0815 302.807 53.1445 303.299 53.647 cv
303.396 53.7456 303.394 53.9038 303.295 54.0005 cv
303.12 54.0718 li
cp
.521569 .517647 .588235 rgb
f
296.678 54.2773 mo
296.543 54.2261 li
296.527 53.9409 li
296.982 53.4297 297.838 53.3276 297.874 53.3237 cv
298.001 53.3101 298.085 53.3916 298.097 53.5015 cv
298.109 53.6123 298.03 53.7124 297.919 53.7251 cv
297.912 53.7261 297.181 53.8145 296.828 54.2095 cv
296.678 54.2773 li
cp
0 0 0 rgb
f
304.142 54.7422 mo
304.142 54.7422 303.079 53.0435 302.221 51.8447 cv
301.362 50.6455 301.362 50.6455 301.362 50.6455 cv
301.362 50.6455 300.561 53.4844 298.614 54.6538 cv
296.667 55.8228 294.43 55.6582 294.43 55.6582 cv
294.478 57.3887 li
294.478 57.3887 293.883 55.1221 293.51 55.0776 cv
293.138 55.0337 292.574 54.9526 291.931 55.271 cv
291.282 55.5923 291.143 55.9165 291.143 55.9165 cv
291.143 55.9165 290.356 51.7959 290.749 50.9346 cv
291.142 50.0737 293.988 44.5552 301.129 46.8037 cv
306.553 48.5117 304.142 54.7422 304.142 54.7422 cv
cp
.741176 .741176 .776471 rgb
f
301.942 56.7832 mo
301.81 56.7832 301.699 56.6792 301.692 56.5454 cv
301.633 55.3359 li
301.72 55.1343 li
302.341 54.6001 li
302.445 54.5103 302.603 54.5225 302.693 54.6265 cv
302.783 54.7314 302.771 54.8892 302.667 54.979 cv
302.139 55.4336 li
302.192 56.521 li
302.199 56.6587 302.093 56.7759 301.955 56.7827 cv
301.942 56.7832 li
cp
0 0 0 rgb
f
297.922 56.9355 mo
297.789 56.9355 297.679 56.8315 297.672 56.6978 cv
297.612 55.4883 li
297.68 55.3052 li
298.259 54.6865 li
298.354 54.5845 298.513 54.5815 298.612 54.6748 cv
298.713 54.769 298.719 54.9272 298.624 55.0283 cv
298.117 55.5698 li
298.172 56.6733 li
298.179 56.811 298.072 56.9282 297.935 56.9351 cv
297.922 56.9355 li
cp
f
293.928 49.3633 mo
293.928 49.3633 292.639 43.1382 289.249 44.2676 cv
284.595 45.8184 288.703 53.397 291.561 53.377 cv
294.418 53.3564 293.928 49.3633 293.928 49.3633 cv
cp
.741176 .741176 .776471 rgb
f
302.653 67.2104 mo
302.653 67.2104 298.822 69.0859 295.64 66.8506 cv
295.64 66.8506 293.555 71.0879 295.298 71.5796 cv
297.042 72.0718 300.205 68.3896 300.205 68.3896 cv
300.205 68.3896 302.73 70.9424 303.819 70.7979 cv
304.908 70.6528 302.653 67.2104 302.653 67.2104 cv
cp
.372549 .517647 .341176 rgb
f
264.344 73.4204 mo
264.344 73.4204 262.102 70.9438 261.271 70.6079 cv
260.44 70.272 253.874 71.0171 253.874 71.0171 cv
262.017 73.7363 li
264.344 73.4204 li
cp
.976471 .521569 .458824 rgb
f
249.162 50.5415 mo
250 57.7642 li
250 57.7642 246.217 55.8711 244.557 54.1514 cv
242.623 52.1475 242.409 50.7173 242.409 50.7173 cv
242.409 50.7173 245.634 51.8213 249.162 50.5415 cv
cp
f
253.694 59.8975 mo
253.596 59.877 li
253.206 59.7095 244.04 55.7173 242.175 50.8066 cv
242.126 50.6772 242.191 50.5332 242.32 50.4839 cv
242.449 50.4365 242.594 50.5 242.643 50.6289 cv
244.433 55.3418 253.7 59.3774 253.793 59.418 cv
253.92 59.4727 253.979 59.6196 253.924 59.7461 cv
253.883 59.8408 253.791 59.8975 253.694 59.8975 cv
cp
1 1 1 rgb
f
249.999 58.0146 mo
249.873 58.0146 249.764 57.9189 249.751 57.79 cv
248.969 50.1846 li
248.955 50.0474 249.055 49.9248 249.192 49.9106 cv
249.315 49.897 249.452 49.9961 249.466 50.1338 cv
250.248 57.7393 li
250.262 57.8765 250.163 57.999 250.025 58.0132 cv
249.999 58.0146 li
cp
f
307.827 69.0137 mo
307.827 69.0137 319.323 75.6758 323 86.2144 cv
326.677 96.7529 321.766 103.067 321.766 103.067 cv
312.904 94.6538 li
307.827 69.0137 li
cp
.968627 .772549 .215686 rgb
f
309.855 91.6846 mo
309.719 91.6846 309.607 91.5752 309.605 91.4385 cv
309.549 87.75 li
309.584 87.6182 li
309.6 87.5918 311.165 84.9302 311.55 81.5488 cv
311.857 78.8413 309.592 73.5181 309.569 73.4648 cv
309.515 73.3379 309.573 73.1909 309.7 73.1362 cv
309.825 73.0825 309.975 73.1401 310.028 73.2676 cv
310.124 73.4907 312.369 78.7661 312.046 81.6055 cv
311.678 84.8481 310.298 87.3774 310.05 87.8115 cv
310.105 91.4307 li
310.107 91.5688 309.997 91.6826 309.859 91.6846 cv
309.855 91.6846 li
cp
.372549 .517647 .341176 rgb
f
313.401 91.6846 mo
313.314 91.6689 li
313.185 91.6206 313.119 91.4771 313.167 91.3477 cv
313.224 91.1943 314.59 87.5786 317.166 86.438 cv
317.292 86.3823 317.44 86.4385 317.496 86.5654 cv
317.552 86.6914 317.495 86.8394 317.369 86.895 cv
314.986 87.9502 313.649 91.4858 313.636 91.5215 cv
313.599 91.6221 313.503 91.6846 313.401 91.6846 cv
cp
f
316.058 85.4487 mo
315.858 85.4814 315.663 85.5684 315.497 85.7476 cv
315.038 86.2451 314.908 87.3442 314.892 88.1836 cv
315.649 86.8618 316.159 85.689 316.058 85.4487 cv
cp
314.665 89.3008 mo
314.607 89.2939 li
314.502 89.269 314.425 89.1797 314.416 89.0723 cv
314.406 88.9644 314.199 86.418 315.13 85.4087 cv
315.391 85.126 315.714 84.9829 316.09 84.9829 cv
316.274 84.9839 316.416 85.064 316.496 85.2085 cv
316.855 85.8594 315.484 88.2046 314.878 89.1826 cv
314.665 89.3008 li
cp
f
272.557 77.7925 mo
272.309 77.7622 li
266.42 76.311 li
265.865 76.1743 265.526 75.6138 265.663 75.0591 cv
265.8 74.5049 266.36 74.1631 266.914 74.3022 cv
272.803 75.7534 li
273.357 75.8901 273.696 76.4507 273.56 77.0054 cv
273.443 77.4766 273.021 77.7925 272.557 77.7925 cv
cp
.729412 .698039 .74902 rgb
f
266.416 76.7578 mo
257.918 76.7578 li
256.981 76.7578 256.222 75.9985 256.222 75.062 cv
256.222 74.1255 256.981 73.3662 257.918 73.3662 cv
266.416 73.3662 li
267.352 73.3662 268.111 74.1255 268.111 75.062 cv
268.111 75.9985 267.352 76.7578 266.416 76.7578 cv
cp
.780392 .745098 .8 rgb
f
251.187 70.6938 mo
251.187 70.6938 259.354 71.4209 261.208 72.5078 cv
263.061 73.5947 266.213 78.3848 264.872 79.373 cv
264.027 79.9951 262.162 78.6162 262.162 78.6162 cv
262.162 78.6162 259.083 83.9546 254.739 82.1816 cv
250.139 80.3047 250 80.0542 250 80.0542 cv
251.187 70.6938 li
cp
.976471 .521569 .458824 rgb
f
262.162 78.8662 mo
262.041 78.835 li
261.162 78.3496 li
261.041 78.2832 260.998 78.1309 261.064 78.0098 cv
261.131 77.8887 261.285 77.8438 261.404 77.9121 cv
262.283 78.3975 li
262.404 78.4639 262.447 78.6162 262.381 78.7373 cv
262.162 78.8662 li
cp
0 0 0 rgb
f
262.307 73.9473 mo
262.14 73.8833 li
260.289 72.2222 li
260.187 72.1299 260.178 71.9717 260.27 71.8691 cv
260.362 71.7661 260.521 71.7578 260.623 71.8501 cv
262.474 73.5112 li
262.576 73.6035 262.585 73.7617 262.493 73.8643 cv
262.307 73.9473 li
cp
f
240.164 50.7305 mo
240.164 50.7305 223.77 56.8672 223.75 71.625 cv
223.737 81.5771 231.488 85.1187 239.639 85.6987 cv
246.888 86.2144 252.474 84.3608 252.474 84.3608 cv
251.303 69.0137 li
240.164 50.7305 li
cp
.658824 .368627 .278431 rgb
f
248.051 70 mo
247.99 69.9922 li
247.92 69.9746 241.008 68.228 236.171 68.3218 cv
236.036 68.312 235.919 68.2144 235.917 68.0767 cv
235.914 67.9385 236.023 67.8247 236.162 67.8218 cv
241.047 67.731 248.043 69.4902 248.113 69.5078 cv
248.247 69.542 248.328 69.6777 248.293 69.8115 cv
248.265 69.9248 248.163 70 248.051 70 cv
cp
1 1 1 rgb
f
235.647 64.855 mo
235.427 64.9419 li
235.347 65.0117 235.317 65.0811 235.328 65.1743 cv
235.398 65.7729 236.816 66.7905 238.04 67.5132 cv
237.353 66.3447 236.372 64.9868 235.729 64.8633 cv
235.647 64.855 li
cp
238.681 68.4082 mo
238.565 68.3794 li
238.198 68.187 234.975 66.4609 234.832 65.2324 cv
234.801 64.9736 234.894 64.7427 235.099 64.5649 cv
235.303 64.3867 235.554 64.3198 235.824 64.3721 cv
237.111 64.6201 238.724 67.6943 238.903 68.0439 cv
238.953 68.1411 238.935 68.2588 238.857 68.3359 cv
238.681 68.4082 li
cp
f
279.165 75.1401 mo
279.088 75.1245 li
278.273 74.7861 277.703 73.1191 277.642 72.9302 cv
277.606 72.8242 277.664 72.71 277.77 72.6748 cv
277.878 72.6382 277.99 72.6973 278.024 72.8032 cv
278.179 73.2681 278.696 74.5244 279.242 74.7515 cv
279.346 74.7944 279.395 74.9126 279.352 75.0156 cv
279.165 75.1401 li
cp
0 0 0 rgb
f
265.49 63.1538 mo
265.092 64.0879 264.738 65.2134 264.937 65.6709 cv
265.114 65.833 li
265.263 65.8105 li
265.573 65.5386 265.588 64.2866 265.49 63.1538 cv
cp
265.182 66.3438 mo
264.978 66.3135 li
264.748 66.248 264.575 66.0947 264.478 65.8696 cv
264.039 64.8569 265.273 62.4102 265.415 62.1343 cv
265.466 62.0381 265.572 61.9834 265.679 62.0024 cv
265.786 62.0205 265.869 62.1055 265.885 62.2129 cv
265.966 62.7627 266.331 65.5391 265.592 66.1865 cv
265.474 66.291 265.334 66.3438 265.182 66.3438 cv
cp
1 1 1 rgb
f
299.753 61.8384 mo
298.886 61.8384 298.265 60.9624 298.236 60.9204 cv
298.157 60.8071 298.186 60.6519 298.299 60.5732 cv
298.41 60.4937 298.566 60.5215 298.646 60.6348 cv
298.652 60.6436 299.259 61.4937 299.951 61.3135 cv
300.082 61.2764 300.221 61.3599 300.255 61.4941 cv
300.289 61.6279 300.208 61.7642 300.074 61.7979 cv
299.964 61.8257 299.856 61.8384 299.753 61.8384 cv
cp
0 0 0 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 24.2.0
%%For: ( ) ()
%%Title: (2204.w037.n003.311B.p1.311-temp_01.eps)
%%CreationDate: 4/15/2022 2:25 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KBj26BfC8\5^978B#mc,Rkc3K*d4>Dt2?@e6S"tU+2RDW2LZc.]B;t0<_NMpd+^s@=OIXgDp8+c>1GcR2[pH5e:NMN1QW$@g
%d5$ZFm>7(tfDfGpSlPL$p>mlbN,SM=2_-^Wh-*qLm'[h/YhdS`Wf:&+3L0UVe5KSf.=;c(hM0Qqj*N7W%8,g1-bEe/'e@h=fP&fe
%:<LZq">l1<o;aeAJcYAKJoB.3eS[D&L&PM+UB[@"knEfIhX$#g%]g7S'tC!Ooiul!\8M4_mepI:>%r1a6)W/0J"4QVfaW]ah%,tU
%IfP,;3:PfFI$cC:-UG5qiRO`MXl*c'5(u?TUir14Bi?Yi-5,sCU&O(r_M\Ej^I<_RpR5B8Ks,(19NaL(mVW'gOPIW+;O.b69@Z=5
%QiJ:NZq."O6!.o'K2+t-PeN9b;iB)>5Og\D0lVmd/da$`L9rO?^#s$=au*_LG:b1rmo8VE#__(biV2H`ZS3e_/]HsjX0Z1/#onrc
%#)#Nq[b%X9X]P0f#H6esb\)B@29K?mq5M@^<WhE%S4<9X[l=XsVdTfU[ScE94-ifO1s:'O[MeuK>AZNrJ$dZ5lN`D:>4&$u);B+@
%b0Ke!!*%4%0N5i4J8N`B2"+Z[hWfrS_eOE9$V/Wd\B(gYONX1qjg7om?5,;:gK)L;O4IO#E_g4ORI^+hNLfTK5JI+oWs0Ja3al<h
%+llLLX#C[\DehkfEH'L2*S5oNdSP6=&,sULjZiq5KqK)%fG+HIolhn[UI4lg^d$;dhi<?(I33t%o,;A4pt%@m;q&Z\9p7dn(9'B>
%Eu]#Y3;Cd=YaONZ1WLp[oq9$[D1!G[q!a?Uq`Zq0I;FYAn2E8KkHS/RO'V@&r$7oT2T6kh=tD]EFY=N86*\M%GgX07?4kN*T41n#
%\S4BSr.E6*0DpgS&20"pItgMQDet%siGZS=PCkqA?MGJs+]A(SLLO`_d"iD8-J\+pJe9Z+Q"eAk^h/B@rl-k8,/Q1'B^nc1VBqE5
%Ire]2Se9oBoBLRL>.eI4DSlFX)<-IeE@>EEA'U\q`o.;AL,`pC1MO?TieYA>*?rRFJA9Xo&VRp()<-IeR@,TY9O(m)cDbB+(9]#U
%Z]:Bn[)ZcP4A?d7Se7X7o?qkq*a>t1S*5@S"qf??M?m+(`gf7_*:YsG@p);AR4d84Iq'Ec&@uX+f:'Y=j#L5i[5_rqd;ha8B9?Vr
%cq:$XbLG_J1$s6u-6=aF1IgEFbK"4@ING'ci6V4k>!+;b9/cC5$,f1FkoYh(:]%[5FP#7$dka_"SfY,3CE;V1,'E?GPLfXQ[l(:7
%gqYd]E`2WQ8b@&rP4d$]0R"8KTRZ`<R7a1P8]`(Irpi:siqL.$r"$Bn2M6=*q4I!Dqqb]ZkB[!^o:jo$oe2frO*Z<O?S9CfH[ki5
%F>"=FeGIGhf%0VEmk=\sU4:>2,7j<'o9\A#GPi7sPZHYHMhN?Q[I:SDMoDb&Igu<+?+3)flsc)aR0GAO?;`RNc*Er,i&bGN=L9CP
%[>H#JPJs8<MdFeP$dc<^bX*:h,lGJEn/i)>%0U]5QPEX*hr.sGiVTdQ#7uJ&O3<]@Q%KT\9^!U4\0B1&bkhD!q-ek;&DtgrI3&s3
%$U<rij(#rVd)>[b"sKZg+>'2BcXm>GD3R!GD?-hk7Yc_DCm*&S4F02LN?p+mWIR@R'V87qZU>O0OcC5*bp%@4UB=IT!--V`X2>=c
%Y'sE\@F[%DOO)A189Z<I]=+?>Z?jftB0fT9aJ!LU8p:^NN89>!q5eADNgg8QCfi`=TU9ka9RrLgSWM`Xeqs@dZdbQ0Rmj%O#Srnr
%fZA:6/?T"6,1H`$al@"lXhnN%KuO>J=bL\,/Skq:4%2KXcO9O<o3Pb?:DVXrPoTKE:,2Ue1=>YqBINEo1:]LWinD%QQk`b\V?3W7
%O`^@1@]U>u'UL'O]G;IdZTVI,k4g%#7J]GX$X-N"LR09+<(7"?o8It.U*=c5s3/,D#,8cgie\XYWfd9S2I7F_6N!g0OdM$;=Q$Wp
%G`X)p7<\`27`$SekoX#sk.XdD@Y9jUkn"O@9W/,@4tR9/U1f-o1[lEf!*=s);0Q]\Q::^WIglOWR!2Ei;.1]S7IgaDO"3ZA+Qe3/
%a.u'`,%'Rf0/P:e+A@rbSBir2PUm*j*G5"1cCI-S&i4qKB'<ok,j'Y*YWDOiq2b4h?M[8s'slC&%K;i`C&hU:_^i^X,kFE(2_KI0
%M>m>sB=qK2&)UH(Q+0k(S2Q<$QuMoT*-aNQHF-XQ/XcY8XFGL&"!l1.o-0$1<#-CJYFZ-dXG#,:q*\1RlBH7VW#eJ^m&&;MR2.AV
%P#emZ&t,$3Jcm4qn<+TTFa0lg)c[!Oi(uZg1+BZ_$;qa9CQrb5-t"W:67ZcT(`jE?r6Il4Grcao&2Zh$A^ad261TD6)_$PM$/d7/
%!\#BC1(eNr1b-4ns44+V&I)9fjq/kmS/;T1Nc`'&C*6B1FL5;V-b9X`^boofRXbT2,,2-_[mlZ4O%d[d1.`3pnRQQ?[TuiZ,U3\3
%N:1*!d]P=,;,qU"&gCj]*d*At&B/st-U'M[ZEtm&2IkAa'WVakpE"PJ02]V5dcCoZ%iIhl%ID8-b^tNbQ/b>+TKIasZUk3DH5YJD
%KkIC(J_boHBn7_;_9`fc!os#UQW4q?o-*tJa?4c*S3VLH*>5?Q$<]>ub%l]!d6TU:gLnEWl[lm*LhpiX/7d%f;O"`(>2i'mZTSVQ
%&Pdfg#qQ_8p'>k$:\-PZYU,B"LIrs$+FT,lq-naF]TI?tRN`bMOoFX"qCEsA#:(pt\iOru0i>If`QO'nb^ZKF8;.QdQKMDZoLtVT
%3CSE4j4lt;Z!Lss,C9bJ0qe'*,,[h>H'Lqr23![n5q-p+6:K3=>Tft<O]Cj;N*[>_SC9&44hrcgCrmr^4tAB[C%fV\^s'Gj2m3Ld
%$(CT^'jGCC,9=uQja/gqFcFQcnT[;KaV,K#O,E6_6AC-oAO,76RRq7n;A%Dga`MSpGmY(<ReRsU=te91M`Cqc^SZiJTX^G4?ijV&
%:D"7:o]3GaLQ?50aI1*$9C\Rd(lAMKXe5f^@SHFh0gQQQ7.&TMq]]Un5fUl;L.ga,PK$n(/2pu.jdD>A=A#h\>A6,3PPG[too.fT
%Lo(bM[><8bqY[E\Hm_;'jQRORV>HUA'U'4.MgS?!LLGYHO<S7_fo72T17WVa9!YhHpon#Xi&S%ms/:X8IuQ#H>#.o8620[Zl+Rq`
%aF*5_5\2!*Q3,#b74.p_=l3%Pe<73CnAsUP'u3?RHU)ci/$hJhi?\qsN,>1E=R39t7ULBOoAPS\3jPM7PbK_Q@B_99-sP-Zj!N^d
%[<n4j,W>ql$:dB:TlhA6I@C"UPdN"2occ\^gK[+$7WB*(NLL48;3dqm]!F(hCdVo4?IN914eE[d]1Gj*Ps"Q>XXT<_Sh4]25T7/C
%m$_8Woi=&\q!71)5O@'LFOtmnaL+5#ejjqlpajmb?R+A==i-`0"\#OA2Ip`O,rQ_m7/j?]mQsnW0iRHWiBbr:+_]2POL42u%WGB]
%@.ZirC;rqfQ78r1%+[a!,I"U6`ZE7'_a<U#[>U!kfgEtn[!#:J39F^r+@@0sg;?@"/qJ:)&^a[u":L%U4GW4k.Z9oICGTXufs]nO
%Zj&qXN$3j`*a)ZM3``r#RUd+eX2(5[fC:Ds!VA"VL?)jmknFf[?5!DpqS@7^"U1)$?`csL>N[MH_Md$qcKYfuU,Ku)<'R$$'aOJS
%3?:BJI2*AnMC!3Y(#N2n;i!)9N;hEbAV$5L,$_2r7F_KO"q_"_'J3:^H^kiZqG1+Lnt_+fm*5o.0+c)B%L%SS"#?;hQc&AN0c9SF
%LOrN8?-XdG$8qtHP_:XAE3^B\ZtHV#7WekJf1WHf9:I^QWf@A1U*u$5**o4MmILE$XYRp7[#)un"l?t]ZQl$9TERlu#!X1-8.m*_
%a\()MD'JdGkHm2Nb[g"GQr4SF7V%Qb,c+I/:9B'<4r9XX,_\]_8\E5X#TelO<+'$mP#)I,2.;e.Q(sG,!@6F+4=&.Bat,Q*a#oFJ
%n@gNcA_1D2WYen8/>[rk@pj`4!n4(FRc?H*P^,E!O_'sp:m<UY.O(-jI/jT3+,V[q!&!G?<cGI2M1SeU%:1`.#-UR`(6m2Jg`X2&
%=tG%lL==:R"00CNoT>IEIST@:gfM:#!Hc@o=;<Z8!Q)YRE<tg7pXNhOZbT&!e_0"MX4D(u="qZ391gFD9K%YE)\h$uSV"0o-B7&S
%!<*5JA/&BKJJH^uWuGjgjVk`>XCQ@VOd=5Q*ED7\JXGjp<bf5[DoL!18LNMp'$&7d>QDUo8ae=c*&gpG[MA44AlB;T`<DpNc4h66
%HPKhTas>,N\Y]%QDEq2R*=>n#ki/Z2!]?)e_1=Qk-55`NN:*X_.TO`@NB6jIFT%Q%%_MF"0V$H^@sTq4\:TEg.'eOe<\/EVL%r`(
%@8[ijPl]jT;GlD6dt*`Q:5U8&h^N:H?j:B+W!4a^rfF8"11%_i)XLOi2304)17sQ6j(s;sY(a]SEVV'j^_.mE,4t5)ZG'^n$Ks%k
%i^no:YFJ%dU[iIm`$le+\tV:q2XjS89:CNc.^kKGiIEZF1$'ib(`59%NRC/cDc0*=atD_(A8O:_kq/@]_s_D;B_pqE)JP;\p39q6
%`2Q=d7+(Z'Os@&ekMjEKpIU&T?q;r*nY5iX4oenbkU8O\:0]?(P14IO-M`F'S$?Np!eZ)^7;h`Z(r.@V3@klW(l01&A<d%;/rpoA
%T.;9U:=Ni&c0;uDJH:X@ELB-F\*pNk7+jbP7o-uodO4'=\OpG[TI\T6aNI)4US&j4Cn%-9E!epnUb6pNpAD:2m?r9i8s4D2qWWps
%ONVNg/KQ2'WWmP]eg:#Xco(qcA*E4+)T_5boS\`6QTDH62^TWe4!;p+q6(,1r''+\eOU(&Q=it7@+gj'Bq-SGEES!BK[mR??5?aj
%Y*5&pOt?K$<o+)2V$A!k@679.e[5"KfHmKOfl&oN(nhV_-j@W'5Z\J`UJWf!7ogBXS^AUuRI@$06;iqf/ujgZZ6Ggcdc?Y+XUP\&
%,*drmFQC\#2)d*6/H5<927QFN-^HNQrn2qdJb(g,/=K4hV3)N-UgQlcit.\Q9J$(2peX)tolHfV#9oe">6V\rJg=MuBt'er//B,E
%BFSOO?*ZD@Va/gRaif`DRBW#]J11K9g,3d+(+H9F#S_u^(8'^`,*FTd8$%g?3$_6fm,SssNtgAmcg!#&VlNZa;(WcSD9ts/=rU@S
%MKsLe\OpFZ1e1=`2\MW8(f"DuZM['U4)5r+;!Tki/f-?+c]oGLE:gYXgnQ^k5"cu1*hK@SI4BiplT@TkS(OpE%J1i)#GSc3BQ1Yf
%O62+hKR&[IS3coPJ%ZibQ$RAcdJh'5(>Zj#_,?;e5TA;fOl.KVM[bIN(K,A%'iA>:"Ao^H9\^ji&r0rVpJoE]WL"Tbj`?RM2OKX%
%?S8CB,;65%1FA%+7N)[">l'AY);7?[/<\Aa"_Lu:.R>\TAbDY^5*o[U!Rp:1b+tjdYM%=01rb'BOZL'!iYe0eA1gEM^$*Mgko^un
%:n,uLVKobU7V,+j[un&@;]nhNlj=Y#MoVgu(0`2b0XM-<WdPc0(s_2hYm-Kg*0)tB75?&[mq6-XO+j<]X4kYW'**=3(t7R_PpW8"
%AuRj\O'M6SWe*YE;O>IH6rWm)+!-<NA!BN/Eb.MB8OdMOF;]V:;sb.#^A"!_jR`.3#5sh`1^q-3hLKRm<["Uk_Hg`QnX*0onMM(`
%8M&/diFus^(MfQ#1HlNF1*S_1F\:e!D$6&dq4kDWCejB^E/kE&3#0O!R><AI(jBM<G"[gOQ:5ICXaW*#TXBj))"8k%51m+poc1E\
%lGL&),mnXV3;lqH8(fhKYFDk(6iYjJMW0#XTN&2Yino,gQ,(+BQ%RA;E$iX&162(5I:[$4N07s2hT$sN"]gkC2gL^8`[PA]Y8N%#
%7_::QEZ+)+#Bp8%3l0@eW0e9njSA.dcn>*hYTg7]b#"LYfb\.[8jbk'*'K,?%LF_&<_oVM.[iMen4(DTNnAsr:1*Rml6WI-K@Z':
%ab]j((S)b986&Vo__SPo7Z)dA<PS5YRuS#Y\CP8-'A5>3*&K$&N`/qO=/h,t=WgKn^8E`kK)qDS*(M/BW8s"ghofSXaTuK2WX@si
%Z>Q7X"FWI`!K&(dmq9+\8J@@sfL_34ALViTFGNJ/jbp,]V=FkXGMm2)?Z74OERI/6io=4]4pB=KX!3I"4Q"US9.lAdaKo..UF==*
%nCpAG!#7O9jKIOa%h=EGlkIbJ^a[:O;6Mo_029PXAJaJ8]>tuWS'G>r#LO;6QQW7X=6?b_=QHh<[[j<&`0LRBPB?B8Z+9?To[,(B
%%[bU<Ks-R'Qo]`Y@JC\*.Wi^gMieSDOY/,e7gGf:r_]u`d5HW0=gg@1_M.]8[!ROr90BX\&.H5-52V)t*$8ZGF[_S?Kl[:lK#mN'
%Qu"k\aHk/%Z]rGGMB"MjpstE_Xm*c`FLY5i4#W>)q#0d($DeAS[G9EC3?=9I:B+`WPEQb/,LD$#;LKaOU\9:*PGP2KM10206Ycm)
%3oH+s&Q.K03>Fsn+KhYtUl&;t3&FsX`=1Hsi]"2E0B48sl=I\,_e3oW!=jRkA%1!e2GVf#]f5T:Ib<mCs5M("#]R0,J.@i*5!nhl
%s0h_ZmqB2aKb)d>NG`g4Ia\#WIrj:`j#B^QL8@Y?<V[Mu;`i$,i6?XaNZQ#/*OLD2MuiCB2OU5dS0'LoYo:!d'RpI<l)jrSUjjOM
%Bs_Wg!>rCKrt\WSc.Khe0$/p]eY!tj;Y373i+D'iHkHFMH:)/ZYk'3hQsm&O"L?B&e7N+dCDt,T8i.8H+k3Nif#e`c_A0C_gLgJ4
%cmbN&<fYp+k0""[C?;f;1s[YJ<3FbgT;<#9NG:<%-(d[AN.4;=@F+6eKr(E4<9iSLQ.k\-3alru7]hNn.]2pcJgQ(r/ba0K\",SR
%]*o9GZiM/PXUb(sLqmlO(A57T-MVPMB%\gLAM0IIs.a6K"WkK_QrqnC?>`9No@r-3BR(G\B\bmfa,Oi1?0a($#2'GhSP#k"mf-sE
%_BHp\Xa"TU:<!O@7&uHmGMAZX%@J*eq.j2NllLR24Q@j%+g%NS*U?6'6Q1F=_]2e='SKuc0(lnUGH;>H^#dm:i4.d,BlS-kb7Y#/
%\:;"pXAh:VnEEjC3jfCbhJ@%H2p*;W/lYI<N+gT71$#*peD/rhC)oKC"ST8Ra5'Jr]QshmZ`R7^fVWakWKpasSQa+adK]K)kX59u
%q15s\5+E:@0f,G*g4qu[Vu;Uh"kBbjFV\"QcT5.7Ws:M""tS%0+5RVk%>k@!:Q#b(m=]^O&-!tAYcm_:@@<'gh^dg6=TXge]A#Y!
%]5a(;2U?t"0c[#^3<;=rkdHRE_Nu>NE;20A-sWTLE>8D4?4:'$W7f*a[rjg'#-G,cXX:<0]&BbG1h51Ud5_]j@BgPrm=t:3&d]Rl
%Ip:"9iL&0-[@L2Cp_G3]n+"E,Ki>[ihl/m/1E<e\[DQ3(P2OpCqR2JQjm#/T=UKqZa1[5e'b1.<<\:IYp$a(J4;`fSCrP#TIY;QE
%V1+]Dof6DrF^+FEhrqL@iAtWC8MEbid-]e5jT8p_1n%i'JCGqI._V^gX=mO$BiF7AJ\(cQ<DYA6HiZlon0GCs8`_:uga&.XPfd-m
%<,RlANIjm;F/`Dr,0?3aEX?R%,a01D9^\\k!.Cp&NCnP\bDi.AS)eVi3^/a4DN`0h9FIp`Q-1I@B7."T>kfnPm[j[E`qMR"D7(e\
%5dljbM7]>I**9aRft_UOG7rs>m7t2'I]Lh4k_UMHGk9Z!CoCD*Hc)<,MuqR_DS'0\lFEs,E4"Zf`lUe6ls-mp4/tX/,W;q*pLrTK
%`&X*$d5rY\bi>G`4/=?9WTA@uE2S'5g;d(0Wu0XPq8<noccGjeX#%"Ea8)L!U`uSfh%k#;Niob$XcoClm[&N9#k^'i48.Tup9,+u
%#;iSf%9dOs2]MFoSj]D-G.BI5PN/!JeD$PP7elYfN+p/68Dc<ZS45^V&EW(,k)LW')P`l*gPN00]fGSSMD98nQ$R(!=bZ2#T3K=L
%;UnM'ALBdi8-D(79VFt*Y9PcW7Qr)bluJ&Z"fPH_o\epR1'%\Dh>((0>9"/i1s.d_<W;4"_&DPLq:nYqK/j_0GN<&O?/%7J>*[B9
%/aO`Kk#WSHa=9ptBfhZ*a#T/i&q#n&K5mm[DM>4A&1MnFURf$=O$C45aXNk(.A'8Xi.'dD%<8l&1?BI7C9A;+583B$NW)5@6lIrR
%<SR^:h!K/V$#4cr;l3)`T,`!e&t&k5g:)ZSV45D`l\;m<+TI#Q=1<cU\P`m"D"s'$c#p)7C7aD7JI,$D#c8bhl.NBgO-E>^fVgfr
%M=I#OY?t<)"QdbqZ!MY60o\87&GGPAjMps/lu<Y.3%i?j,]W-[qH/,so<2Zu=F:b?)gPpUH+*a>TC!`V#[g=Gc^8'9E.$2MOE#A+
%8WXg8A!Y1[O8d7fhlYqJJj]ZcC+"GZj`[89aX5Ytae&b0H<Au6X)r]8P+A!K?#C%b]`d(H2okArQWs/AKhAs[%8%dm^WT[)*)Dob
%+E\_IQZEu2f;f'/>_41%@hDra.K*W=_Fr;NE]Cr.1.e@9)if%$1F<]V*Zps/\kXM@gqG)5'9&!#97Y7-gUAF=NfN/U-&J/<Dq=b^
%dl.(Qo,KF%-b0D7>MU&FX-IuJ,WN+==[Zu)OlY_?XQaRFPsD<XW'ung',!\&)ea_:nO<Q\4:Y.#l(Mj9>H"&;4F;<NWE,4R&Zq)#
%d6D>&C.[ofB"*Ia!XILp,`0Y_[td=$UoZG)%4IPnpq;tbe3@\o>?D'Zn%k%fg(,oC-YOfbp:04$Ti>s[PAmL#lINPuS/1AL;loMk
%Aem\G;G4CXLOX%BGMlr=dTnnjOp%28:Mpr]a[q^o.US/)8X.ZZ3f.m4^M>LE?!h)c(+"h4NP%9CS4+=!m=I_\^mMX'0gCRo\k?[5
%OruRO`[m6@*rWDn^K\`s"c3@jro>WQj=JI7/BWr'_d,<]Op%28G<'mE/;j35S4-!`q2@m54mlr[8pBMN8ePZ(hS.grZRC[#c^8DE
%n(a`Wa"oT0'Q$Ng3Sp+c,s$K6iPbNIn1[%bpnOn"bn]$5q[9_L7g6K=j6/GR*QQQW-)i,MbKVedm0;gs/Me'Pp.KSRRFnnM,ad5l
%M-ZV'[BZrOCFt'1_R2tF2TfV`6m8+'[>@nqR8o^ZCQi.C@auf+mB0R!pl<_KDa%bfNlEXO$3'0Ak#cI#:=SLiC?/.>-ijW$C,Ae_
%5+24bI'jV)MquP5@<K$tr&D7qO(m<;b"couO,:W<kb):am?lTlOlZ(l0t=onh8K1pL8-M)\$lbZ`Q?X^,BS'$/$(V2]Ja9TY&9Y4
%(G[>hKiI@!n>&ssqR_LZct\;$Vi\uea4fAcC*Fs)Ulc9Jr&.IBZN@>hmg=H(\jNCg-TAd;D^<XJ*[gdkl`iI^T+%9QO5g1nK`)Yo
%r.!X?(rrZS0PWM=e>P5DD=F\ih#q)W4uTk-`k+ees+#A]lSe%_@TP1$bkK'H>*$\[$J_K4f+M'#cEG)DNX%H\AK7l,/*k*h]#@>j
%!=i0OdH\Wc]PX!u3.;`jLN52s5Osg\BN7*+[BPk5h>aL-)-Pce,&HH5mPr=.gk`J6NuaPqB_%tV_o_oHq!\7>KmOsjqnJK.cTAH4
%HRHSAA$Z.3E3fL*g&IW0s8FD?J&u'X%^7cj')M%<T'p49GI$Bng%1d$q;,GsA*ir;bE\9TDN`cIa2SN5W2D)?o8Pd62"`+b?0H94
%fHo\3aP46.=3\.bXV1uapQOGihUd..jc<Ce.9_/%8)1Y8qTdHKYZbmk+-&n"EdH;f#)ae?OZ*;=K,kU$V,;:=@e0K+UK\m7,a=KJ
%fq_;".?dKKA9Y@R`r:>HZk\>g'o5Gu'gT3Jg0"/OBiN!q8h2Hr1g33Dapm9#rG5@rqe]F&,Uh)q<Hsk7:(qDiCWVL$!2nafV:P$=
%op(/X@]!AdEg`e$TsT4]"/oEeRo82:I8`RT@k%-=Alo,`dCNOX$&H2sO16F&4*^IK-Z'r2ku2o;p3./OJja1nMd:30_$#3UYP&0C
%fo',_KpPBiAQ!c@'OE,?QV$/thaZi?(LC(/KaTQ6$:FKQ8`=5YGkniE1+BlkV!rDO+k,mCV(a>@_*[iq_DA/6NEcYOY!!JH,;+t'
%rFg6)`$ef@C8J6U<3@eFN2%7]nr3;'Sr(k1@FXb68:K96o\IVpqbiJ:Hc\Yg`VH]C13'A?EH2H9`&g_3@Ch94%24tgpQ3LLiJDUq
%A\IoC3QH-pDngjA*LCCN-at`lr+g?Md[8n*[!rjU)rH/>=7;*CA\)AIjX7Q3C[sI^W47qoJ"42lEmbFZ\GTB0:<8s1;5FEQJm#h1
%61c0/r-Pej8FTWbeEF>[q#)S?Dc>hC87hdY3P_g8MfI_@c'!WTj3/V#.i9A*9JWtpaO#TSbRBibZS:(STr?peq6p;m_C;Q39`&-F
%-TZ(Ag>.5OHl"Cf?5.Paeg(P6D_XRPL.%2,rU3;u@l0?%B2ZbeT0R0i`u&Afo'Sa`,7+jD3l[tU0ri6&>duho@uNQL-?Y8eW+5`a
%&qA,j4$fTN8U#TT\Wiaj0K()NO\'MCb&Pc<MllJa2lr@/`+B,=D[X$"=/XQ[[@L2Cpm1-Kl?M@D67RiaNI7k.hUq9r3i/llKRKZt
%Cj/^T-=TeYle=boU_SEA<4<g3,S-Pe^S.#`_r$L$h83m@;)A*5H\S]?kP"?^9&cM`s-fWCFZ3*j^uM6@W$T95Rb]#3$,1\^dn!s/
%)n.8$PIlu)G9u)5>tL5qKDo]GkFgQjmT..oNcS(embAJ=.$YbE#M(6RKD\#p]i0V_@8%/YNEt@!):QUg^fShc*aSH'p,Ef8Ot^Oe
%O*i6>iGKb4l@;RbW@\;6md;ML35..k>7,Sc)W)EuoDF5Er,'HOP?dO-+26!)/t!0@A93rNDN`7M-7P-pDKM7(QJ#MpOE6T0N<T`R
%Ci6>[\HFi%N+k&6!4,6P2bM3IT06@88`qGbga&G[UiZRXFO$JRF5rV4-">U'UiW^YNUgd687Jtr5*oIfG9EAJL;_onkO-uF$jiP3
%*d.-JOLgGAXV,jG_:QfB&u07V)V<dFE6#&saBt#`\`e+aN7[O/+QIX*(ao4;os(c$$1SmY6Zl:\<+h>t=[&tmV=TrdK,W"-<9a<_
%:/lCTGCEMT<&dmi>?7LC+ukllFJk[ZS$#$#h\!j([4?Yp^)iipmS+&:[q"14qtopsIp;'f(psM@'e#mLNB2JTH'3u0YfCThQi,T4
%8)7Dt3476'[SDEP\6fT+`B&Fl7p,am7?XCqfD=p2FgltBpTm6u:KMND$Q:R&kBu;L%<b;+P=Ee93!l`^$ENYK@:;%Ep=@a@9OMOc
%T9WS=d8!ioo!\$28c-aK6/?/J<2bmKh+Y8hr:!K7KKSRtdc@Zlk&0hYY%&-mh:5&)i_sd\;b-O66*5BIIlA>>0MtG^Z-*DCXEq-1
%8=;)RR05sBT]cmj7?a,&[kD9!l0orH)S)O)XrY-g&XPsN-CPX\8'qt50<i2YAfsD+G(*G\3$-`9[W"bK?_(Q3-/OE02;1#pFmDjG
%%d*0;OF1tTo\IV24A:#^\!aZSS[2LekZ\mQeZk(7iZsYpF#e6#'BaU]fpXn@d0NW>h)X=G58e_OR9\Pq^2]D1k.g$ta0C4Yq6Ij,
%%smXj5Q9jr`_n"8hSq:1JacsZQM""%e_B.7T3o=TB,l))`l"(#q8Gbfd(=_NJY7!>jL"uB95pZJ==B/")="u[?:Bt7f[@qgk"dqK
%/W=T\>`=T+TZ>*]Y*7&V2A:<,ftP(H9?&"DZt"SU`m.k=9QoqYgb#du+9NVZb9cRg$#PVSRD?*\1?IG3h0f,Nk%kJ"Hu>#XNVo["
%jFl?fgOfV>WJum'&4sUAH7\+@Rp#6#EN*Fi:a93$S:n"RV0/-i=+A9nNT6mT-TFjfL9[]<a]*jd(de!OBrS8=odsC3@^f[t)bVu-
%Q\6pMVMs#1(UNdkR,,3<M7[]MEjp?SKMie;jS>G`eCu?B^.D`9AKJ,7@e:\!d;JmG`5pOnDAGoA8fs8Fa"MCcNkAr(eN[OM`\GBA
%WJ)=Yiki2GZ2?s>\D`bsc"&bdEO8b"7ph!=0H3;JgPu%^N'c.0/1Pls4K[,nTD\Asm3[8DnRoJa0)XS"n,%Y>A]p(n0U6ErgLmLf
%TH9VXXjg+H$u6jV@>[:o#M!SNPl71gHI->)Qf*(sFEYdH9Co-A=qDh(^RRN=g(ip@%'Edm4<:a?P5[BKqMG1Fqq(<.BA$<u+)d`g
%K0I#J2nmo.*@g1+H]X!_bh>PuSS\oOdb4RkX]Z+.7Rh+tJ*A1DptqP@+a`]/j''/I+\L'?XtP0\?5NZp(VV%DgJo9OA?h%V;=ruU
%^3^?n^&[L]O<V)tHN2A`Q2cFHpJ;l<Q81"G:5#C``b!al@`6V3:7p@8)Kn.b,I2ZDPEjJ-hh)NpSJDrqJPq<DS"E6brX]#)heiaL
%EkV-6ZegX<RkSLtF"SZ]9n#ql5kXBZr?&H-7MU^TIrUZ+!53+O[HKrPe?)%9:^B*)'f/?Q)M#,GDu1Lo!+OgRP)lg?-."XB-NDXN
%^M0"7N;h&K[8))2BPt9855H&%g+,NR2DiDaL1\6KC>/W)a.?7Q87Ri[WS/bkLI3^:U6Xr>%n?];j%:?,7;qr=9P=ehZQFA!$(D'R
%`gd!'U%me=\Mc(/3D)bu$C6&PBgr_1hmsr';(-SASOVuWRY?m>nn+b;q-.kjZ0dMrrJuj"E]_(($[jGe@<+s<2tU^3pi36^HTcRG
%Q.m\D8)M"@Jss'IQ."JCiteG?97()D]a!M-?h@!LLjdhBmGhf*O@36c3>B:t?]%Jal$Y/OmA%.XKQff0n'V8dN!N%nnJQYORV*]S
%I)+Is)NF(P3Grp]K%^W/3]jIdl0s!H/`pN?OU35Q3c^(D^2SEUU'P^U,I*84fEo\3?N#Vtq#>Rndq)N(8L/A^f);V;X+k%#AaqH4
%pjfkc>Fj9E<uZkCMt"c`r=9gkG^!AA\6a"l#M$Mlfr_^UTub'aHg#M0]cGicD+1&_L7\fVS`<2d.];Lan<?HapY$Nh6aI^uUbn+2
%9"Rq03[(j=.GZ"@G9"#C>LgukL!R?.:0X!(Wa5E<%Z&9Hkr""rD,I[%>0oGT>[1+-BLTAZa=ru&bB,R(RR('m$;>OOe?[l2A-VEu
%]@lE?GamM[A\4L&C+j7E_H%0T>?]IeRZK;TMWtgAC#3VdFO\c?(tLA2a%nRFB%R/?f=KMh);,,p%d3S3]hph/F?;1#UYAJ";gb:5
%DrBGPfFD-C_ULmHG:0e!Y&o9U9"!*pdOuTh1S^XdYqdEN^BO$'*Wp_G8Y\aD9uoN0bu>:RcjB#'&t5teMNpp\'u>TBL$c4&\O=!X
%?3h2#m9HAafO:]4B`^#DG>SWN>h`je5OAZQ@;<:!N!L?"Odk(n2Ogr=G3Ur6>sN/f>M*]!.T[IS*4`_lQH)""UeW+;!#M]$HC3st
%jTfl3;,]kMU;#suaHG%bparRR`(;$;K9l#EXGq8KC"o1Zj#h@on^^I:F\qO+;D<Hj)a^X+n_FXYGdUYOnh")OZZ8J-D=-dech:\o
%(_(IlgGrtZA0ubSkrcRTlrL0U@>?N<n.\("atsPEoDPoi/Ef@nbsj.\U<L$E_<%OYC(4\_>8r:1[dhZS0Wi?oY?D,eNlq:hd1Un&
%6As,dA_S@+m@J5.=7E/f[BcK;m4plEH^(Oq-E'"l7K*K)FpdPL?^-e"Nu%!(i]#d%fEcG&!Bo1c)/7Z+6+Oi^;ha@B3ORaY1fG@d
%1/-9:Ad*HcC:).1i$)`19A>G$s5u-/pOdDC<k$e^!!6;7^=q7T<R7V7Ku.C7(9a3E'J?e0CV0JC4AmK/W3Y#FQ$?f,!lo=UgU[&_
%@Cagg`@T3Qq#Q\7dg`R'0a0p7L74Arc0Dk,BMn["TF'0RjK')DmsRBI+b\!\lO\&#<H%LT/6/[5!3'HZQRj%P]OKDSo88NNY*3&>
%6s649T(-mh_/\,/0-.?Sk5%J&hO9P?Y-AgWHgLmF`PqLUO;Qec^X&&Q'7-d@9>/hfktC%r"25Zu\I/miYaot*&Cm>+o@K&V5-Hf(
%JIq!37r@7jK%Pn=M@k\[6$:N^%5r!QVeWWW"s$W52PS2A<f'`e$4>tf`plOsUlgPfh2CRtCCIbD..'cpQPR#=q8HS^4FnBmWT,)"
%6480Dr"M`84%'LF=?k+g1R<3<KC(-G+F]&dA_hf;CTtR+iCCOh$!VjsW2F]lZodShB7!Cn]70<OXEGqoA*^DBXKRm(C=tSG</4%d
%3G_bllbOluh$'#kk=J:h.YK"t#UrA4RElWsJV^CIlo`@#6@^O+P3cHin6Y0C]I%n5>@XKmgUB!0.dZ.(01-0&.)`9^-ar%%1JLY<
%>V.(H3*`Rg4CGKu:.Y,XiAJd3/Cu$@Xi@a9C3*JFj2XS+WjX[j^/4Z8P?LFGBoUD@,SQND"#NHOl"(9i@2g/h<;W?up0=Hb,H(dF
%h+d/1nn!]1Hn^DQ/e8>MD&??r*f_&gWlpl_+)1JUpPQr/aDoHq6+u-2@<k^>W0IiZgXhhtDV;.YY+b4>btM=fBCo2AO\m)2-k2+i
%6lK_b@3#Gp/V_]e<$kf19V[<(nk^P7!`j'c_1-R2_JpS:Y\=fIJMSrnfs%Y^!C^tZ:CfEp@Me[WEL3.7_W`lj)%tuPB(U1UeF8?@
%("TXcGNak?Y*2Oo<N<M]7$.TCp*Vh$EN`<?-D:ZP:^rj*WoiC[1u"Gl=TB%1GTD:'VmZ*sko)VQ\*M$9I0S/X3cVhEd)9c`*d=_m
%;_tin6`g[&"oI#QFF)e+,OJ.'K5JH=A&K/W<*(][e7phDObApE-W@/XZ._%]1"L&n2/:)?/*\nEQ"\[!ep/4/W-B_12'-GKO+UL1
%3c=[-MSfp\pA,a&Y@1Q!GV#0]_7l1>NZY,2'o:D(&)-<0HS/lH]6i<Setu\h[S@aSXNnI`4fYbBg8/dd4*+ZCFQ%NtX,!SRQEu>1
%+p>CJ+cRW@7\;ZY,N@,Tl?7-KMf#bPN=FGhYn%\j<pQb`ksZQGXHoTdQ$pVrV\d@bN4qG.^bs1YmcQVQJE'W[f?#>GBJ`AA+ZP'&
%C7[:d5DK]t^5e]4U>/J+o*"I@8uEG0[r?0,N@s8@0\u.i.21oR?i*JRUMopF4"N3\<;!sfC!Z(9I;-;6X5J%B-)rU&os39R(rS>p
%@WekK9_EDC%XZUs`J%XsF)d?#`fkDO"LHp/RpdaId8c%iIXYeEZO:1J:BBCOl#_6RlgI$`*MqYrY*t'@SS.po0plZ<cL%6?9lHIN
%gZ`hG[?7&gT'\[HhKdiF/&eV$5J<Vsh6Z,-qI]?^c_'Ior9$C-rS[ZS3^*4b$AS6?c*a+7]mh_1>!?f:g^ru7?45X3ADN<E<Hp7i
%&q3Q#la`qP3j35j$ldhp%mPN6LDT^Re(_:VV2a[5G(nf89Q0#!^>7bf#Ob:.ppNS/Zee?]#qtG<E:?A#DthE]]UF>/D\$6Ep%t0D
%6[82&>>=Lec^\pCnESsjG$iEog'::GQBl8%14+prGd/[\dpbLWIDr\!nEo5hkLHbWp`b5q^7CI#a";V\f_D[/a0,(R'_<[o+9-H>
%3R+n<ir`ekpo)QaB$ALI&'WhWibnJJCO;qgQ?sa*hK'djNpeR70:^gI2H+kJ2*V]'Ln5q%:E3KX:8cEK@Dgl`KmW9TNR*Ahn)r$M
%k.T>Ea*CuOFUf2E^6<?s`SAmED08/9"M3V8@PkC[eVRboKCa9qN.$#U"k8s36<Z#^&J2PVr&LErs2?@9T3$-pWF]Vfc4PH0Z.E3a
%91"hh\c9T(5AXuNHLC14^$K)$a_Yj3C"f9rc"0YbITe/$Sj-PND7k.uT)7GncCHVT+$TZ"[ZZP?<,^D0PW'RB7Y:3tq:BGbES<!.
%.W4T4cAU+Z^@M'Po"s,3VKht18]b7?gFR5(k.PZskKg!rk:b6kX.>QWW)S8\SDA\i[%=IkQLU(I\+X5f;[D,RgpM>R`SAr(m4[Wq
%02<96\+X.@)Hb>:b!u9]cJ#PnYa^(2G5;@:q.1_YkeDLPfI1[nLZ*:(Vc>NS[:bM*GH$""Am;)@Z#K,\6q*Miq&JPRCh3:Pl*H*!
%RQOa!MUpe(e,91)XLFRb.\&&=0FPFnXjo_W.ZXKR@K)[dSem=LBh5;R;rqY!dcnVa$\Z!S:T'gIn)-g9'Z9&TI%3gTDnl+:I^&0'
%+CSpN65-3/F!'r.FE+JB)*a\DMq*NZmJ0Zk5?^Gu:X>o9Aj7oGV]Q\_e+_q?EI,V./Y7C'A"sgp?T-KaF&/h)e+7APNV%i>/"-%H
%bGebCiSg]Po\tY60Bp^Nid?(:[.61ne952r7GA:#k&fcmg?cOode<%&k@s,<oV]&HN`p/cl'@b2Mq56,nuMD\oLat3a@\[gII3n5
%=.erWT,^$Y9g>b<Klh5.5p;eK5CJc&Rr-tS(O*VX9g>+]IRnDD1oJeU(;&8lAh\:jhL;aaTAH,]2UX7>Z^(1^`g2m=A\<;R54!`d
%9##(&>YDgnH@1IrI!G8*9n.IlrK.#+?p@=,+7ANobAWjDdO4/,c1G-`kbQO;NG%M0o%UA4`_L,/rO):oCV'+65+>/_"Pp'AAo;C!
%2E*c\20\cVe^QqbM(uEjT(tK[C]u=fVV%ob1fO+7jl]S!pAMP$Q0%jtWR^m^UT(/n[pQ'(B7'MS`D8.gWJurXeZ$e(cZZ1/b$3HH
%?M.lXl;d$:@-Xip"+A6kVl#LJdmm?W2445NAOB3m?GQWLl/p$ck,u1Edrb#mEi,c.>PG"-XX@c1o9J@fdu4+KZY<j^oqq+ZF(*e'
%"mtPET3"dbTC.,Q2dP'b^,,_(h^D6<^-7$/^&-cb21=uUn`'2ql1t5*+8t?OFKc^kVSgm]g@Q3WiX8F9?/Nht9t+cAVt['3St+TJ
%s"JqKDrK1Aff`j,`KtppqGlpSs5E2-^"!qDoY#W<gqWU-bV%c,>'OoAgO%S%I.)2iH2ZTTV8M,9_=I6qHRE#NcL.6QDKkP,46r<&
%oLej49J\L%Ap\T2TmQgWN7\X*1JT=00_8t)G',-ESF"S'T=m@Vfm<15IV.K^4IpaZeTitBWI"PdVYm:Mb^;GI]K=S).Fi%ZjhR=u
%IpRRaS!gB9B.\=BATi?#]UsUUaj.^ZZg5oqMqP3kkOmM\fnYW$hn<8ZSdgX921$7qmq:s?f9t=[ir&->ZgHA&pD:`D2tsGlO.#kq
%03:?mcb4!opG[9hbP-3FX?O2p\h_mMs/C@RFoTC*]5YNn\T)`+F8ke<>/U6<O4/0<'E?=Ij#bG*O2#q1\[CG>S%1,TO`Ld#rRn^l
%++hpGq0@%&Y*q/:\PDS3eGT8M=INU>0C6urS"$JM:Hl0BoBT`kmJ5S^H$TD6oDIqMc].RTq9%t':,DpXlIc\[$==SjA7j^p5B&e%
%^-6f4bW:7Cbe+`UGWFLa*kZ?CT,ntRK+AL<.j*Y5kVS=V0?hb7IU%t@j(Ml_g!oOYiNmO0Yl1e&?$O'UVR6t/[:^8hCjDG&cIAEn
%dla-^Ra+'\`Js8?Ntr]'+0N#0Q%qGtp@Q83+*YtbV9e;X_qOYVlc#k"_>3*Mbj*'>]=aM:b\hoY^%e=JdTAW=5F@A$5J5iV4O<Ab
%/TsqI)4?36qlPf5HX+fX4_s%6R2:X"Y;:s'O7$S2(U'EAWmC"]V5`Y?USYrC^#LEB4Dcb5]?`Ymm4<J*V0B,7Ip)nn[$SMpIQBCL
%k-C$Vo@<KDn\bop`q.LDZuL=oG\nG81i8ut'8r9<\P8G\M!b!anT]Q_9PajOQ?^r!V)T7dL8[>k4d7a0.p4;Chd;JGNO>d6OoP&S
%^3PfCQfW2DQ!ZJJn!ip&rOV5qo:O:?rV;_hlfOe.+8pO^bqGQaSi-1ea+.m*V+uKUHMkjT[@Y-=R'PR2\C\"&\+eTWgUu.H(X=+E
%D#^n)AZt:g1\RlGSU%iSG\Yl<+$OY7#7kiN*)Cs2jqMl0qp*%7rfM8,SZ=eYrO9-$K+F:.qX`emHFWWD0Aa3oX7G$t[i,e4Fr?jq
%f$8("dBdI[mmTEQH1+d8[_9hAVdKAdSYso&iJUu+2ga3L?`oq_niqp(5kDZZ&!nA;hS*6$/l&7ZHp(V>IN+k9QR`<%$S]iJ]bf5=
%MNqO%XqV6;gFEM_O..Z]f?`ohF9:Lq,@bWFIe5JsV=J<oXL.LGn35&\qKh`#oAde;DtB#k+-bq1D[0pOa%(pZ?9E*h\'<HYlRuGB
%NsiuM=1;O!fN::_[tQ$1g8m,DT.DVWc_%:V[m!"/Bl<?&$&T6$:Kl#YJ%E"n^@X8JReNHBccr8XQ>>[.D#2W$o;ihBY@Q8-Dbm^C
%:LB`)^YB@FEq^ZHJ'%L>]=$FPVU<P7b,nJ&R]Y!>9U!e=5;;\3\[e0dmrY/a:QF$;$hrM"b6<*&]3TZqPK=M&^-9^UR\.(_f9U#M
%.r.06_>N#f&*`Faj[&9Nnc%i-mGc::R:"_ZcX.EJG<5-ao^_q?FaMO5[(\90NROtYS1/<WIpJF[4Z!!Pq.GE;f(lX2B5=QoC(I>B
%)\3HcXDVS3kJ(iGH=+g5I.>fmcf_o\qtXtd^$pFLi9]LqZbpbT`SAc9p5?u[4rq@fUr*Gt=m9bJH*+QFO,kPM+1o(55Pnj[m-st?
%Xa-$mgfgi@nll@&.WXiJDC*!0i1?NWB:ZI)gTU#/mHrW&%u$Ru<cM]KnB$bRn#*`-GJ:5Nhqs]3_=[08P7QL*UX#d_bOii=mRsb9
%R!Q='ccs6^02E@Rq7X>8?"<>[q8M/OoTl*8e[AgJhd6_'?gY$Mm2bYFg6lk#Uo-C-*-_]a*ZaT"cg;^BG#"')4X_=G^WO6>Z2EnC
%rmR4;=pHS@L\@Xdic+4"FmJO-G4!K=q:r[fe%EttT"KCJcC:5Jh)\\EHfI6cpuTcG_VE;'e+9]igP*uJgp_uuYE%LhHnW0Wl(E(f
%DY\,?ah*1\bDg_R[JA)AihZP2r<r5he,/^6j4+\3O%\^Jq3fC;%j-h$Wuoe41UAd[a-H&Rj,^BMmVdPj*)t`i<o?Z$g.B%@q,D>U
%]K43JHF7q'0dkbOd[RRsch#^WpN+&$c9Hf)h^Ja'2NC!):S&WA%c0A)h%.(9].]4Hp3(Y@&'Ka?a/oTeHR3UBEsU6Zp=nSTWUXFB
%-p%r8^Q`)kN)mK4pjPE6Sf;j_qtOGLXQEUX:<[?X9.)g)hfMZ>:S+#QVDL5,GP5[1:*K@,T:%@u.qcIe[DT?9H)jrM50U30?G9Tl
%?`@s^@UT&Ofe%&gg&J9QqpIU_G^Sr*<m0Z]KrfXXrmD4TO4IW`e[Jfreu%<R<bkJQmFQ*FAFXsDrg\JQ^33k2W0`g/a,PjlVUKeh
%b^A5+4'm?bPfD!jF*IZJF0i-5ILahSoffS5?XI^S;m!Ep$!U1]*tMRG&)?jOr61#tJ#g7&?hQ6[[2kM^d",WNTS:oXbB@%CrOsMT
%]T7O`rn-BYP9HOpau5_td-<j70lT0cX7<;i5<Wb:V`=I*UHO7sRR-*fl)B3DpD_XtQR]e1<pEaEH8"*2\A9>ib6fpobhYVULsJ6D
%8[Wk7OVDHbD,`#_Q1"4C*u65CKWR_W;*&JMC13h+^!7/<?*'Z'1OqYL)C#n:*sLBZK-hZaXb?'E"'p2Do!69KK@JLPc#i!Zn8o%R
%>7$`6JJ#*'j24La4n19cY<Ot=H*uN9lK+[]h,ZHk[BQV_Vs.L2K/90?.VOO8c<6N4S)L>ifKh:%;r>p<HE&!YCo;l2$99h:rNt4?
%WWd8;ORM.Y8YWQ0RFJ8q%1L#+gokYS+,t0<#m-N0e5IN3QBo@>Sd(I+W`&#/WL+5Z9YnZp!-Q((eS3r,V(boC;eA=q)K<G5G`k(#
%2F2*Rk\_@.!eCMne-gBNUGj%9XQBVnFCE^ZPMUm@m8UQDNq[[,Y#&$@%iDk,W\bBHH!]m7AQqMINlF7r!B/PI0(m5d2HmZ*?(`_&
%*jdE)!C7bNR^mYhpU[&BK@=e7[ombm-!9:[p%-,&34O.L:,cHK9*dHUi2g-EXp:5l7T8$dFkp6;&,\>q92D6g`Z'(!aH-+)aD4N2
%IeO[YXk9Rrp/!fRVrj))h8:qgpU4mF<9cgRkh6-m6\QTr3Oj;\kt7'B,=0lXK7U/pX%b%Hm3),T8YW&d:Wk]^j^H1GH7k#6A"dWW
%`1@Y`U<S49h]iW_M](dDJ=KoQV*1c\YN(D3XuA*i8^@pf,iC`(''!Pqj1iFhQN<\okBp_uXs<WTMOs0SNQ_&'j._#tr,Ltm<>7C=
%WPp'70OUBb2d5Bk_l93raS\kc\6N=C[;u4<Xrcgu^=paPgUL!@<*Zq107e$_P`b9tH<Fnua7<Do%Z'ZZQ<Mo6`i4<U2t2'(p:(_%
%Z/84r@e&+d-ZkM96?KQ%F2Kn6233tUiF_ig(>[&8DNl<=X.3.8#8-&4l,P)rGCe%2ir3bneMn%"S&(.>$=^.o]fi@+>^:3ViEg2;
%4e`&<GU#le28*@0PHa4:JsOb[>cN"0GJiT[TCYpsH"G:5?OC6PqcB@]J5EH'mUSqLDNpXTrV_`PGma"&Mf7r$6_<EX^`@Q9@$A5@
%eDgdTGdP9l`t6(F1C?3EA#T;G<h\8>GhLfHEG`ma98F7n7W75a[Mc^Y%bL\]lkVTZ$,2X"W&sqH\*KrFoMX,GiJiiDc/ZS<2b1"?
%X$Sc2`$h;1ATr(N6cmM#DLDYiR1mRP1k-6'!JLnE_HZp$qS5&Is8$(=f9'oVF"^t]9*V.q.d0'O)RcMERlp+NX@<.Nh<O&nr!!1C
%6"P<ZGQ=0'C#A=E#i>bVfKTb4iUZOqaK2FN/#HGcL=0_MqF4^rhPaNFr%"^&5"KagoJ"WQhe7QOh?tI+C+h4J*G96=^O_E1#M+*m
%+3(1mg<1JAZ7HY;iQ-B@49g2K@iMG?-[_&]>g'Ybq[fOh2nq>1]Ff#B02^ucH5SYFRIQ41M]9oM%[t/Kep,<npIb<aH*52K?-+kK
%r`M?t6.*2C.c.1[K3-\61k$H,i4F"qNH^"U:hsG.EPH47`Pr*84*=GBo;O[Pai8J2J]e<):Mm=$)6gNcFl7s^9>a/eA7Re-ro'-=
%Sn/7m?F]cn9VEb#`l'foVX*6<VB-Yd(_fe'D8T.P(6!-W/qRWR1`\A`\TYutI6RocJH^_@_@n*t[7rmG]8d[H/dBbq@c&$Pc<.Ms
%;mG:d1LiGJ'q\Q[TPnXt;8X5kC:Hq+/R;k^kKJmhK^G6`;9S(,-1H\:NP5W=HE>!\@Ni@D4.(r=1]%#J`qE]s96alj;HhQf$":A$
%Qk[!hj+k)+8a@!*B),Is32W6MPR]OV>[jF?B7(4eQ*(+=ft^!OA8KGR#a-'^]_Ma@JJ&$\KqP#V*,+P$?cN3ZEXY5fNGUWmgCuh0
%`%E[Heo3F2JTEe_`q=0eco/NFd!ARCL_'uBEIC'-kZ8&`YEQp`T`HtRp=`QeF[/K4I8Iu18B:I&<>8Cc@p$7>I]/`UD2D(.`68=B
%WgA`MrQSgCRgEMRmWlOcBL!X`K]P95dh.U,fbG.IYWN<5E/5(@-XW;N"^NrM6=9q`9JCTA%XTcJAB$JI.HPKA!t)-uU7$'FTlqTR
%K[D@pdA.YO-.2.kL@6");)=<knIT.J_KSC9']3t'If53*f%(Q/^5j&GQ=r2lU*b[ZfbffQa-L,=$nEQV'F_9@Yc/o62J@\R0iUc_
%#*U>VZ2fCX&m;qCWWOrJVQH<?TG.\&b^n.Ak1Z\Ik"%jkV1eNXar07AJ)U!Xk<#]EiCPqu/kj9*lbds2g/s`X7rG(7416YBM$Jn,
%mn#9JR;J,qE]ak"k)='^'1GuQOBF!i%a-Qq%G41PPs'%s>@<a:JYiSre\RqU]e(KT=Vo6d%`0_ARULL`JcK(\&93OKB[]W[S=p24
%%.lIan6e[;neap`R+TCk0U3pX@/2FB9p\?@5ZhD&nG:jN!Y;rb5Q]G'?:bAY9pcF6OoW$L'ZF@b\n"]4i2]X#<b+;pUfKhl_dj1(
%hfT6O&at4%Bg'0JXoW&VD6fsuRKoG'2)rD@V%6a#b"&IDi9V;8:k/SD?_UG\%gFi-^<*k3+nuIg?#\P3Rim*@%$G:b&7eq>1bOaH
%GX?Jh2,N7:["fd]5VVh23/8_eEn;WL/<od.T_1(N/#\3,Ckb!6>U$DjYq602-CZH)Vug":.6H\oc_)F0(oT-@5[)9PK(/i7'?VBm
%TOJ]+f^irX6kC:V0QY(XQkj.CK:E70\.X-ob;(Z(qDO^]bB5Q_losa>?i\h<NrauF8FC2d<O966B/qZF"7_?^H3saeF\i7oDLam5
%TG?)q?Lq&72e2Ue\$HKMJV4EPi+RY@bogs\WiH7$dM315YlnW`Lmd^NbiPNI\qJtm#$@P0?rV";T8;cOnMLb_T[ZR_9T)5FYb/X;
%n^WB6Fb/XfN$S91*Dd$XK'EF+9TK8_!Hs3V2aD636ApIg9[Tbj-JW'd+>]!4DD;5!C(jEO4-.Um`PDjM?a)Y/it,3&&fGprU#Xi6
%RKBZ'h([&.O^/G&,[)=@9(k%`0s62&"sY%D\_3mRR3PL;AP@4=,kiE&cjmB"&o]Zj3%`iS?mpRk'n)B4KGl1/3'_m6>nTPQQ>J]7
%)l<ocNfbJmj!c/B9pbb25WN#+#L3RU"feojP"pTmS!Hb[;f[8HZ7/MMp>E&$EqdC38.7"se95R4MBGSjHc'EQiLse%8n)2R@lbOn
%_1JMOEI^0q5n@tKaQ[-$JLOmb:C++dg;Mm<&ZEL]0[W6Y#FK<6P#GnL7rD.T@2-L^jK`3e\3[1t_#oMH2br(CMA.`m7c?l5&2**N
%;Lh%8_p2[!#4`Nqd3i,Mcs_!S&4\-M$[ng^H4&qgYWtODn]=hi`/m6O/?`[*&<>'GI=\Ak";g5-:T`!N=C)"['24KS`V-MZ)AnNS
%[Sa$RLg[,$'ENl=FC7HI;p'D3C+Di[)A'c#)UQeiW'@d/haPAI-@()BLMd3i^"3"rRN2c4ra!hDQbn5+!tIjX@Uc(MZT'(lr/64r
%)gnc`P,1"fRR;1LeH-(PJPIOq.1Ch3KT=8UFP;=tVN7e[ENjD$)UJQqHcn2(@*t=X.Yu+Kbp(N3&/-16[IhBI3bn_HY<q!UH0Nb\
%/#1C`edB<6rhoq0OX^D6[SQJ;+eGHCDgNc/!/36uO9N*F=!<H98iGM54@Ki(`4a*2Z60/-^_I861'hoIAe<<+boG0`Fre[9$h%?E
%1Y%%.2H/Fc6sc(%@"lKhm"1%M5=sjAP&a6r*"j"5>Y#KDU9m1j&esLRiP9#46V(c7doEn_V%D"o,LX*c*lsLi^//?pi%p'5!m";>
%b$[cXderS_[R?hk-RCLm2&/D_e$-5sF%p7#"@\(,O_s]gF="ch9+SV4`5MCd_(,`A`^\=Qj?S#/#SkuOGnuAD+N"cW:Vdl/^2:,l
%6PN+HCe&W%FGmIhBZDhP)DMU%5?7&(E4')%8[=^_"#Tt"9=")G]'$V'Nrf],K.#-ZkPF6D23^AS;l1VqCkk999C;pKWZoQ"X1F`2
%WH()<<*]Z(Qq*nS%g,2C-;aGeKna-$@l+]Qh.3IWiYVY)8`PA@Ga;;O#fd2RZ&e0a$"X=VfV30n<2*P-aRW>4$^2Clb+;[4n0WB3
%TE$;X<PT%X9\TU*j,=hJU]Umcc60(jBUU#L]t5HBJ1-02-n;8I1_J)X'blf]<""MIW<P_S2Lq]D)*@*:9&i4$/8?Rqb@(t#+#\Zq
%1C7*[Z7l?KVWs$^4_]djfue\e$=pCM(`4S[R_?QnoaI4..J?ApnooaZ?SbV/m7+_(4E?[^)8>3IrgJp0.<L9]k!BF4NR?i#;Z1cV
%@)uqV1^LNVJdGqnl=/?1a.N^D"BCg$6n?8f_j(QS+Q)0A!=ZbK'pAq)D@/ND"D8'PH]HDpNr*WpJBu4NJC:2("//sZK/"o=lH4_c
%[:1]Z$`Ua)QDU=P1fROJ`@kI%C-,-tHYQ_T%mA_b$pXF8aUk1YH9Qsd8iHb2R6iJ8&g>dA1C@=iN!9FDgebSN/A<%J25jQ/`5;qW
%lKaQ.+j`N]KFlW'#3\7dTPJ,s_6<#9QLkn5_Gn'!5TrEM@o*;"[]]rl0Y]r9XXW26!>?<[F&/HpboOX&.gUgnC+S+?*.kR)h:5t-
%Kabt&ke7LuU*=]Z^;h?0?Vi7DK2l:JA%o"2A7?hA&$d261WV7L?]'\>?dj,HC)k?:80rQlQra=pa3cJD%_GEY,u*4>jeAu?G*h_S
%<Lm5P&u:\c$3U@:3@mR-$A40A<aH8tI"4.,!Y8W9?;ghIN:M'%lmP4$WABf#+t/"qTc=@N*^PnECG0C9D+9btEJ94ij$_@[%`^(l
%GUu9n#]ul;H@g8r=`Y``PWJ^2.;V<^GsBM9%.<FjBgV+!m%/2^cOeUOQ):!LR\&eZ3\%j!/S1/\.>!,DnhplDWuM=Sa=KBdl.OeQ
%X.k53p[9V.i(KP:"bWpn2okI8<ERD9$.ngVe9R&nGleBo"kD4p!M]>Yk4e`RM<0!(aLbh\[JkeD/(1u@38>7sUpH?_CX:pY]TLeJ
%ZF[Z,mA>J]Cs=XR<C*Q2[/KJGC%^_OK3<MrT8'8<?c-9V'<Y;D!\7[,$-Q1$+W]1^C[nrcO))2"?Ado[8T>`l96"5X:(n3lU!)mP
%4k`cfm]EXhI$0_/Fg_kJ]KB,j$(et.e8l$%P%nu!?:7UkE3LOVa;[J2@q'*qd-V*M='SBj!h$d!qRYm-PY8J[6b*5TXqB_#?TC+g
%XV8,5W>:!mdZH8EBH'QsaJZ&gQs<<MRF-qLZkTKYOY2,Mk\\4=Y/.n7L9c(/V3I@$Yn%%cjA8[/BqF^<\jYOM<Xpg?>ZN-`f^,MP
%doM/Z5X^HoK1@b78iDB("!?j0h`04ECg6'1\C#PDK'./9(E%$fIKte8WS1#e(TVIS0$]lr-tqhA([HKLXp]hcG.B3W?f&B*8>@=C
%Z%&>i`X;qcKO]a4-X+<1qL$d(<71bii%D:MFn18?W'44EEBh`<%pMsoTU\Or'G@>YJiq(S)g<'C(Be^q&jV\Sj`s6q:k30T*3O30
%W(BEXgpllf"3T,>Lg)eTW$'1Uak1)R6TI'B@QVP*PSi1hQ4t7l3mm!$B4"C!Z+Ho.C=cIAQrrrWM_Q7/RWPcQjO28Z\'^tg-)=,*
%8iIqXA^Mc#\2sip^"tf4>\2;Z"K;Y,5a4DCM!N7pD5%]Tk\r[?jLFZ4EVH>^;Z)51?TnYp-LS+%C')J"*/d'/D9<FrNJlLgYt_M`
%#c2&O5`S3/3UbK)#'%9X+P52&&_[ON2S5JR"m$X(U1.L>$'Ss.%M2u@Jqu+N[3NcdoY-DURjq)JDT10j:8e2N-KEd_eW9SX`FK.g
%/ou$J_B_CNJHrr@\6)iqG=AmL,WrK@m^]L&&)7/SSQ)dH>eP6ZJ+[JLEd>ZgBUlf`G.c.V%g6bRP58oAD5>ii.!PFp%=nZDNWAVY
%*F.U<PZ/)4QU3.T-*\=uS!7Gm:!$K.;XU:m7?]6T(>8t9$QL8i*JNgj%)N&MK;9GdZs6hCUMuHuQWs[`\_^h:\H<aXB!/`@Z/GjF
%oK`^!A4fkM<WSHLZa?dI]b)hYq8(afbH#h\$=#9DeS'Q;$@S@>$H(KV,n`Z/U.=_]XSL\lN9+<.>IpiaN9RebLQZ/F_`7uHF%%4p
%;luu0W%&3BOtp7)pK#B@91*Qo(qrfqK?H>-*]$(E(7*B$@<47LKWV9SNpCX[BrPAT#M__37CcZQ`fhr%,e.h:8E-SKa^&a9SDXO)
%:>Z*;G^<Qc2Md"QBcKZf.GSnl0!qijXYUlWDi8'q1_[N;80o<G':X>P]M1n\o5*73Z<9[KSI5J>Yg!3K&$Y4m=[ic#.@7n34Gr1)
%;mXh*OCrU5RO%-JX2/?[f0R0INZe/]i91.f7!l!?<"4!o4LTbp.Q4ZDlK?N3XK>8&=e)+aM5uuFk23P:"-6GYdYGD(-f=9h=@<<J
%##TM5kU*/sneVOF=-*:g.fK2TUS=9YaMu9[hP0X=Hot%h.<cp`KYrt*0A`u<&;<XX@`e@DMGqqJP,\/>P#=E^P)1<]<Dl(ONXJ.e
%@7AkN:L`P:;%?s2OKLqgJ5=4s3'HsL10@/hXm8.^Sjh$O\iisD+rW.)1=&sS,HO3'W#@&]T.(!(c5"qoE4=7qh@H9ZB!%_*>4M:Z
%X_4n!EB0pb&E9m1Qlk^`3N=W#VO'Q"dr//$rX`VoDH,&J]!()P[MRK_Gh3H:33#lIDC)h[W;Bb/TFn1s3g<AQaJFD+6,'He;V1R]
%*Co,j!S\5aibIeB]IuujU,7D&S]tC*0H)!Se/>Wk@"Qtq7,,"Ff6A8UT`W;g?b3-a%+Wlc"BWBUCQK&/$tHgZWIdb:\EH6ne.i0]
%C,J)LiMqJJ([OhuMUB4SpVQ"&O"Rj[]I@T9m0>p&Y<7S-FWnti3<YS[C?^G[C_!X[(4(a.Ko*cf4P^/q!(no1#RioQjanKq"7KF9
%X*]4H&aO_,hO1l\m#\b%+ONjb$%f]e++Q27+XWgQ`**P7#mlDXPGI%Q5R9N>5Tn4R+l$M88NgA1&qU`RBeTrX!/):#^^gfo&5!Q9
%<R<^J,`3(&&A*=VpZO.:&If)rI#Eo"^b])MJl)94SsI0/AWqZHca+k7kCCCh\gg$o]mo%r>&"WtGY?i$8Udq>a8)U99$oK,1_`L?
%Gp;O2TcOr$n15CDc<5D%RC:[?"3?/He3_idK6.;5pfZPfJ(e62-s#M^rg(KDQ?9&5#j9QJ">U[IjGYJq:cdBbXIu[:Mfqau^tQi[
%5&n*`M"]TN?PYoX%Qr',]*7ifN<:oG)2CPW"+_O9pVqiXpio7=KL$BoFtk+V$NkT_UDXWtiShN'Zl5_]SoGe(f?f8;RYHV/f)s!h
%m/a!DogXk$\;5"G)T=ldl8qZH/E"se70Ng[EUAqfS:bGXH_<>E+s<H^p)pl)%>Ku\*eK>(8V'F\5a^&hA).\"gp$X0l[`Nop41Q]
%HD>0o/teY@hrZ$83j^GK@pl\U;6d6uLL0<g&0\nf30CW]";R@j<-ZY4@o/j]ZBCC"M+n-gNe0kc&PaIK*$^:5\LfkjB1`?53@@6D
%V3DD-[3Na,^8XAhk;.odC,CPMnd.=b[!6+':K6@h9Nq[^-6@$BK2EOZTcufTP:R8G;J_C[-J2&p3>hKFaRRq[irLX`-RPe\g=4Io
%a%qndA>fMS:"@j8g$@W9*IL,+kX[d3RgMd\EhY1($7!Wh*?sJDR=<*#G9];.#\c2G1$0pql@[$cStoEdCBA+B][J$M=)A>p(i&T_
%Adr;UQjf\;mkI;B(tEl^+B*9\==Snk!e?=33c5'7Sc[>#$l13X4^A&eRhqDQ"KBj50`cFIrc:bl?$5!H-LZ2T?!*+nU=Kd4GVr"E
%9;/E(H4FX,ZB7E10)[tgWo-JYV`A\cAnkR7!/-Cs`<FBCe3D94<^PuLEu7O%Q#sSe4-%E:dN<\KA&=7"!iBaA[scTM:lealHZFY)
%"'kkI&k9<p>`+MP#g)TTjkYTNL(]<'SKeCjEsNt%0F7D`o,LXFdSObQC:rQ!:PT/eC=%dMVug`N+CP]L[&Ki3FeHQ*"@=j9UZ&",
%TIq9=-P2h35S3<;jr"guVt"c5=E%`#5\\Uj*4W84qLB]H[Ohf=;Fr"Wf6pr-\KTIGGsjc)KQ/;i/3;aM7<knq;dW,IcP1bE9Td?"
%1r^4kWR^d@Tib]1NG"I85sD)u:cbXH+elf6U02k3M-=>":*>@<,DYN1VL#8j`^#7QbShA^kQ'rKS<t0rA@'J\0f(L8OF<#g&EU!u
%V&OErMf>J:b3C2UJiqqNP72)3X.sBukM/=ASfd+tjp?:RTZ8hlKnrsOR;63(f(.fEJ?<X6TI;EC3$Op+@\H+]JLQJM)e/Yo&;Q4T
%Q;FtUf8e&FVFkPJ4_3%UH5AM#AY3][8E^mKdNM\)?p/''&;HHiQ,Eohgple7)%D3e?L,-G9Mb<5+<[#M0&FXp!QJIsAF]OcIPiO[
%<P=l2!pT4g\hU,gfXRGD)H:@d#?3]bA(U.h5\.5Via>X4%InhTadT;dMh0Bj.[<t0e'65q['AT"JDeE0eKDge[D6+d#`WN-Mtdd/
%^?-Nh.KS[=n^'E_6A"kLN"kIo&:A<3_+20&c3-_Z3e1qYK3EdE">3_6Li\TYp2T?M+Zq8Y;c%q7:I>`4&)]2KZRQ+*+[Q65l2ai=
%jRaEL+rr#7kSYpD;-fO%!.j>N)#@IW;t7&LYp1\E*n\J2:n%liB5@Ptfm"[]or'sDB>scS&-p0u>mB!IS/t"F3XUX=$9.Is"\D]W
%S4)9>.>!4k.?KIWds6C5:t#VU3G]9=.TE9V+V5f_B+ImUJ?2?/r'0*a4\.t:5%65fj/\W#)BA,n."Vl^EARs=<Wj;;HLsnh"&>Wu
%Jkr!oe=_1nBVU6A$=Y,(EO/8YehFM6#M#PI*CNZ(6)nnBic#%b:A#3V:cu]d$3;_>Q7N^hM06r\(_5d`69Uf<>!6qa-US=,'?K7m
%QB#2(.Ub%Vd^[[2*J>?&!g46B)'%BJ,h;rqDdZ.BJNaJa'_bjY*aI>Uh&V3q.&k7G*?S!*=]F06j7!UC,uotR//SbDaOn:&Ejl:T
%nrpba7sA&`T]K\ZePgf(/j:9p#N8%?WlWeEd[#o'o7/tP4t;LBlHK>P"$_aH7>"3\bLTK0d;j4'/)D$C#Y_)SF7^Si/Ms%'l=F&o
%J/Z,X"I]N2k]`S7*gs(0"=A^!c0hdhDR=.EonM("h5$7KD91eb0#89'fjhU<EKG.Wn$'Z54Bt#+Q08^YRnb2H:1a5O"T,#j`m#<4
%r$ijXHnOkW='?J5YI(n*R\DmMn>N.i'&@?BS(#rR)"_*OKdTb@AH-.`>Q):\k^OS/HQG7R.`o9eYS0@f,[V(>=$V9:<SKl_i$ATE
%/I/ATUAKnB;W"4T3=)GdJ9mDMcf=DOhJ+62M/VFJg3UCT9ZY90HGd]f1iJu_1,N1pAfnC8N1M;LncdbFfc#o*m/]CY&]?U+pnD^t
%$ZjDAdX.WH+!PA?+8VX(\7h$HH)&p^n\OeH^0.Y1O/L]Bhe7"+`.eQOa+bYBLPqTGL@>Ah,`er(6%Fp?G>Yd'`T!\/7<sp6QRO=2
%"rV[QK.fY%C,m?2PWD2jn\fkrK]f^INiQVcMbhr*qk:O'KTU=l&km6bPr,Gi-r?m]i<i[e>AH,3r1`'?:qF@sNou4Le7*+,*`O`(
%g(2^N`[9)T\3S$<Loi?Q1p2cgrWBEjL$(Y<+-*I@5imJ[[^s<7rc)asK=UuhfLjthP9dNPRrIj/JOJ+ERX"MT<Gb5`ZMN+q*!6I<
%Rojp"=.L;*ifQsemnd<-ikuWa/u5=AQ*M[,no4,LLngtD[Z-d)/mVB=CQN2p_^3#a20sZ@7bq-Z=nD\f"N?o;I/&?f<:K[gCSAM>
%#PA7Q$lF]E2;e[r5"oG<]L$r6J/g:ElqQ8a_5B2iDF=)HT-8:uCCaBBd2s1O271M'Qk4[_.58*&LqpK"9\<.Z5@-GM8#Kn&_VgoT
%^/EH;q*^!lj[;-CMap3@LV5)Ws7>k]%DJuKi'eYaWfrkCljGSt1-'6iXN.)?Be6p)Oe7s0nSo&oWk]"rHoa+PiMNGCp\8"!VBL_+
%To!Xd[S-7ANK+XD=A7+P5E:'NJ<&76FO\]]n.@l9m,8%t<91<h88QZ%BU261e*3hTPA]BUlG(A8-/ii94JW"2[RfYeX)6M'h>e==
%Xcn`Kk]frEhMU=>Z`l>O>75iT_;#-afF2n>95tJ$NGJb5GXEP>NUtWE2O6LC]%.2^%SW31'=RG!60YEJ%XscP&&MIkR0mgRR-JrH
%gaX%@BnQK2eBds#(>i#C:a,%Z'RWjeDgOg4a1#D8G_Mi*nVC9NVnsH[iCKkF9Y=etc<*_%oAo3LI=?V^n'j^%V=SAbaZ4Sg(f+Ao
%8PHjlOWO"R&J_:;bBN:rlR[K5)"6ARptA9?d.*;"GQXR.gRs1H^\/9U4>lARKc?"E=QkhJ5;;2dr.KnfDrgDo\f+1R*_]1K*P.K"
%X4q_.$%o#\^ZifBS]Sm`n*jj22'f^5#T^gYdJ/eTJERT34PLHTkQe]_+VAiT_@X/%C<XI``)u"n,u'+TnXuJ-`NH^\X*AA_^?S=7
%9_,.u-(5V+;+FogIO`UNU-h#TpHuILXTPTAcf_,F`elASm3g<^21P?VYEgL,'!RlZ36sC/[@L%Q7%m%"_ja720@e!fV'*>3.q)P:
%I(lTb9ndmQ%W<Mdbq$.B[\]S'ZU!?26#dUX/\K2bqRW-&Q;?Q4Xkj2T]k"e?f'tR!/4U`,Equ_#L:Y;f=7%`ipk&;#14p9J*'`_(
%CDl*[V)X;Te[(^W#DP=.r2`*=UM-S8CO2"q`5]VToVet>[h025%$OS8U!NVr&OIa_M<XG4[VEmqC6mp"6O:VD+@qQjmK+T"aj7!h
%F7:4S)GFmp&Jm+koaa2"A(c*h&FBmW2ms`LgN3tkOA4lE*X`gF^)#/V$Z9rGd,a5T%R()/fXe#SmkcrlkR*)Q(Zr<[NA':>L\U?3
%Jg!6(7Algk%H6f1E&":9pbI^VLU!Gs(MVmr23O_&4CcQi4"(*:Kr0OH)t\B$aDuQZMmNA?oYEW#e[Gu)^-T6-\u($J'Yg.<jV/.9
%?0I4`oNFT.K6I/-"Y<8\J!ho[[IDJ3)@(PjVp>?GkU_iCK!(]C/(sIhVf,hpZhSL1NR-5P/qs%kc%dV7hAi/_6$dXul5S-hBC`%7
%A><4m2@!)+>!I/%Y>:_kP`O5r@%?BcHN"td4OWD6K504A+i4>6<'I,tN);%/66pu%'%+Mqj;So5^]LO"Gt9'`[X@0AJfr%jR\[j?
%6C5t0Y]mHo6Wr6TlXG9,:.1;l,[Wmid\YImGEjWI".0iZfq:heI0ZBui'S=UYQ,a]__^0S4[%caP;)8Q0uO\U(N`4PSMn>Hmi6K$
%ert4>(f+c&ab([?O*,hu&BM,)V.phW'&bQL_&EuNIBoj)-[iQYKQGFs.ih5\aIC/`s$X3ds2fW&*]pZ;]CW)qZ[p]`488dPAePAb
%J/EON^s)">W%7WM_ig!p\Hi'+PJ=M7k;fGt,2$Ka-"6G?Y$bk5bl'JD`*+[im@\^(#T:$>i^7/5)+W,N,ABLA.tGo3Fo:5,o99`m
%7(Rp%Ni\>JceG9CX(`*?o4gtA$C:.5"8eo33S5oqoHAhX[UpMSjQQ?so/X`:EX0ASp)`[U;?K)9!KnnIT"%P1rV@I_?uMQ!`9DUu
%f.kSNRL5@N9>sjEIMMOs-q![4^u2bLbB]7>J7G4IZSYL]rUMtS#2/;cXpm3-0OI_0UcE(oYV1X6%I]S_XT_#MR&h(#'Yudse4s:Y
%\cJ"!bQ'Q_dBp.ABU=)bl2\D=M#u49:oJhfV)lACs5L%2F\RJT(UAiE#$.5")gmIj]eTh!0m&O)RS)(_V1dSt5#R/!=W*hOVV3a_
%V^'C2_Gm;i9C!?nP;UZg%M,PL$_XWKI@mBeI\NZ')e;MQAC#0ogZ&)8ap@gY_I4Mm[HBfB"P,E2R*r3N4W620&7aGg$;)#r'L@'_
%=YR3s+UaKu*5Wu4`oVJJ"!DL#SR'&Nk,**klnk3reH8n!5Z<&i[.LVEA:Z+#j`f7DMAXT7QP'$`9U=&@F:;QOQp`#LWku!CHsJ9!
%=Qj:0)N/FFWIb[T"e2ITUo[8tngH/$SU\X\$4XfF@7:mH<ZQcqBYiq3'">s3L%E38K'8EemER.Z2FIZK?)XWp)1WD_I'm1U*"biZ
%HIV^%o2"H@V-!dB>g`&CRl,82le-3O#Xq4tXg6qQ"-.qY9kRJ\D%Q&_Cf2A%:dIK7%[OZF)Gn.$\/K^M4mh4<nr&'#,_Gg.oIssn
%QG!.o'4u%a(D3]HYg0JA&$`7(g8JHNM'#[\_.u7o4J1e+$Ct>(FAi-I*R*M*!l>V3=Jm&d=qY]gO7t(9W#EA5U]^Pe&utU1TkmH=
%*bSlKK]J'hko=^!6$]B7K0l=BPJH1j>>"G`*^XrI13l=:_eoD*!8qcu78*_N7II,pa1g0X<b+"?0?oYWG*<It^bV3&&>gLr9GK`N
%[["?(QF'lfC@`74F3bY5br,sh:nZ3ml"OGBbG]j2CCZZ54`+ME7o]<Tg5Wjp>rEl?Mmu/1jg!TZ_c.]R%@VCo.L*=B=@,ci^*Nc:
%7DSg]edeNVS)s,n#/WdY#h3>*ZbRT5`i,KkD2FUKJ_-cSKCTNm+09Zn%RiR/s'mk`.^%`$P=dYu,uiE#,,DhMY30%SZi2C0`I<t8
%H.2$GTUJ=XTJUGoaQ(3.cL'7s\T@_1@Q%b)J<;`%e?YjI8$Rr5S8QO%0P)(V3pKfSSLQ=IFAS/<rNHs,GFar;1u?eQ!3f@]7FNl#
%jEs+]Jfo'%&FK5eK\@SfL;H*jgs37fIEFN6H*RHFUmMiR?gJfaFMU";*Xh9W)XTp=UA>fUC6a%>LMm@iSSJ)f+A`gs:6EcactV&$
%e'g?:K_<eA>4f-b$Jt.6c'5\X;SEIge#+L/$Zm/sJs`WR*SW'$YgtmUAZ<#_N\E>%a&#<4Z"iq[.A=jOBCIT8I>KS2#-S\1%[Wm`
%Z#T/?jf3NZa:NFj0%f`#YoBOnWanF=ZYt0i>iNNAR,H%o$*=DHWX6F8hTh;D$R,=rU<F@r(Ii40-<0_Ce7%</ZN?`5\h%Em5oc7F
%[W$pWf.m>33.028;Wsk)Z)-dIO7Y@)<`Deq;B6Oi(+^^Xb8hbSMTN-b,.6RAQ^2ME0)_Hs9N6oX%?fqmf=h$M'BWSa:e:FE_Yd6<
%M0ga8$*!dW1"(!;421F5GVRul:V1l@\"C>]bceFRW8"=]3JY]jn[L[0m:YmHfB_7aG(%<pYJ&fnDuY,RQm_g,!I0aOq\E\Q1"(!;
%qj+aN(W64FY_ra9pI]X_q*bjDdl*AiW9m^bosd*4I7mhblh,-kgY_Mc;h"dUIZ@,r]HbWr#]'%A)4f2oRtWH6]J,pIgj(X:#C3!a
%kFmegO#>OnRPBlF'VC:<5GeV4*Z=S'Ut2EoM_T^Mm#YM+Gq>i$hsoh(2CV-\nE!_3>m7@;pO%7fV*s+ZI/-c$X5r9`;tA+<kriAp
%[1O'U0"sHb,,VMJI!JCUML."jr1%Yc8%q+:4LQ/ZG&ZrWg.Q@3H+n4i]XoV"+746blap_Potb\+l+\7eeb)ak-$Ab>QW;jZ"D]mp
%/h1JEr2lUZl10%HH:O=:])RdBIgqR!/?b0m[`MCZCWP=qj_nZ#,0Sk5n3rYX%J>(Rr8"`iaRYc_S(DBKQROi+?>d4L?$G/1jmW%o
%ZfUXFa(ENP%AQ"nr,'O2ZfQ+8o4#o#7e"B_^CBj_[QNC1Jt*W]*n+6OTf6>$qJS:-U+GbF<X4['CGEAC>@fRqGdCm7WM[HU?%1'\
%0nP<95<30NFN;Ur(E*22n&j-<Mg5taAPF=`@7K_p&_9&#0IFn\h36s"6TbkKh<rqd=Jlkm0=F!8P1$U0;C52E8Nec#Z%c`+VFo$B
%WJ+'Ff"DR0gp?*<GO@q:h(3EG<SK[@jfqtirM"aNM?DodM!HP:^H3dQT""m0@[sKc*V-f1cPIW%gT=q\5@/?kM4M)&s%Wo<oS]%f
%Y'du+Fr+4dq;-/L'R.BVM_!+,jEB.Zn*DQs-d_eD#s-\MMXN].?>'-tms8$4G`VZY.aM+drV'9:Sldo\hGebqOjYMiW:GUU>ak2S
%.utBQh:aIt=alP2aQm9],9BppZg+O;"%3&AKeVq5Nk*_8!PY1gI>?JC\al8a`ZAS*=2*Q&4EKWKA;<88qm65tWr,9DEUVEo<W::T
%\aAQ.kc=';[2ADieaG%mYQ;*P%nueW`d)pbS`u.`J$WJ2p=nU[!rV_tpI+i3leS_U52pnBl`^8V''6km$rl:_$(4+GNu?Y'P^2U"
%e`@AK@&-/ECXt"ufe:Fe0Z`JM.?qS]4_g(1MOL^37V4/R@%D?DXD;hb8'f#K>'N=Tmsc:=]HRUt#[?8HVQ-]YSbjK];Da5!=]"(r
%[sYWKrU%u/8hSZ*-99/^Ooc-);[?0.FkUE\pGO*q^')!q/9+06e"^5P(J>8L4NV'sZDu'F[&46L.<"Kt66dbaSg'Y=!S\mq4mD1[
%*^-3;96t"siaXGj0dmVMf@#ehL>#:JK<"1i'PbZ5BMO\\$)MfO:WU)qjI52G]FdB=^Sp#Am6"4U%lF^7Gg"2734^($'5`,HMWS8G
%D>b;Ke*VE.QMh.\7#gNfYVBN*=8U(p`2*#j1o%Id#p^M4Dd_*!S$&*`l>N'LedunM\?NDi+^#,>`#%K9[tZ/Fd>mF8eblX&O)I1_
%\b_/drH0LP2TXk+To"WJW*#:_eC)#D/@YX5,g).!'"Xe9gaT"s3&%%NCOf?]?o])U[%JnZT>%TC]bKTmN:R2WKYSj`2Jqg/P@jRf
%prVFhCp$!"dj#mj<BBca&`+OiZ9Y+V+F8i?3.V_N)>M8HNgWp@(j@+oi'jV.TJMg5d<lcL60kTiWmIi11uUPTLm2?>HXE(E3e@'H
%3Pmj==Emo??B;gM\d[O6)s)Nq=C8c=q_+4LXnDQ&oj@!:?O(t,rE0`%0%RE88O9@C!RPEMq#LE[]Zf>$as7aK/5&<"CoDU_I\W:D
%U\G]tN^n"[4^dD$CA@abLB$!dn[AsKoTBBfeqDj.446,d"eZTm7apgrnj'U7qAE:pr=p%I8e9eqN_T7I=-AUq4FWd.As1\blRBNq
%Np+TiMYB0'GR0t]JcV^!5$BQCh/Q"X21b,G!EE-%ar3@n>'c#l,%X/I]a17b<*C_haA[%XR`])`"mUkdnYSWm`hfq=]A0DAm)k%a
%?dS*r*caXQ[^lSJqdc3cL-0#d.hrXY+U*EE.n3+hO1qb&:V`uVCnOd0JO-:!oC)@M:\<&$9#(@+A*ocJnd:XHGUuacM1sGGL6ko;
%_f5Q(iGGd,2(k'QETBEC?'2I/,e9ZX9i_8uR,_=$pb]kl=d2onAoEK=m(aQ#mb#EJ3@S6OX_k5(Vk\-1QaFYm.<Y6e$d#fo!",,F
%[b[Z3U@\(jg`2&l]^n'aMG;t8Q7phV@:4><,,WX@pQt:>U-[\,GbFME=ek8d9L(9OLqTlFkt#Vh5VT:lAs6L^`d/3lR85&ZH[)D?
%X<GXuM$EG\k+8qVSX7HP<Z:V;CQ_,#;3KE=dO1@i1l9@a=D?B3`=s$goQbkGQUWh3]rft1"2k=b$;XKJO!8F#R-]:2E_@`gbqlpV
%Ol+a=KNG^"XB2P#jrN&P#aVahBEgSSe[5pr<MnKQ$Pbk`oO%>mGs_\_0'Cn3FX`MCM-@2[R7u/eRiI95(CRg`O_LW6HQ0#B5IfVr
%*b[YA-68AYhj@]e<Eh66KWs*7#.dMaH%&>ZZMR"j@!G6!1*TTnaPkE</fkpLZWHE=/[lE<Y`DNOfVWTED,GdK5;>-b4bm%)R*-tC
%X)6"$fSu:_E]+()gecK%/^]o:(!5N7K.Y5]alLkrHp@/#GJ7.THJEmFj+F//L"4\@b]um%eC+`2=rkpDC0d+.I'-K*AL%O1P9D2/
%C)P-(,*I,ejGXbeiUa#eJ!B81I+iK^M/#i&>bV&7H>M-8l+$?`3kYWWnSCRDe'A!/Oq(=mmT_3<8`cR`WCjcL@>a>37.ZFHh(2W'
%\lj`lFiB(Ek`\T,rAD)\iD`5^K?Fq,Ml5[HdtqL^[?YT<K6VU2d?^mIKRIcS&B:q(1"$6Wl#F<;](rAh1V=8_q-Kt5oSRXZKhq@Z
%i`5NT0(Y'Zf8;"j#sU@7\u&l@.r[A)>0mYoKB](,Io'cY;Zc@5QJfGaFd_-(`MDTC9\FrOE$[2L=#ea@_\H&6E746hXhlU2C10Y,
%\O9($"%.qrV;=[8bk<INYXa\%UlT3*17)X0p,ZP\pM@U%E>)\rqZPS'Sg^Z;'5:m$kE@;)><Q&U&PUtqQ:j%jU)o24/ZZ^`[ebpE
%HI8m&Pn<bO@)jc>I"N(q:tajoEgAtH:FqbS''T2VLa.q56Cl8toN8?;#^#(j^I>ILofAPOj=YE/6Wo_cpI2C)_dm7C13-LC-#LW8
%34IpDPjfL0B3(=:97aC/%T0.jT4]Waa.nC/WL&7T#Gqr+1jf80:7dH'F<6BbH*7gemQlZ@6m-+lN!Epna]Y\:Hg1F#F:QA?n^]*^
%WrpoC3?;hBDB]i[;D:Q@l_WW?a.b4,Cu-Eio_h.6^d@Y,8Yqb;p&]`"+2QP[H*/]CIE$OtR[XmJ9C4bb9J<&KZiA'bj]KJBEZ=n'
%dC^[1^5j8sFV0D(B_FVtk5[H]RDVi/V<a0//b^"M8`fWb5$omYbUV/.D)sX@7f`#MU:6)4`ocSFprDU1^Tn8EFMeSN+DH+`0>e%0
%`;D>Z'PW1%S-EXaf10@am+t?UBEZE2H1I%'D)6u6-/p-/E1?p%PF-S=SW5ZnQ'<LAE9u"oS9^=X>Z?=?qp7u8ns==Pem?&De-cnE
%ce%-O`oqa!%R2-aqb>B+&bp):7_nA'>HQe0=VW=K2*+TG)BClL"tj4t\1f+_a?"Ha(F-T5\0%AEX)h9\>jG8]d*)(/[rlprmXo",
%?I':m7d&!9>Yb+"\!gjZ4_g??.nPMqs3e:hCu,[$DM1JG/6\pU48S;`K.3#-V(#ZTcV,Vl=K#6"GDktie9!`?*S8uJ\N4>MX0P.f
%D+k\CQ^/HDoCg5"*9^Q0!'&\<6-?k.XBJb>1m8arZ@kLibMs;Ih`*,rDGPHtHRg1HMU:-L!B15;/^b9_2O=Z9;o^X*<)?9GRK=a-
%2DCCN(N/hbiBWf9D]#'EN*qnYP=8CEEU.]Yc'E__1L"3-+.o4i!\\ADNcT,@lPf"c+n4'%`-8=s[)8e[G+TV;-"-T%6Ghh@g)J:k
%IQTO_MgkJ<f7,F;9#,>Gcrq#$qKYTuHb$J/2&fDA=VY[nkd:+0`AWp2%u00.JFf,]*%N^OLrV+4CTqN>Z?9MT!7KWU<Eg&+=8J,:
%FUB=Gq-gm'G7$*8]:e.5!^/\+%[S9h[#ViYVAc1>?SqLj:8B,*Q$dKir\;s;@_Cc==onZPWjf,Y.Tha<=,UhF\TB2kartT5(;JF,
%KMqWVQ$UARO'mO_0hc!&$cH&=Rme/Le8_c34,0m+`sJ30pgjeH'a\QlXYHL%f+\dHF48pnh,,pnjm?F8Vt;Qm:NF)QEC1,'6\-#?
%)/`aYJnpG@&9j,k*Dp_1oeH*YG0k+/m+"Y>:JK<FScq7W;U:BVB2cuJf/979<u`</38?o4L=+M_0eAuN291EU0Qa9N<Q@A<MDJ'f
%^l]saJ=N],3rDDN+=e=4\hdem#87G;YtD"B6JeHH;"7;LhV4"K3*JORIBQjBj0S0'd.ogKN@m89kf2[$<fKK13pg%)D,6aNAW=RT
%JpcAE&ZSPGLC;Rs.I-?^SMKb=W*`D[_c08,?L6`a6Rrjp8o<baLA*g3<K;,gr7q>SNkbS=?^72^IZt?#MHjWu2:cYrX>86]Q@^@.
%Bnq>pjL?Cn[E`L:NL?I<R*DS7H"#B^RZIH5k0sL_)d_^F-\)#O,lP3I28.iln5P%HPIt.RSBVZDT!4*4QM6)&gtYTtg:qj_md9NB
%9<3s)hYkNS8TOP`g[sQRS)^==(\ZIAl]8e"Dpofcnbn+5raXqXmQ^M9gO*!`j]ggk(X+i*Xs7\9m`H#,frAo.'TP$P.aj@:j'4Y_
%T_CDu6In2@FTi"h=->r1lJ6KK<eslr2q.rG$.\JG-Y]IiVH92R0QK+<cuft=LN;<VX%&2bL$$Vr5c:$@c#'>?l[;db4Ja'K`e9!E
%cEh@lLLK?6_s.Ms)?inWPBH0YgZ_.Zrl4.r+N\8kQ(Mq_cIIV:=8.';R.;!2PZ7LM[4[n\7\u%7L"h4dN*N<+h-#<DEH]$B>X;MR
%a5)2'9M^`<(tK4"<M+*a=Wq_.]#riigm`2"F)R&i^40C8gaCh<l1;7Gef3KL_dF^uW&[8H&OKcJDq76IU`EM^:.t_B<Oh2FVuCC.
%5H&^Yp"8l;7$9"iSEq#_^.t'@Zgc]-g0r!/ei^4Q8@?AppSMP.7KaE\8On"1/]+&*4+V%e<k%FQN"fJB+/eUcp%^TqUalMo%]M6\
%UO#tQHt"4>kNPY:j-67@n[k$(&[g'KF5\Vm*.TIfR^-o.gbbhA(rG\KA;Mu[I=t@s?pNHDc8Q5sOhTP#`BWKi^AK&DliW$#)68A4
%^[AOk?e?G2OR_XrU+"pd>J0Y5T"PaQbO2J7a6>:,]u\ORC-?;D%ZHQ"8/t?Cdn[Ygc5?cBe&RNC6P@53W.i!p@N6X?a"&LIPJ,JY
%HD_kKF8X1j`%E_sWM:\_oE$GcTE%_W+o3Op+:,hKqT,mTJNEA8o=`%8MhFI4G*T5hiddq(5qgL%^-\AY5qaQpas5D-<)tJ8]\0*2
%jHRVlagKVW?[-B>(;C,9/)DMH:3ba)BcGmh03P.9TVZ+VG1QkhBU-%;#d%KBZ_0k<,(d>8c<+]Lb!lr5bLa-/<hDoM;^\>N)U([2
%>\6r%ZQefQJ/jJW(=A<IT&R%aWJ<=1Ygi*4@IV<$Vm`^XQ:a\r"I0E+PI+ULR<-TuiZ6"]CpfWSFc^ha%244sTZX9M,OSV-7)OC@
%gV7p=6%']iZU3@.3NVeW[SaR[nH*9b3m("jCk%lVV:^m>&;)SV*Eqd@"i-"hm9GmM!a$A7KZE[(M5!\0GW=`@ER/AI:dSh6RAV]]
%2JiF$B6'gS>63/E7*TB'=Y'_,P;,D*BDo@.%A33ub2Jam70\[qbObQ5/9QGX75(_:ot!]Sk8&7%rFoDch@]<)rqs@B2@$cemH"0b
%&^7sq2#E4!q<#1+-bSA=FF1PahR>blAX*Jt\?7%oKr)>6\oB"cotaG>RLW\Lm^^dn=19,QjpP,@o!G/]!EPb^g>PY[(0dSk"kjRk
%hQjl^aBPO:76t:>eq1oV1HYi),c75r%L!@ti=Y9[@LU+,@'+G-^.\hq%!/:"Po^$d,(*:`d:hg_8e=0cn-P8jBKl%`lg'"(mg!_U
%[;XfmWr",md5Uf^-k7<!`u>?$oc."FUUF1iTYc16$(c.*P0pSVTPSfYH)i10G7m1)1b&4#Tj5]48Eh>p2p-rko?TH[H=#bo'O4fL
%EQl<%\<q#Y:C'6VlW7!hYZabrmr82`J<bFU*j38Y?9RI\oX8em`Y8O;XoVk9e?92;I#C5HEo6[RkX^++c^,i,Ebu!lXMdC,,iFW[
%N@O;o_M..i1F2++4p(5KdY6%(WfF5]1X(mH:oiM'mL3P6P&9\jJTLXg3U'RQO2Yug8$pCK<M%7dS?8H0RY[.X=3ZM2nMbUbdWNE`
%1nUEjcJ6H9Idr3N7b!go%VKf@cEfaj8cm&i;u(I9=R>%[VHOaP&LH\Re6]#d4,7tiiUG:N5Y<-23dJI9mB?<-?fg&3__GF%"9k-*
%O>Y*T@DrqJ92)Qmh$E.jJX!9`8F5OG=pu<1a%")=)9;6;:4N`JOdc[5FiVAPR#^.89(eTC`cR$m9H&&nF`N&%7/6\\fl>Igc[\:T
%8n;^X0*rZJaKkCo\i9%VG2So1+QVAS[#cEKHE7jbXTIiEg"!TNW>A;*efJPLZKZXTSF+":D+;LkYfc#Oj+uE$)Q2CR_WaO8o"C/Z
%@HIU`dY0CnLU2hd>`2.9<:$C;\oH77.5%[fNjIAj6;3WT<QBAh=4Cr.SF]>-]<6$e8(b0ZaCOp)olC-gl-AWm"^cQJr@U+R=lG#%
%hBal3=@WdoAD5L\A%cR+^YWr`\?[btA3$^a$\7h_<(K?9]4f$KIB-jZ%a7.oYD*lPI9WM$GeVdTW!5qp[J\<PaD.fKPZhHUAjX(R
%l8n7Z2j`WBb=o$F"W&fWGne&jb'+B.2oUhun'0!-^tJMNES?%X\bk&s3H)UEh)=-(?pEuMLH`C+_-(Q"ht-!jD\Gg.Y4D5nkamkF
%q&.4a:AMA>bnt/6=Wtr*6'a'ib4lGigJk2>SDI(b]C?QN&>:+Wn`G6<9#3TXapc[$MnCDN"kOh#'9V.imQ2lWEbKC-`W>L?Gisl)
%/0,/0W'cu<%tHh]CGe#+&\K<-)fD,-ac6TlAfmPNaP!A1Z^M/iZ2;^Qm+V$?5/i-aUpfBoET3U8U$)3G(luTEoo95-nS1M]aRhV#
%c>5tSqWipLLaf%J+kr*/o9A0a+17-X9q8<L!5/^/J62b>?)%,.)@;IW+UO)(k6^%nhtF)-^/,NBQ>tE`;MRF`J2/3V.I"f+Emfk6
%r<k.hSQ)Ndj,1&]J;12a9t:VU2IY\f(EtCs>=nenghDUGLfPWRj&06@+i<qD<q#t]WPm$/5jd$?=AC@ZAu;o(RJ:V(E<[Qe=4D]l
%%WCa6/C5Ii7MD>BIH0$po.XmScQ:Q/H91,s7sX['Qjt%-XAM^@@7i2CcR5ZKP0;jp,ip;HGUUp-L^0D7eefZ%_!j\iR_/3@,DbBo
%Ma$u?RRu[7K]JalO@-u_oM`mk@q^;Y8R9\MidFe^@hEiYT&kY7PmmPr+;OaUG("^IQ3/mG^.UeY1n\S77;G%TS$$qlJ-T(++9&ui
%o=+F']ZLYd7)M9j.7l=b(iLf48X&(;&s.R4699?S;*atLpDE%Erlb-:4BIpE8VsWl<Lr@B/s"Y)3d/)kbVKh`N\9BU\0rFW<,/d7
%]GXHr@u2,gRs[WC"M/nWq1e8I"1pUK6+11"L=(s"!*Fd';&ke91ZNV7(jReMIoH"@)-_%Lh(8+qlArufZ!Oip=/B<:p_!"d&82\m
%<S>sP92%t"G40;2;U^KYZdddC'9o\h#1<">4Nj#p;9s)`E7K>1?fuVc@1*SbMEc#"OW7qmi(,J\irgurKGr\IVd/_JTZ-PR/V,pX
%CUE%81Daa-!H6OY7p9Oq/t@+(DO]L38ftln2=q(AKY.98^c?n%I9=?NfLT\\&g";p(')_"*$gHe('bW@8]t[DeH@HiVf07shk0:O
%al%7tL,AU:[00$idkS)S<<J@M2"3Wk@[PYKqcUa#.tb!Tk308[q'&JsF^^*^^JJFX(Y5*34mKDFa&Vkf0Q]FfBu98oHeHA&?s"j/
%-W_u&%asX&$Qu)?1+I2uQ7WCa[k)PL=ado.S(8-]O+/]].$Mo6A"panR]8Eh.&Va56hG9rD282j0!s*9c#NK>*.RE!3XjQ4jf]I]
%2amW>\:8AJB8g0548`eaY#HPjFo0ghBU)`h>G)4.nBl:6EaKQ4s7L8I/tF_Nk78JQ*"!D8>?PF!+qtn,re#dr@&9O6db-pB_0N\t
%!lJK8r:%g8q`?J"Pk2%(pWu*Jf"75-.#dZ$d8V!G7Gt@On!iM5O8[/b:48A0dPC!?[p7bR>jLIf*iGd-]Pl3t7"nPcETA'PX_98^
%4q?Ga4!+0uV5YteQr1[`]G/=6&r>OD_OoX2(QEYNoBZL8r;/IC8?snJ[VlO9(`#:X[@VHY\WCm9O7NaC8#7@n]#C"$\s]!5h%dK)
%RT4ZOarI1:TC+d7Z"a$`4ERM7>S`%\Ht^fjP['SF1ILC?D=D+/`6*#KL$`tM]6^:d,Gkk3CuVmn92jG,%:sJHR#4a+_<V-6%pK_i
%FWTm3hGNcB:aR^K5&',uaZ[4X/]0+p<BGPa"Y[3IB>hK)EBN/%14Wr7a;_""fQ1HoSD@([SZ#CtWcTc-K8DC%VT`iIU74kH;FKP-
%0dn0#2%eW\1lM2<-NMaAM`ir05@TimpE'3E<BfPm^"3YGa%nV;&+%oC8FmN$R>UQ3rM!n@[qV#j]/rX9Es7sQ!uYrUFmFV1V1WtM
%/Wa:-*cr"PbF-i.q<=l`(t$!AE53/S,83HZ$SW[^Lt;/a]I"Vb/07@V'V!$#%NAVqoNi2,WeHjuKcC0f=t-Gi>U[`M)(:=0BRUcG
%hW@L@77I5hr^.t^miH_h_6?NN+Y;"IIjPi_O-nf%GIK4gcYg5^AR#)j&piHeP:EZAHt:cArn4pNd&E,%h4g$^RV%QZK^c!W#%P'D
%):Nek&D$Vh@<h"X$KY/!%tYYI//P;7<F=qSbb++g:RF?6AJV-LM`S.Ol3AL#cS;f*Mm:=A-T[#c?W7o(]n*B`n>V0;+l.AjF:Y7N
%$QaG^M:H\1/>39`K3*%-6nJ7cGSLH_pn`G$8H7XKQI?A+KZbiD<UX<6>'N'ADF9>iZUZGJXQOS]fn<*0=VnY;GZmd)C3%"8kU1Sl
%;K63JNKS38[;?NqMgOP_HfR$(1pD/n2mLN)V#s.q^iGI*6^FT9T/&E8S"il=Da`&Xe)0R,4"s>t9U6:1,Q[DJ;:KFBg%90F<omdE
%csTuQeeq8!h0"Wd<V\nf*dCT_Cah"VrNUS7;W`@eAG]gC`<Jomf5Y`*D&/VG9L?'nEp?)_@apCS.YbI7C''ek_c!+g(K#ZSGsn2d
%e$8A4nb0j?10SiSO4.Mc&!%S1.ht\_kd=BnNI/csZ!:%r6hG;0UT*i!Z1Wmk)]uo9YYi;tHJ:BB)W50or@6+1GK_]3Q&<m/'RPit
%Z9Z>U=EI^'gFAfoA],eVenH<`?LnQR/-Z,>=quY'HQ'c4dne`5)Q%_>D]%("[ZYOA]3F@a<ptOt_0!B6K@MW'HeSJ)fBr,d0n;2c
%k3b;T8[2pAkQiYT.("DL?gV*Z+8'$Q^Abt6B"E?EDTo`M^$CQfGJ*5K(5i$/2f"B8ht7p!VX%e7XFBKie+T]QDOKCn.oq>UR,n+I
%B5c^LBTR&2%Q`E-cG;h&_rQ710JDd`ml`]Dp[#23b7/[p5&:+[#5C*U;ueh(7LW;.1Fjpgl4WWK(K%`VWMS7sW48Tl98\5`mrQb&
%2C174GNI9ICNZi!M7V>VqAmWmXa&N]p4nMV-kdS;RqA$9Yj*SKKM!OS^\)j2$JMLb(9R!)BY4WfB1LeC1Z,V/e*[Sao5CakWJjoU
%LE?>PLBq?CUA;[631@Vf*5NUIo.f*WZA*N&DOXhc(8fuPihAXM=V2YmQ;F'b9$/lH!pe;Na[$$[%b<0h<t*'HB!"*99]%f)3Ed6&
%J=kSo7uWj(R*L[;1mJlI*/9=RKQ'R#?AWk\,_-TU`o_'VdYC-]AK-qhks9Re\nS)S/+!A2b)_B$;mX/TaDZXUl:b6**)%<hkrGgd
%40kG`SWd<Xk/bPf$u"k>@]be4`-Ui:9,ANFiXgps`9QuL9GPg4-f6Et*a)M<>!M#]<=FMp,H)hA6Y.]e:;<h>ll7FujLqe,5S>?/
%o%mCf'84u^?Eqh?6*[D_(abG5YqdW+=o3b+*a$NnCUG8(0/2t_\6nX48T.]sESXjVqn:b4%&_fgG&USk6U4=GHlFVj8L7#"]\T3]
%pet720gdL4g->tDoH`>KFl)Ke8ebDtCYMfY]O?kIW7g9U]rYh]YpDT<B)OKJZ$I;H!"#`G'a<r7db=L2pPQ]L%QJf05GE1DQtFZC
%VQ'f5>BlRCW9q7cXRA:VO()n8[,%r)1l+!keWhTPcjGP%h:hVm/]6L%=]P"pCMfRdZU-^nh<=mWK_VEi<D-:XeT<OcMUUtO>q_0*
%D9UuTD5.TW?I,$=MDdYcFO#1&XZ*<QcQ8]*Eq/1nb4NtPT^/jgf(TZF]2E1*M#5jp@5UL^X$F[l>&,k#&gnch`6upoo])NjY>^ll
%B4]N\\>Eqt=RO0&NkV\0o';hK"@ZLZRPE/UhXBt5n_.ZQdEChL.5>PD00bnodt3Y#o7/cLH@210jq#3Vb<,IhCpi)%hqMlXq:j_i
%dSNq6r<<FnZ:\hE)Y#FWhHJK8A!,tR$[oGNSNdRX\pbeCqeOUQH0=,Ea>oQfeA<q<V2u>G?a:&J@FZiA.p6S79[0i.lSp%d?Elo-
%-k`2"SWhK&d(C0<APTEpr+Z;GFoFTAGr+I,O:J_&=]K<2S.8Kka=!P!&QOQSI)ZcZ->uNLr=IWRZ/n*!2ITiOCVn-e$.V+Rc%tNn
%2J2UeOiFeM:+ou:96&_XSQ>aEAXk15W&R=H(]29AM5mlcn33LqYl.>=HJrX-1es=@]<A70lgb&pDDa^D'.-"q-X]l+%(YSSE\I"$
%k`<W<rh5V4P'#!qYhgBi*ZZYP:d;"e5W?f1pu-I2"K-K(M-Q]9$:62a\7S"c#.kJi<62?r$*R>$A7]GnK>\IgK^iL'Md39'$lh??
%PQM_[C-+tREtsmK\jc)oB4nJUcj^:VQ1nng2+/<QZJm>J-.Ek?W^H^-=5E?LjB+J+7K4=R#?Qt$6qiX-iX6GZPq`'CJKS?([-k44
%r*>1uC8!Y,qPpCpU%XP"Yq38U(+5fp9n>.ETq%N>C1d\p[*YnTMGYn2oWd)m@EbWddADah[9T0aYjN?!o@,M7=Fb;2+tO8B#I,9)
%.%YF2<8-C7:nr0QRu?(qhDPlo(aQn1HQ9Qag>oNthL$&3XA$"G2#?Cg2@HQn/E'\Q+smE8,rNJ#Y!Xd8fYF-k*Cra-o=CZ<AKge*
%6U[U,DkGOJcmEm^nu4Gb-hSIa=B$%*^N1jn)*h(u>gr7d"OLbZVe&"5?sV?2?l\BK;/Qr!RPet5Z"'PnG+OH]=p:ljNMEAT%U14+
%a>V8;No+UnUQjA>j.cA=33a0C-WihGK<$6'1+"J\aN.hJ`VXc3EGmDM"u5B9IGu\!TSMQs7<ldahu35J"2>=uER'?6*:,cuJu!=6
%dXVAW.Hss7"1/mg!5u0e[ZX)g&P]*q78&d5%j![0S1P^83Z:$E,^).E;Of8\3s$ReN?V0cG=ldP],Kgq1=Xf3)M3a1BoSG1Dt68:
%@c)qrij4CibmO3q,IBmOXVh;3^fWam;TRLC`XLmQ5!"Y+C*o%WIc`joK.m]1mF.\u.EDSZTTfgeOMn1'e"qb'-2f7l<R,#!a@7M1
%F[FO`Sdl-(UJ)JQL;\s^h5#WJq6\P_O-"-n,"#/1f6Qd8qGc;gJINCo&"e+&+4AZr$(Fhsi`pqh=-;Tj%\lcCkk<:6`ueh5pc?Og
%Z)eWB/[T%7cH2Zh"k'@#G=9qPRo.[s]h`dFc7UHB"&D:[A`U6tMN]3+km>;"a-!Z4$C7<$Wb+P)XR=QsbI;s#V%Op6O*m9tkF5NE
%H2UUd@?cYXlN[BBU$;VX7:09)'IeV!k]8gj*f4r(N>d]H_<f(*eX$*jZ+]&nReHa82XRu5CX'#b,FO)/OX3P]-D2b"HTI!b'`8e<
%Wu30\#kMfDG1WW9p!pFP,#GD$\3LNN>D`&p!-0q_Pe<tp?R*#C@Hp^IMPq'mj:'Q%`T"GF.,YOW<df3*EC4Mj;jFrTU88hW^S:<[
%+Y_F^*dip;.p_"SjID'Z;jf7\XkPg+`f]j0/ms!O^"0c+1*:*32Ih\Q2rU+gm$qD!)LiiOG51PM3*g)o9\6l,76]TuooRrk/;Ned
%B[a#3+D:'MkmX^Q^":n1YUCtq=eaa%9kVs*"UkX!CC27L*C5OOpPq6[<Ji;'!9[>M8nM*>5]'Vt]^`W?p'OhXctiRU:kT'?OYg^J
%6l:#QWP2.C1#Da!cNEJ)=70`;!Fd6(fN>B.A3E-7C7WC7I.O*:m8K>j[cP:I?n=@ZLJaAm>?DRK9%Mk+,tE&,5g:-e<7Pt>`>;-/
%;K3D]TJ\a<.>t7G6SjY?`[LIjU"nPR<E998Q>%(a4sM);jTNfqn`=AJW*+4e(1aa$B]]dh6oj2--FlOI+h=9I7E7fO>;;[gLJ4\e
%:9WtPgH7=OgIK*<4\JGG8R^W32@8Q$ahE;Km@MK56aO"r']50#\Q*%AWpXqnpp)Sp0TRn-<OWuGhFj/*6PP*NL5cHO@gQilNh%0M
%YUD<MZe*@s7L'CuA`-h)XLmaPMt5^VV=%8%.>]u87i6pmdeB^,Lb?lZ$k%/WmgDp/R$eF;Y2UnrZ?Ea[ZB-XA%TJ>:.qS)erEcjE
%E<CAQDsuETTcZJQdJrVR3u_"*:2^*Nme(DVl'.O(&W=W>YoL_3idl>6(:@dcLoiO<K&n;:a@:Ou3[;4UGGR9.ET=?f;ABC<gJN`m
%Wu`]."3ET,l>[*_:Yrf+OX\h72e92?)il1<VAk`&;5'Vl;.4>[Hh34a0G?!V@e:-kQg1#1F51)\b77l[/Y>Gql0PNO<1FS)`:8IO
%Nj5$l)6pkWefU@VYrBAuHLqX[4NC?$dj8<Nj)HlS)(!1YV8LHig)is+o@@n"s&;8c@U$-lR.3f"1eG=6Fm2u(>WJRZj[,Pn>W!9G
%V8tEIVg&i$$3+W0CMh.Y?0`!"a\iX24o%od"hE_>S>B`VrJOsH=n%F'IGNl4$i7DY0>57XV6.4#GE*VJ7ZEsiqUr/2mgQ8Ime\!f
%:0Ql@[R2g2fOf.kA/.qS2=eq^Gl,Hb]k9j@;2Fd'N&j7CUBbG==<ho:M]<rmgG*/G:pF)\AU&YC=2=&hq8,MLrIu9KQ#/W,Zrdn#
%R`@mlN%1edG_`89UK+.0<`',]??CIH4af!dWJ:O[Vks$-%E,5j*NS:8iQs(JNb*K>AeAF]DiJNn>LpMF7g7b)EGE%"VTF,7b@_q%
%Xh?8S3hL=_\#1Yu`lBT(*)BM;=DbF&(Ukr@Mh_dekbkm3$"tXZkc&Iq?l9]ngdV>E<f37225#IlTuaP&08RG(T[]]WIu,A)oXh"m
%Yr\s5B"+_>IPDaa"k&"gHM"++QXR7R7(4\>,MZae(Y,>19@OlLBKe%nUO77P^K"uPe3Jos66=BiVWnm;)M_\$#""#pYd"m_>aB<!
%6[8/?jV*OY^qM)F3t_#B/%,EE8J#5C)^!,si?mkJ7a'?YO.GoIn`P(G'rc,OlY,%.QEJ^=)(F.S6THEIOu$=3d.7E,=iXcO&l*Yk
%k_.D\7UcaI&&,Br^iR:V0$[-fIa#TF1&dYWEfI^.L;rl"Y7ngh\5850n>7ZiWo_91PnBdAS_S<.g>EB2k>@;=#R/ZcFLaS)6"LTr
%XCr:sJ03%R'59I9XUTi<?R"!t9arkJ*k$^KB^H=o"b=f0URh0sVA$[[jrYJ#r=2BSX)R7nVn_>)1OS[?P$n$[&t1psH>Am.Xh>oF
%*^q4ej?LFuO]@_m/<Y#0Z&;Dr?2l&d0O+.8M!D:=YrjM$7OIf9K.oY)A<Krl)duVVCM)(f^9J@475a=r6Eth(i.K\W,h=ElnM-U^
%#U75ipn:c-n_&`D>E`)pig2:]0I<R:1^/"IX&S7?MDliJ#\B+F9Sj>Q"O!HsGq_`>p=4a]il`P9/'OP+T)J/9TD#X!"/erjiYna:
%nN;IeO._T\mfVoih_Cf[Za1.DB_RqGiY-4GGl)3[$XIhL[Vo-m+rOgN.i+o&Q\%YVE9%qr?RUD+itHEOV*[NrURC!oH@3&?J&_gd
%8")*olO/tiPjsR,;;o`S<dsCoDh=d17!Cp>;@TG"%T[mK<Eokq>D.VU?(;cJV2ESR4'1=RPCis06Nk=>%llX-+l?EtoV'paF?Z$W
%hI;]WB,@gjf61"sa('nCSX.?C"o`,uJr^'u2f:^agb;/UYR+gjG&tC3fUTTA$L!8ZqfPPZ)oV2_$,!""Re5%3#brsA@jSc[/5LD!
%q)U(2ce`sFQp!h(_BUarJu0]81eNG3\dM>Dk[r%],FGaCC_[$R;(ghYmm-I]Q0O*-7g>,f4Xk%"6i@lq('7J-]@8cCqG>9USgNog
%rEtQ`Lo%+eUp[1*Dh4)'&MII-H]#Ug`;W&W2#";8`c`Sn+P:F7Xqd]076WlG!+@kA,`l[i\>>M%%CDIfjSSY#m%u`9eMjG78\.%r
%e0muARgk"Wj5d?D,`tM6Aoch22M0\)9E?95_6!+C-l"4Z+oEEba@BX#&fh`8'C`VKi5fo4B!jE!dgLd6Bt=Xr";ZR%oVA7a%1hl)
%q3#V\*/oCLHXU"WdMENu!1Tq`/'+n(7f(8MChW>&-8.<4(3*Ld\C3h:4LF'c&j@PQk_8mf>5[&C9;?>K$\mth=&GA*64b2o6r+od
%MGVCK<q[n$5%#[WAm/o/:irZ<!>Xr_#aSb#O4;T_EL#%LX8^)]k0WT@mBg+5>k-M,:i`Ns+UBt_!n51ncMJL[XPARtW7?%[0_@,E
%4B&"JZ0OcH=s]4DWKkXN:-Amff_G>5*L008[:P+jZ84`6e\ih,>Y*Kbol^J'O;tB-*@$k*c<[ckm%&?EI)p?HoVp91?+]F&0noOI
%"JHO?E$8@+g(^FGMVoN=ol>mZ[2,ZRjUb;Z/3^-.&fi@Xm^l9._u!e029_VN9/$q:LcPu2U6U4c?G](sK6e6kdYuqS@Wu;U6"<Vm
%@?;thYXS*BCh3W>..<NlAOW=0Q#Y=(c5F?LBU<D6;'pN#h8I!Ok(cb2ckl2-^KOY-F8l(4k#Gc;:'rFT/o"M,nJI9Ic@*%R:.478
%hq@7l.23+eWI:3bZO?JcQ_oJ$;K#-Q!`OasD6d*%/kJQ`8m,'El>-%(bDZOg,-fW>ejri#ZNX39(:`+YW)Y[PSo;psnq_bse=QiT
%/Le?i922U.OcN(/jQsW&N"7=6Tt*[HgOp*3CZfN1k'Yk7p&-T)/T]]?hY@&I)X4T\JN)uNDi&bLs2840.SKUhmD-$/,&eLC_SVdC
%o3a+<E;d<D_^D&Nis%H7G4)fe]n,^/15Z*Z;<R-sE)/Oh$1.2JY(?`Or*VXgYbe_'Ai50N0ShtPW,X(rl&%LLhN4j"?fan,j)u1-
%JJsS04j+`NX=Xh)O'L658_&'3baV2o)X9:4-S?:%csIMcb5s+4^<\OWNH/9k,)ts!MZ/JP0<%>%Aa.elAe+/5(UO1?D=S774K/)c
%"FQ$^5Y2Oh:b(fEd96hu9pPQCA[^A8G0UAY$bqpj:_p/7N%S<9*`\K6$pKs7k@B1hN^V*FkuG^5WrA`&H:qm`/Q-GR>0$20&"VA"
%JUH:U:Hrf8/a"Qg_OnlZK1e%g4ZiA/%IP0>ZfeP<M"VlX&?QS4XOr;mSL7i\NdB-;ALjU=gHissJ;+>AACX5=K./rMP\VJiE_36B
%C5U$QSXKtEn=f3B%$7IofC$g#RY;h@QW'3)J?"\d3cKW)Tk&qRjEiW"8k,p;m-o%_U`?Zk%XU!`r6D<88tfsW5dig<W7f&'Jh_>L
%q_+E#ZfRF56pLY<2hLII^Z[0_[0\lnebQ9iqKdt*7(hNLlk$sc^/:<Djpak>7>Ogh]nj@*HZrUfoqRh(Uq.jgL[(<DW`F3;`1p45
%`+:LM8SFmiT]E=eTk@A`l0MRn2<suiJ_e-8mjQJ5"S1Lb+7mIM@m0dap@luM0>H^R_fdM(9DF/2)_!Hs+JSkifn-0'Lc%d(YRlrh
%;KZNGB2Q+;P3MM9qV5J[eZLC^7IAl4m(0uTQHhT`*4Z=#_kj+:H*nMrAFeph,M.s[9p):l_=VdY]_\!K`\?;Q/&'!ETIc5"O9DZ2
%2pqKA@CnL6_)\&@09+0H+0%t.i$XF%N^2dlHM#Gs<frHG@!Gc;QXZNRC@1%_5PG7Ml8LR2h-*m-_h_;:/ZV!8;W&R()g6IpWE;lq
%/)K+4Jr:3-X7-%d[Lbi\C,jcA!ubE<?4%R9ZPhG2g9Lp'5:e^1A_^*eL6I1end>(V9,8IB&XQmn)Wr#'Q8o_H6dP:m[)H(Rm]ddt
%*g3(aY<V<HU!,:;'&&#eHDO&,heeYb-Ql]0@//(A<@tt#6V_^@BW+64+rlQ>:Z+pLr!Zm?mABN/5GXi#n&skn_@CXi2uT+.SfEJ3
%ruq3Em(t^-ZFSW,[dDKL2H6[<L5[`1?cS]qTca*jk'/MJCtacfU]FnfWo2nKCKuA<1]/i/hNMk=6B!q0"7]b6B4,EV/0mi5\#+4-
%N!CAD(PbK2KF[c`[T4[&X7B[;D5p=SCTFCe`4([(cJ<e<R#^B$WHX<Zr8+p&A!=TK9[_)L?M[Zk4WLrbg<HL(;IbAGIuD:C^T4aN
%BO8Y&<Skg(2\)nJ%aDm@kTU7e[o@mPEJ5/m:+MIl(RKRHXoot?]qbu8LS]djV3W^KQC7oMS=*T7I1)\I?8b5KSU6SJ^SKF<^"^uH
%Z-nSmmr\*HTou'(%1;:fi6g+cCHOH,fC[1/DuZ?S"@H6N`F2QD7`j<a\]"W*SD,=P9/n(b<D"J7bOYL^cp)%C)ak7$QOpl]l:6A.
%#:kK.+$Z-^p\S#FnO*#Hcdd=dYY5F<B=3h3V5bI@fkmbs1M.NqiW+?cY^5_/SVjLE3mt!d&2k$N8nG5JEt5!8)#p3+jm0.D2TZE*
%s3I\gfl`DkC,)5O:=J0!$IIK9j0!9n'S$JM^k?l-6:BuXC<i=oU&1b6a6P'gF8D0@,(r"S;nYf[O",dTY'a25U,7uIBn"X\FV[,D
%*/Hf&^P$F#Z&Bj1GiVYrf[c<,V:=D5(A;e#TJ'OJ/cZ9GU+_#%MO(eCcGNYmfha.p*J#8B=_JKNMUIaF8p!tb)89mNWBLo'9M2`f
%InEU-<C4s$^aA\8[W*piU))]bd#YgU:R.e*77+UPIHVBh_\WW5>tI(1Nu3JqB9TD<bp8P;4#N5onFbl)S#k(XIHAYLp^5[:/I_R5
%ijja?XH8joH[+-,Y_8s;&WKQ./.;!%71g.`D-rL-61"@m?'1`M1XF&,oOV/03NT>SUh7\%\Sjd$l0:XhHqbp[Tll"4Hj,^c#RruF
%MX\hO"g"QDnZs\$3mN_$8>^4I*gD-Wgs\^G\9!_#G.B&;!DV6(*P&+?QaFBu!jtV<4C?p;jn%[4L)6q*JEqR:P+nj'T-&$daOqUM
%FTtN)6F!RpFGOKMkmDMIniJVl^P&n\GFe<)Qeic,pl[cS1pq(K3u&l)#$g4S5m"$#(a9a_G:H$)H'W:!>uF-_nX;Ksh5[M$%f].,
%?__(9P*Wf]fYX\$C'dE`5t@*@.q!Qa<1?t=%jWaN_?8o#+h[h2."ibB-+Pk_`^C"0;Rng+90bb*1P==%;@*?Lgm$1kfZHlGSij<r
%ke0]3Usbt/2AkF=CeG-bA8#'&_:+9Hp+W$F#XQY'ZJ&4'!YiA4cnJFF^sj&V%0G4Z.jBcKFZ4`"W:bn^+>CHr+&Z-8deM(bP7f=0
%i?dUb5C=6r,*Sa3NOl[CV^Gl,,9u\ArRZ84(El6g,U7dhInblnF%0$]7p[Q'c/sn;YFb`i8Gk3fc1#XC`GJLZ2=[u9-%D448QUbK
%7C,L/WjRp8RG":;/r2Oo0t=I&W7k*H[B>h_FqMMFA5]Ke.B='=4Rs($,JtcP+s;2o\1.uE.C-JU@^F`PIeC!RaRku-TQB&jh%4O4
%IF>H=_0]HeL#E]AmU.=d8"MQ5[]Io@DCQQNPo/QGSYNhQN%/:pDo=1MmmDPA->.aD)ujd0o,A?XH%\N3B\kD0XV.r@"MmpaDH4C.
%X$-S2,"/SEFW>!\Fi*7`RtjU$!u@oQ$!\Hi8@3,iVL+9kjZtmtc@^==+gBs.+^=n*<R.@<;/Zb5oG$+F9^Y&>d)YHi<rGrZ(Ghlm
%V_R>/eHLcU4!.="6oJA6'S#3ehh)7<VSgek0BY4]b*LO]1uM]*-D`V!bQXPm;9;Pn^eKM;e<Xe4EZnq71ZhK:>5tq`^i)2e^1BWo
%GT/0k&Q'Z1LBG8-JB@J8)"9:7L]C7O9^E&Jg;FVIM's.SN62dH':itKAXM!mA.ggmWNHM1T&VNbYYZJ_\;":7D,/U<)EIqr^<@.R
%:?FXAfRfjLCedq\Q9muJ")=S`L71I(SE[stE[/Nl[GS&5/O-5O+]_j]k(iYTCp^Zp!,8>cg]Q!=H'Z\fI+uZ7Y@kTRd5$::WkTi5
%j0Nh]4JGi32e%l7VRX?QhsaR!3[IiPHD^dO0ANX9DgsbSS<5*$8^XgG7)@L+TP.4S`"Pepb/2_mECM?4EDmtYgQO5p^t7eu(e:D?
%Stgq8#L^],KPgOe=.m!F@m%3P>B^Bh*;`;.8lm"U+XsaXS#n&ZZ*^<sCUX^dRbfp(.k(FrRPguTs5#Z[PO>M&k7JG,P_:'40Fj+L
%Q)1AC7Fs$#fYA6l3]2^jMUXZK*+sn4!a#]])q:3q6!XM^n^QMLq._O^HYGSQ$lGjLbC"#ogM)c8j1Uk>r6Q2imIf'/!Nn[X?C:U=
%b#=@OK5MY):aRII`_UGF3L@$96qu*oV;,j6Z9-X4(337UdrXGj2iS;IW[us8.!"@:KC#N58`\e$5!CYk,`TQ5_]np8\r"L\Y@12X
%3O8&5;7AO2BY:2I8XE-.JJ)`+4n(4t`-^2<Rb]+Li5%,8>Nf(NI8-=j0])H;krHR%&f-VP*mj7rG.VfeY*]Er8SNP2\=aq#:83rD
%3G/%FQfX=4P&&FbcL8$)4JWJ$M=$%pRMM3^Z*\'G<M/B37E"?Q,s&R(RR`I0V0:T[^f6'Tc(j_7(>O%7]X7hnT-cSE9&(Xq2,ul]
%,1a)7j^PP.fs(L@rD(Tp,+2\n3UP.BeK-rN(Js3Ca7ei+Hm,Cg@X)?sI8:WsrjiQ.#JX:jkl"!4<8@gc1umrHVP2$g?QjDe%s"@;
%eTI1d_-^8L&s\/2gE%3<.N)]'F9q4Q%m'::K7&CLJX@2M?%SM95`:D.Nu?(<H$\(PH.&Z?Lo7_5lI^&H0_@EogZ"p;^+*LZbpW'`
%Su5AW<`NO?U`+Xf,t`@4.B0GHlF]9gl,"`^Cq_R7`+eEe>&ZCcUN:Ae3!7TVp2a0&$@j=Le2_4lk,*dJdCkMS#DPK(rh=p/&p"8K
%/YiX^=/\/.\teZqjHUaoaim#^<]S3+KA[kIGf#4bLV:-WJpjVIld)Gl:Ybak60k88:^s&s&2t.XKB70j1$sF]40H:"?Uk]!Q<",9
%?a]JA*;)7I9mhH'L)p^.GqS6RE!YbY*9kp0A_B(q]hUQ6)<YM;OMr@rb(;*4.jKp/b#g/9PO[A=2Auf(7>#gGDC1H!`e8c5"Z6@U
%p@F*]U9M6&F8,2E:gW!R>k1;5F9c.^@*#%9@]hm\N@Y(ij-Tb\rqTR.LWWhV^(eE2k<LL##[Zg6Hk(_YPi1KhJMq?70k*TY!SUc#
%lHfY&g"Y)'L)n&rg[$rcW%h"BTInn^I@[O5IS+B0#-a1+7bSgaZZc`,W<fTr@],3h:uY^g:dQRp5,s2$-YO7lWTn>06]SLla\><T
%AtX<Pq;rrR_\YV*-c#VZqVFVn]PFcR:&*lM+oD6E1;ierM'Ut0r2G:V$tOnAqR/B3oI,F<Rk#'tVF:$Re9qnn^<:$lV/g2C`eQE/
%QA\@c:MqIH"je`7@P3A56[#kP-=`,0W[t\5fn&UjX0,i>)\J<oK]06!0t&q)XegrU<r;PnYqrRsP&IYs^NPKH#JVlQb,6V_PDcE3
%3o.2li^bL.D]O+2EIR%[M`s&q[ug's&S6B)\&5DdII#20nfD5_U_O;$34EY(3.:XF^FWC5/f'Mb8:$6J3RaE3^.E]"fg,"Fr#[d_
%M+7[XP\T8.`U^?P-aUlKP!<a3e=^Z%&:ttLM??L0hS!=Y#,5@m$ebpf1)H(iTJJ1+S34&d5fQM,48pN*+iWfJ8Sl,;'XV08!bGSu
%_`?@*"?6\n/q5bAb;TC#Nr/L#8f'iR2MS!uZN+90._numkk,T8qV&*_%#G20EM44R0EfLH;lEiN%4^Oh[[G:TX4TDb0;kRF$p7/<
%B*bKP56e7oLne]=hof*tCq`58oHUQCh/e$Vfm@[lbNc\I+a-r!540s9XA7H;W.P%:Clt'c@acYTn)Dm7^S0#%2Q=*V%%:$,k<R]k
%gZ;$*TJ@udj.&=;#egTBQ7[bF,k5Y;?&morZ'k^l6;!eaFCkLp,n/CGC/lB+T94fpC4W^c3!-cJMYfXRj2$QE'K=9Hs,n2,WUSL6
%Br2GYK#r(/DgdnUaJ):pTnCA;;1as'Kl71Bl2cR\.M[Dk5jQs8%NUYHXK(QNS4$ksR9Rd_5i\=RJ%CE):(C&LbAE@kScksQ];;E$
%lQCU-RO[J15%^)9=]W$EqCucIHHW.UO;.rMUr".ZA[P8kDm(dj_)Z']%TF'6=LkDnP"#H59(EJ0M[@f@plSr+87=l?6UZ;7TKi?[
%I@4ime8i1ldH@`B0Ii9*NQRRipKQ3s6_g*C;*rPF/u=/_QOSSu?5]1@R_K]Z'&'N8ZUt@_RAPS@Uaj82*6m.Q(mIc#C#_EX$l!g/
%YYl4E&I9ElM=oX(SXa%9+HT?X>`ahlS$.q>2*biE8-jK1kGJnL0NAmUAfo]`5!<?`(ci#'6+P+L4c"PRbV=G>eejH"p,,UpGCrkF
%pIj+f2)AC-AQ*.=Z3b]o2FWl]8oA%8_tC>oe-&uqq5f0e*D\,50`#;WOCl/JC\8>;llf%L-,9\t_OF7C?NPuu_h`&7;Or`XPT=#N
%9@tj.J0?d7`]RiN`kG)+i,*4[37_$,9@,R\<Bk&;3SC.:RA+QHN2UV#;.kHP#b%a$W\msH,m;)nFAXLumJ5Du5GkL#N#KObJ^F!>
%UFL8:0aT]`R6D:&Nmg"kMT8*sh_M=%#_-4*kCoeid3Gs#=LIu]7tO'`&8I*,+-H:o"V;*q-QqUDVJVi1aVc8+YK-,p$sFbK/]19p
%&RIKSWNs1O[k[/a6!aa-Lq]*fQgr>(>N%LN#JCP'3#lH=%I.\=I9I"n2Y!(=MVqqN/e9^Zga0cCdW!Z*Vd7:9gCO>RM')ZbRsq!B
%ECJcP)JM[dYt:u+,S@"EMS#gqR8C'VI3[U>Wfo]jLdpYqb"^4'(q]L\%MjKf`"2k?mlPCP0e8lGqY1$MqWOFgdX'-0l0g[h5urFu
%qOCAfjCT%e;W"**8c>Ob-<QPH`3JH:'Hs(o)G##"3gC+7a#6,IQs#bI!(bDfoARPC6<F)2gq>.c<h.1Q$>:L>^:VF:SmIJm]1k=-
%>q`^i\$+F[Hi:4A,=MO[.l[>9J,8>Xrf8-br98_/cTg93g0!84l'FX6f73b:s7kV=s7:a:_k6tj_]SpGJ,@.T+2d>loq;635Q0b0
%s5g0UkPb!:s5uWHkq@P__h\9jJ,S>5rp:5Gr_)$n?MYcCqg\Y8inASurqk1EoDegSJ*p[2"VrMGnk];++91iql9G:D07Wo/s#[A0
%47UG9rmMtho\]Xjs).\o-3*(&J,G@Wrg/-7kPt87O.X+'T/uDD<1Q]XGFuJ*s8(3Zr8h;#o[Ej507Wc+^YD%oW`gGApt%b-p\X%C
%Wh]R:+9(X<ci<U?r:?s+SW8_YT8Gg]"tamT0>Doi&m+u,XU6^O4D.*]Q]>GgQa%Ek=K)p^hFgllJ8[RUlOhr6b7kJEF]TDWN_u!Y
%ZOHeXMMJ8R7`pa"W@M0U],rZEL!f='AKhcP9IiA87`Opq^7pF!pA3%K@M/X+,CDoe7C'NZY_\+_6n!HEI3($CD0K_B1sr%X@28Zc
%i!h:P&s:/4#L^:Dj<Y@%OsAd.`W^Na&FmWb/;3=3I;n(Y2%F0!Rcu?ERd(GL14f)Q!e?l02pnSl:f0HADAB2e7I'PT.)k[QU5FeH
%5TYPo.2=.+S+ucXDuZLl"2DRR5e?&_9Ft$k(oW)C'7WIqWGE5j,A#4s6l:k@JSd'-NTH*KNh/L";5%)k;-JYjFYiR!F#NcHfp)lU
%jJ`m;Y<^HhMnYo_MN<g.]*eodIb^ujrjn6iodU@u/4n3'/t]4ZQ-<*(;2Huu/n2=mPCkirMUUPbnMsjdo4ci.XttWo1\1,LA_dYS
%;-QiBY+])Hp=#4TE!a:S(^58*mNF_$f;dbSK$@&[,1WgEK5la.6<"AD;FU$--hQ]VLb'm^Ode8_\k4>3k_prJ5CZ5SD$oqHrC%=q
%@8#:TR3$DDKEkoKeZ<kbT>+dHnF@;gBg!HTKQj#N6;>\NrR2`\_$*WU'k$Q_M-*/Fk[i<l*I"<`dX7\E!$?F5=:KE5_c1a';buga
%=1Ol!)$#T<le]5GAab+SXRkb5(L!pR4@N.8MIk+?@AN?.<iAKcktp\YL"MbO1*'S3A%4]CegemqKKPdB[aEL*$@%-Zbq")7keP%b
%ko+-fo&MYfV-(Tj-=K_R<^1;P+ZY!RAr1_F_=u'@K):"$m@36G)P')RWm6(jo0:VHT5F236UjpA42NNX:L?0A=c*u/<[iT+'YJ0l
%$Tuao>Nu<l[#e<ZWFX3;=('aN<jJHsLFLe.VA`#7R?hr@TK4,0F_#&V6<-U)#XgYq>#Ip&/Qe/uYTQZ]SttXr&l1Vc$[ZG0cGTK;
%Vk%H@`g<#WZ@8f>%j-ME\jB;^f"u.D^M8T@o.ZtnQ;6:EO4"@iTQ>N1=q$/&hFL/%'Hc<q%l4?bOATXNk^j2R9Qut4%p#dY-+I$H
%5uet(A\*Y?b73f*9dQ!>^m(TPYu52*fi1sU1R`bAlD%h_,u-bhmc6*eNYKo!JfEu]6tf2+f/0qn$9$BkX;/ce"af(eT0%Ek^*B1A
%lYhZCs6am>63onm-aa.J,c+o/':DZ5@N*A=QB@b#7h2E'lBZ'SZ2H3gY@j[D:lK,"E,)3HA+@Mf;mOOW&X<n03Yt'"\g>0<prD(B
%;`^II?oeP'E?*Ys<_npt0]CcCF$6VR1`5t-G1dlmA<eEM@iBA%qjmdXQDk;;PTEGb:Nht`),b/R.30rg'Sh2Q.H8AH]?;bKRFA::
%`6>0$h,1&cW>;Ob\XekTX'ISk=(qINd<HXd<&k`a-"5uum5M50PXX(&R`_)YP"fp7f7)cB>0N^?.sb2Iq5%0\">)jciEmG@k?`/2
%e\<!%r0uKf-HX>H&$c6(O4?2$_R6F=dm<J8[I=0H_"Eg<%uHk5D."S+;QFTkEK[9?Ojl"Da1V;;&"idih_qRT4?M.,X#SCB9b"f[
%Ma(!*G;^Y/<%4,j/WN@Qj:F"FgR9fA,caCcAjJe'V+Fc;\5f(_QKI/:%Qf"2nooTDn'';?nThMCRs9sl:^L*Sgp6OQ`?[<`,?JYe
%[t>DL>@+kGEnr?H=m5)ehBCj-.nE`"lGifIr\n&`Q]6``..uCk`bb.6I+OU]OA^^GZ?&8k84`T_l`g<P'7R!go%`=9=F,<"BFn:8
%fiiT`K_/6Fm<lH@]$#.!Z%_9p%T*Qqeh/LaW0Sb*ZOheZ]LZX3EMfp_&_i(b?YF0hg8Ysa9Q;%6)UrHO.@9-j&u'1N2snN!=Z?V!
%RW;(.$SGdF"aOL08jSj?`#!npE1kL_O5:/]FY94UhBV6H/JO6ih5#PKH.ktqrqkX?"%4Nr[@(e#>FhF?>2s]s`04<fRH5d`!8p)o
%3r8PbO6UBY%ldA+I=!d7MU"=Jp)gA97'mgq\9ErRcOo[srNHO[5W=)[DQ]1d7Z+j7&$]VfOk+ZZEKT$P4SK)hbI>^Z`i2T`P')nH
%/)u"ub9Gp(A*Ti/rgfrq/5;BY>.%@,'NWM"X;G1)fm7@,4=!<^$_A<(0m*`8iq=]eN8eDRG90[YZ/Sc7V%1+H*Ieu+(NM(=^kZ"O
%=oo\+<Ef9)5[a`6ekC&?Mt+tDrW5Cj7?"#@SW$f3NoQ3cbTn43FP&i7p)IhWNJ3^)JRkE3'K',iVY_C#%P'a2o)AKBkPesKMpMt\
%,&u-gJUGrag.G2h!"c5-"eKd7:\+`M?WNgE(;t'5O["6a\Nd<$^,t4(^E>NVXjH6PfMl2N4A(2U=e9j26;bQ_!f[_P9c5dQSBC#2
%6K1d>]>F4hiS5Pp*+u])g),%K8[9aC?!CJ]*"%G5hZHQoEgD8YjA]N<PFb@26tr*"C'o98r5=qL$.`,X4oVPu8Ls(&77Y?AJHptU
%YR4=(EYW87<?p-1_p0##OXU^ZZ<A'QWhP/I+KsSBktK,gQ)-O^[I+af+fd<#D]Mege`dWU/Lr[T?1XbSqBD/PW@2O/Fb`Qha1Y2D
%>OIb<Hm#'1,)"!j;m6=C1?E1HiO$0UP7k,na$[Y[;Q0\A0*j3G+UYi[9Kpo=go1LO<XI/'*h[8;h=hs_Cq.tbZ)Jf@h1O%@EA'n\
%k&Jq0A37oGG?803(g!['Jea[%_<43^^(4jTHNZBTh:6\6f95b,HP6X.MurD>80FESkcT<\k?k65HqpU37N.n;!0NtLScGQ!bjhZ.
%8it;mU&l#?b7`!;&sQMD3cuHdXbq:D71nGr&(g.4_8jAbWY/opfY1sBP_=Nd1B;f0c9ChD/_(7c:;$4E8]9@O+Y@m">B5N@_9Yl,
%q"7^9<fiE$O'98!b2e%87`iC/KQX`Jnqi`mW<3R)S:pNKfeJoh%MH9FW`k^,7Na/E1,KIl_bRNjJM!i(`B_Hf()0R1FQ)\:fbBMf
%FX.V)X+D%cGRQngL[i@\I9'_7/_]lECp3`sf?r/V[D6i#;mjui:mdYLDcM4/,ajAqUT.Qt\&dp"-V'Gr^URQ4::b]fj%gXpI1mlJ
%Kp\EQqV&[Z8*YkJRi<n*/Kb?B(aAf'?@X7XX?$(K69ld5QU8Sm1t?<?`.3)#r1KJ:Ug1U!1^RqHR+"C7Tki*oDLFdRScR7=-"NjZ
%cFF8ri*pd6&DfPq'`br6n3Vg5[:CfH."S8VZ8nX']](3,/B9JN4LWR,1CPSZnrEPHZXCf^L*5:)r>N_6;OJ+%ij0tX#&$n7]]%K0
%pa)K/^U(cJ4]oD6WAE8?,$Z.=Qn3?_85[KKWMGu@0(do%[8]"RW8(+aPG@WP$pLa\`]nd6.U4W\91tX,qH=Ok=_0S)qOek'0kCoc
%H2g,EkZrn7Q[ds+"nU.!+@-G7Cl*B>O^uq<AfPMkJ*Rot*QRF$IG``>48\iCen>(CZ6aYima1Md9:gf24f-kMVa5#.YUmuW4<k1n
%@s"Eq.MD1GaZWsIBheP\4>2.ZXVTpR2^X<7F]STl1AnV2lqjR7^I]`do0"CB5?a.UigD%ZW\oC'-46MBko<K;VLi1gNg]sJM]<<T
%3IFnJ[Dq2-QuSb)h5"<eNal0lZ7M9`+PVC%B+%J6)f%todO%J3brX!pCu!&`G]Wg#I$RLL*34fuKK/F*2kq-HJ("uhC+XS*AR;#:
%1nf:s2Oo:F8b0h%4NgJtc`66CN!8)nBG25LRoim9%0<-=4*u?#YMSqkW(Z/\'FP/RUc1`lH'qO_M)rg(iYrTq;<i!dDI,.c2god]
%pSbg&er14V_!9"]IT,e&o\IXH;l*%D_BF[c7h<'!+J9eM*ApBqCc=*tmsf-5QX0.TSIJSse7b?51G_K4`O6A:fdg1G+_UjkDUQbF
%RF?9Ad?>kHb2K:J;Pr02(]3/Tb63@i^`Usd#rQEJLE&:F7-7HI<Z+si)iWQP:t>^KNG_OZ4\/'/)q0t9YW[2bUM-Fn>LXFTV."2:
%"=sBu+krp<e&@;EkE-1g)WBA&?C43nQAs9D\0@s=?5$@QgkbBOA^mqTU8i*n;)M[kerhnfhnGh90$F72#/(u!-$gjPT=AlW)R3u8
%ZBQ3u=0Ff2rn@r:`4dFH->;SKNIB,h_*,1j7rO2Zk@GlV^!a<k[3S6Qfn7UtFA;A-jU\^p^JTQpVf5/LZ?/Ht9!IrCXQ7jH^/`90
%*AdP<ruR1g%/Np[O42\ZJ>o$D//FBaq)KQ->tgq,K1%;^2X#@rkc8U6hS#`>0>aCo^t7M;kZJ7cC2M'FSV[@QA[IBZKS0c58u@<P
%KNO;D%p9$*PXOfJdX3L_'[FXoHt/,D_aTd[Se`La?AlBeppp^"Y-JuCI@!-@r7;@ZmoHI93`XF+(KBmLDo\P)/#+ZK#0gGW><Nhr
%8+;3.#%"%k6l&n*N?U/Hoq[D@RPpknV1PVs)R5<qg352&_t(!e8kloLih(6uXk*d,W@mkMC'KG`)T*3+9,qGI!>67uaqX6nb]=f#
%URJr$nQpN(3S*"_b7cqu>*[<5GCfWn9=CZ<CHUHuCR_aKm(4V2.;le%q4THjcj8Rr)/9JSlnAKla*:l-A[.OS29)LF6]NC.d0&hc
%)76n.X8Pu@[DCYg'NG<4F]t6cD5s(`EN6Yc92uFh2Ks#Ph'XA+Qrn-HNr\G7aX</\UAEGa/n1c&D^='@BlV\YY*#EYHI62/U4d2J
%i`Nj!O<[^LZMi2r@)Vp"&o3*<b"t[uID>!94heMI$KKROV0d^?(WsKA;8IR^i=_Kt8E!@PbX2d,'lNqEU!pO;**Yr*<qF5X<l_gu
%oWdH6Hnu_A6!<RR(Y9Rj;;:V!@M-FX(=<c"=;CsgHm#uJek&7XM4U!o0N1?U+1a*o_:40hau^ugO&CCTSu=!L\$8cF`X5MZOc;Ch
%NCT8W"^.=g@5>m%G@37;Dq9`fm!)`*Vu"CJqM9sS]^tGZD;&I&l?sMWJEb5fI=MYe5;^Yq)np_R*>Zl*cg7BuDN2)a/SI,DWt"(q
%:Z;%3fV]tK:KNg*hUgVMC=[";K"S[qfQD#HA*XFdL*/"@7p.J*n>;n(OZVuMOdYFXf&IQH<B#61YB[MX[&o@eKtpp"jBhClV4tKu
%lHHLD'HR;kFkeS=\o#0=N/B:iD1)nY<?1<RXM;;&@^@=H'K9RX7tU0=OVd,NE+g$VZQ)'0/#O8(B@6:$g+GajOY:`h<MFuB8!%!h
%j$H`1oKZrLPEA0ge;Pmnc;')URO!3H8e%K"JB<BBS#UI&OA;>s!K*sPb="jh`*J\mqa.DCfpr4L+gsUcefK:g_^GD=KZ?iLVH-^e
%[LbtPic]bX/,_h+\%DU&<)@YL,4+Is^4PAZ"[o=4+%?!kZ_MWLf]"U8>I5DS;kdVlJn?HO4DJoe+MqdnKZS"OraS4J;K`tu$-jq3
%F!rW3b7^Yb%*7JEXWO5(k-"E/X&OeBQgd9BhKY_O+$\_B'l!<T^R'<i<#1UmkB&:0otWSP?%=092]'u3&LS8&)/A[._<[Rr!1QGY
%RH)(JE^Qdh*jpG\#,lUM-l^s!=]"aNV2.\Q(P$kLJ57mRjC#PU:eS#I<:7::Xu8slY>MApE#r^Vmp:FeO2M?Pq_X\gUh_S17HH_L
%"I^WM)4R-%eR0d^CQc"^cr`q]C1.[4<#pD!7[tc9\>;E,1^.Fj['Wgi]#Fr:G0(%KSYZ>Dj3K$T@Zr8:MgKL'F(&=<hKh?*5(;d\
%IcRm2hYi!@#W[lqTW8]"A87Qi7L/^^CAr['NLm(q>pU]71,#!-rU`.U/W-6P&!ja=HM[9!.?G6*`e^(f;TT@-3!<\mbXZ/pkMj!)
%m4VJ)6]EB%#o$(=Qk2an"=1"/*F;_nc:(_BV'Dd![Y+r5KR/V2a%(X4'L-\HOba;%N*_/ARqHN,#>@i?+0].E6p5jX=/0'Ror:7p
%L_WM3"i!J%]Jh@<6\j8E#g,!=`&bC``;t9"$`aQHUlZu4:lgc%e>(!TP)>0J1?Z6:$3/p[;/fS-,:=81DNMtF&Ts=<PRqH<&N&aV
%(n[s'7pK&g19.EEjf?kh\(6V]qj!#&V6Es6`pX7S,Lqq]3_8^Aj>+BWdBYPF#JsB+/9uk^.]0LNgND5W>+fuA*^]Ykd:1n5@NAXg
%@MF+;#1*d)K&[PcN2$'F>W3"\*(93IV"k<<Bhr^0Do7(i^=NBG=_fs#8<ju548?ccp_GS3/SE?*8jOga(?j41$2QSpfD!!UXX6Ie
%q!]t)Ksu,/`j))$V-4UQC'ZJ;34RgHX\sZQ/gYY;Buue!nI#"ep00/kM@_V0jVi"e]oI"Tb7&D2CVQp>6.mJ=1=7B-7<q#D1:!jM
%#d5r+1Qt\hDUpcZ>X?l<5tA=^)^!OnVZI=XURE3q4f6V-.u@0sU'Z>L"jZ3'iWUt2"Is:1b0RM-<B$1^Y^mIcf1(SI^A1+BXJKMS
%)5J&1OuC$`iX3,W78=Lqf(Y"8Nm;js@Fb7M.PAGrH^,=X[3dLA5C3Yc9uRY&iU9#$dU*-#;!RW?-o_1,6qq$r^iL?pd5nALM'X[s
%##p65Z[.Rc@SoDNajc\1oE/Z"L+#Q)LP8*Z[2?RCRs2WEDuPmqiL;/&gOte*&3leQAqhb@Eq_kL+_rV1V@,S-0NraKkkQ?YLB!uO
%,VZs^O8(\6Stgq$MfU;W',;^*kn#7KBFi&rfQ1G#]<!]g'pYFS0;:R3A:N3)&h$W608f,>q<H,EUubkr)kl2mgQFAH"9W;doq2Xg
%jAc_VD7e2X0hoQG&!ur69"1m5k_6a.;+>7[?sp1-nVd12^[]tPVQ"q9a"U\*eK"S=E<A8CW2=N-Nfp>rf?CmG*1Z,_4Et+6VhV9!
%Q]5_dBN5,"@5V6lKmN;#c4PbX]"EtgZ8RTrLj$k6?*$T!qMJ(?nOJLX.r@j?Yscm=7bUD!e3`"Q`%gm@Q".U#oNn/[,Nr6mL-<n7
%DD]GS*69P!5JA%uE%F&8d4iB50N=;OVX[8>p3kKG!CjOk,kCDmpn8qh3dSnA#R01!!*SZ`6X8Pd`8XZ0=PucoihC&0Vt-`FT'iUi
%DD55!$q`qP^=%t<9Y2?D5!jdeAS=KZKhSFiX-?Q"#`HjJg/;H`p$b(EroV<m>nmYgXGuY:rpC@ZAnf_2/Pn:pDVt9G<N^mS?ap!f
%F@CV$nRp/sJBV<J4LX2&pX*D\:lPOno$:aGHY?rlI5t4)%)_/;,c@bHn@P.SLumh$9kpJgAXROF4\FCCAu#L.Pp#bp,MkabhcQ<M
%Fp*LKCNlUP$p6-1Y1s75N(h%9OB%rMDkVbVS18P%O&F*3.pW43M+"%X4Xp'9[WpUhT5FUXpT5rTV3\Hed;m3u]j`NorsL%eT?8S"
%$nsq>bnr&\-V&Kd;,5+ZIcH^;8W[h8;.$'aN6\')[7ucr*Vb[tgUqQ)*Mg\*$tEHs#uZ%7;70HR&D`B@2TD4DK*AKDD<T4K,pBK4
%-,n(%!"E<]F=N2hI@`OrVh]'Q]\OE$Z5,<PoNp@cI&k6#H*#l_!Y/U3#2jBiGh`gdp"WaMAI#o\'oc6a.Ap:[;(^,^d_d@t];mRM
%)2cMb^,Lp],_fX0+8]otWo9CkT4ldk'gR$?/&pj\9I>%jGFs2<pV3S3oCl>:8NeC-kaN/hpnX(;G=G^l2D+I]??19l#eElWB=]4j
%&1lWZD8dhU+0)>m`O36Qg.qHY^*AO(6/o]l<Q:=@C0CB;a3:r0bA(Mu/M$6FHqaaA37nrjp-abMrLSoKcb&X;!KJV5Hfa?\P=k&$
%U[8_MR7p'B*tDSBNB(+,Q/tkY7@iIFf@;].R]B*1KR@m7c)rsRm"um:<D[ZsQ'oj;]6*RP@?f)<"4&fb1;Yn!^1O`^>ojO"L_3D@
%(jQDfQ8Z5<dPk")muS+&rT7G9m\&KfY.J&KRUfJOZXp1J;nOib@ST<tYde)oZp(l-.248\I3Zmq,^=)fH@KV%a;\)GOV&j)\^@hJ
%VQ5`sN<+\t6hKl-<Z<QP61QBa(U(-76%,&?S"nV@dOJ<BbU:2*C_MRJA*"Jc\[e]Pf[P4P$qW.1$YMgJDp19$8`Ias@bAjOON!Kg
%Y)^3]qJV7RJRO]]HRjiF"\O!MJ4&#bZjcuReJ]u0/EfR3K`q1*F,8i3_RGkcoXp&BjNV0_Y4A5(>oQ),ZlhX7d1(dXaaTBU`FKR+
%N@1QYdK2n;nId=(/Vpj&2\;u'V!C0K*jWOpA#*_$(Sin-&Bk8Sj(8mb:,YA'&QLHX&rVPkaKV_2Eg(<5M?H).,N'B_-g1q!30I:]
%H'FE.'&'?_a;N+$iH1_DX5jWuE$!?]$7T*aaN/?,A6!;T,pf&_:FS'D*Vm;_`Ys(QlhB:_oOZ'mc!'c\d="W]GDD!.iJj9U297G;
%<@5m<@:EnYnk>>u)5\OM!7]k9PuH)+c6Xnld95SgNkf<Aet/RBW9BI7TT[C<bX(f8aa#nY`[S-ZOd:neB-:n)OVr"3b=F%Xs"2@-
%iY,@kiOnbXQ9L=u&PKf#8k[a@d[5Nhbl+^;p0uRu%qVbo2PFm58BbZMWO529RA7a"ao]1u2fH*'9+:qWVH1Si!j[PXBb+@[fZ7T7
%"r+@kUIj\A9/_Sp^L/L6XIq:YMLb\32np1?hm.\gjgsudWV%%2&?V/5$Z2[4)7D1eI48^bSL5t:o\8dV^,s>>I@7\[#Y6W*`rZlO
%C7>#X(T+#[)4<d-Fu6LF[DVlMf5+r=?^mqK;JZh0m=PYkl?:h=p5,N+F1=Zr>\-uJc^LVI#2HX3M@epWf@f1b[O2aNX"FZW7eZ)m
%>)ubkg\HN$[KEM9Y#&?I.1e=p4<GNK+/La&]!2C%27WpV:Sk>icI"dX#&5>siB#t?+pb#/qW8Qnb_LM+8;!F-7JgtNqQfGE*!8[h
%#_BV=@G'[_)!U@'_pCOG&(fR#7H\,23CrgVDX#NUNdsN\K[X62+@q>n>ltRHTlSPTA-%A5_sej=S)/otcF]2q5@Gs%$[`5Y[fZKl
%9*-cViW(JRHT[Uc%^/4$W7h9M[c'OenpVee3=#$U?9cu2JQ+4($&gHc\B,$NNUteUD]VAV)RZNJ/\(Cnplu'KjaE*0/lnc]Tn@Ot
%lDVYW,L^DS9%:B3LYbOg>^B9n2Z\Ye1!P5@Su7T`&(IEr(]"8)\?6Ei*qQgB*%Fp_6UJ;c;)WX/-L\?iW3g#VrR0-q4\rE#3^qKk
%I2M]_-s!*FXm.B9WAi*.D.cp<;h:b>c@q^RRcB5#g:5!U&=O7j/Jck]^)H`gF2*-Y[N.t&S5X[@;')Qm1nP8.,8mAG]iHq]iq6@e
%S&XY_ATFK/pT\Fg`^#H$/e$c#@bf-sFm-YQ&!Qa3h52r9A.iLg<\!FFdd((8Fj/)o#u@ba/Rn)%=N5fn.!_tZ6:>^clFV*"Nkj:%
%(<Q7=&^rVW>iGV5c\gp4\=F>k_\,##!tp#IiJY/,X^PQqol'.!>3\g!#j=d,>q9Z'5]*P;OquZkq7&".=h\]OTTI]=6-[IP@3l$j
%bQ>k+"BZg(Y+WIG_^UhuLcDsI,-"C^\#J[)ZDa$O6arl;HJL*jCYpX/`u;*XmiO"7O,N9Z/dsN/lZV&b]j$fBqs&arc^XB;e+K]5
%fOO#,XsRRtC(KeaX504gJP[*<9c:F;r=`90Y-hS=*kLL75eZ%uiE-tu*hRj`2T*Xf=I'HY>b'8IOjcC]kPpM=@l^%fkQGI+qW+mn
%m4a:&BXER-'gt]Dg%0RoKn@8L93j!h@2!_^I4Wjq^es4M*'YU6)@(4Z@qfRrMJF"9V!s:DjbT?F.'>rJ3t1:I1*Rne8f%36j-n#f
%.=MC/3&uRj"?*\dEjZ"GA#W+!\'**4$@XhpaOQ@bEtSY0Q%Scoie%lXkW="*9Yn*#?HMMNq(1UeNNdbbMID-mUKJ(*,1)]YAcbpo
%J]Fce+5D:$f!Hh;:dU5M9;Zt?Q<-O`#R\`46LPN$+`9/nm:?[XJ0b[:bbWH$&kRk?mAS[8D?U;CE^F)>U3Ll>(iF@qY<V$U;Y1*_
%W0\L2`t<XWQ$>n7`90t$TLnlLL'kub(IJA,'&TWki%@oN_/T+I`feDe)BmCtHAG['-$H_+]C&&P>*T:&X#im/S5Dm',M0kQ`R;[o
%<Sbjb#$#,S=PUTIThN[9*!6oo]G4j7ceg@PE<rI9'#5\eD#Q9paCbd?X6_1h6g-sFb7s6>a^SXV]ucHNBpnL+%;d?G-UBmqD_tGk
%eQ!]M2(doDIQUKG9h82K.:ss?*#_=N@>5!sM/61a+ASc5NpHlj5LlB5K&)GZ_YqLkSZYjsO@7Q+Lu>V!I7+YR).gp`.4*cDL;>i3
%>&ri%e2U>*D"Xp5X&S/AZ)CX8mLqKd+q*V-+*H2UiSl</E5&fd8@/`h"gK7Op!BRp76rlnO*LuuX$./+)h8SVQ4d9@ob^*0LWb>B
%W7B<s\%W@tpc.9hW=Ja\`YkU/EqS'DQgMLq*o$/.O0"pD*l;].V3"__2j=4n;;P>UIOrbiRYDDpCo"ab%U:8f6nCCY+L0,C75mi'
%KB[Be9l?L:Qr=_sm06];QrK6LK0i-t/kOt$'uC-D%Dmp?L2K))P`"V8$3q(e",c'eo8!ab6Yo]Oio>C4)'3d*<UMTm*K+7'RZ(2k
%pe#'lAVnNW29fY.r<R-OU<+Xs2[:MKB;7EsKj;u"B(1=-Q;X4AV]jA['pqik5fD8dOq(t["Zof)S._4@&P)mYR/2]`WncE3Q2nTG
%JQ\qN+Dt,1*8FV3+i,UAU;+j:[GVOKlNM7"^s,&ll8-1Co_<bFGXE:Iai2'ah#.=-K+U"tk75nT\jmpZTj:`-=;aN=YS^/;-*:#Q
%MYm1J?hj#V(Opeu,3b&\ME5$Sju3l10mVj*iMJAp>fTD@':3,qQ)ghp/J;nIS:Z=-';p6/aMCgj$P/SB97:'kVe;<:.M"3&=gGtM
%PgfJUB_W@^*iRDjop8eJnWCDG-r"6p6clqmcSc\*7?HVIpm$j^UloJdR9NRP:RV*Z2D0DnXR,,Vr>q)P\poS:?Sjl_9QenIe&.\7
%+VRTL*lUHB@_flYn`[*08$T%2nGaKVrnq=eo%Mn<<D)js"6J0[$"S1L7<)[6I.#NHI%fL,Kgq,Q/>t(obu+b1Ch^HK+^P.+?Uebm
%9$E#./q&C!`I:lUbd"]4TE]/g>+Pc*_W\57AA(D1=ACG>%n-(-=_#IJ#1h-XP-'GR7IQt5i!?.je.EglB9.!l@:h!H6e-l+KRJeW
%?Joss[AIP>o`plV9iJ.gkdpGoHK=;>'$5u@$SgJHc!qF$\[+=TBH0I[f(]#Z^gPg%@/G&!4@q;r5,I@6H84tV!k!HEH;geF&^%$6
%(.">8EL.G@C9UJi`irRD!6\JGSmSa0Cf4SBO\TC\m*4;)dMg0p!L/#qQT%*GW)?[QEX%\Fdg([f3&\O.DliJ#@\`b"6[K-7e>6\l
%7L;&HG1S\a/bkSRak&K`Ld;CJ$2&7*Oc[@=?UcT$%B1Zd>"2U.<(?C9D;[a';F(D0aZ6Ap;aQhT*4dn&p,+_c?n/!@#$RMdd7gAQ
%0Sm]Q;69h1H)uu<o+5nu-;HI&"To72&t>mu)J&h%RQUl6hVq#BD7dlUk,l7q+?^0;=q;DZ#<Gilq*:H5V0;Y#K):MXoS@Ed387H+
%Na(hg#HI@NI>]Qfqe3M.M*&YNbI1B"W88hfho7ft,@7:u-8cZGbK@p,<h2K.MB:X7)\+<%nl7OQAt$GKCk'A[Be`fYcq-O2k(q7+
%c-iC.-01e9*3!.>F\3Z%*\8[R18"n(XR&,bjQj%+\KQkc>I()MR#^gh2(9T\pgq@Uq[s8-h`W/<?V^t<lTuRGJVbF<YX<'Kb:$$6
%17:g0O@9^'=e\A5)&C&n[rb2TTF[%K9"[usoNI2r-&cs+7L&OaJ16EKe8_JQIT-dfH%[q"8L0;&LA%l*Or>U38bZXJ-Br;?PGCC@
%G8Lt06o"Ln)(E@_A`U04'sup_3EB49:@lSJa=<l5cK[bi4Z)C$a<oj&P<X*lQ5?<-;]'0tl3c1Y\J:<O?)`I^3=CWXgDf)h/_B>9
%M$Urta54;m=LKJDr^o>6OK'#h$Z@FZ)DnE*@K>XTTq6oBUb!>`>uLY"KUKBS^%S;n\hgB^GL@"4q:TPc\;,ip\X@ap^g0#!_mU'Q
%\m#o]+ue2n7_&dYL\nH'O,bk0D?',36eG]t*C<q@=I-s=">puJ!Fdl'A&`A_k9d"LE9B6;`b*F:"g$'\pR9?7+#>=%gISrhH];`,
%mlk>!]5XtuD*Qe*`Em[j]=VEUJ3?"hJA%UfBTgC>fPtQ=f$g66_>_6:?RW]2^a=kdI!Ynf+0X9X_=a.1I.5^I3WI/[W\HPN3X8GJ
%dKSt/'K8ok0is_t.FTp(M>Nu8f`XmV+'=ci%SJL]]4lM2YqIuJ?TS5nR\kL1R%7\4][;?U[bZK<BJctUiI@_A6cI[i@'L+YPN4D3
%8POpf.+@a3@,rUCpP^:18ZVPVl<NT]dr6UU3(,d[i`h!GM6n\Y!tJFUMZYYBh+H(s`EG;:U)=]ro$\#&XaDbeV=T/jmiWmQBa+i7
%g&#ldc[sB%Ijq5)Od1((g6K$F@Jhs.,9OVidF=0iVrC]d[!Aif+]L%s__ULb*1<0[A,aW^q"RP`85%'U0aXq!!t16UTG4.pX=Q"%
%L?%^#gL\C[Q*=e`E(R[;/Ch'&%&CmP`%:6aWDbC$SlCbeBOh4\,*eH\i%kg_[j_L-]&tp[hWTMP0")301\t'+WC()b"@Y\cr!OYL
%Z!3!lja2g,!QN8EeS[(^A]`)LJDT2u'TA,901CfaJ:p1QQ_HH`[ut6j5u>4dc?o!A3+lspU'ee#Pige:a<b@\[LLPJR6G2pL94&1
%kQ4<9185_Khta>fUt:RQ@XKR(N:jJfcT+uaCc#ZqkN1B_jX':=//o6&E9P3N1I\'RLmIVdP4EOd;FdL:Of^p\P6-nAH-!f!=UEdf
%_UFK,/.iaa2B\UT:6Bb%FM2?M\V5]Qp*L`"9M2nfc(f'q1'FhN,=+/B9L9,5Y%5_%KQ&E%-n%JUq@uT$G6Pr;r\.I2Q6'-.YLJ3"
%=B8[c2I=qR-QV_&*7q7B-Cq<E^Hm7k#-k+2h5Cq@[/,qSP.?2#pGW0j_\N]6et]&hDCgSmgP_R8Sq&eIDG)5bM-L5EJ5ufF[us9P
%[g&F.*jMmR4V2)@)]<G9Cg!gID#d.PaBCI&,lj3?>+W%iW[i!$+!_10^B(:h;?d8p74EhNFH'i/$l.b:ZimGg+eQ-p@2$Xc[C#RB
%?ejB1\1=.m@2Xn7$7)mHkhU@s6>d4W:t3\DM1Ogq-m+S!$.=LPXi&-M1KfMBK)u#W,:.5\,e"E(^p6An`DMTAGle:j0YUDK*s2us
%bTH?LV2U[e9T,;Ja&M*=1YSN@Cd-e5P%57ZF:T'D'].Eb+:J8%TrBE3;$*R&D&<CB&i>F5eKHV\ATB7ccut115T0=HM05V-$?pLs
%&DsRs5U0[*I(`qm,8Kf^<0ebHG<8/?@#(McbpkD--Md)/lua3aPm'Q<,2NOB&N?&EjG1T=R@.askael1Q-orl6psZBS;KT0gEa8S
%i''>aC&Um+Wr.?g@:<4o9,K[2l=o.jc]DYQ$(`,e+W,4eF=)E=l1fQC2O)SmlC`tb>sJAjW,n_H"Y(Qma>0A@>9K>e>mNE!UiM?D
%"Y#+@(fS;:bi1$DMAsp0"JhA[0(,oT(4`^[`F;\S!;30"89e$lNpo!-/CpO7]Y:B]ecHX+j[j/C0=\Sc'o*MJEL,A#-,1^OQ%c07
%!M@%Nci_'NG;@3WH8IEm$qpcn?>1<$+coaRE)<H>clMm;mh?B9c,H!%@4K*m#R'QR(j+Yq^&f$6//fZS#.'ip67+N?BZ$Q.pt6q_
%oLR-;6E)96!RR!\.oJ5-047GKmU?iKJV!-MA^Rmc/CV,G-n.qO%>\m5P"jIB(q^ph3e,&_)R)`R93TR&+l3C@Dl`6EFN3Zn<Or@J
%]H9C&0JX:O`bJM<S-->6+`T=fiTp7FU9lj/BhujB,D%n;PYBF^E/C6OFVYsmlHm\<E3h;'MSeI;LP#Pq.od)%nY9[L%ZuB7B)""8
%gVZpj`]EVK5pCZl!aA>3"GLMh,E3R?^hG8293kGr*m$<qP")NUK\LI@#1dJ.KBRQY^!Y>>Jk3^LIZSj'"Mo)42V,I^9-iR'OmEJa
%1f-.9&B\`I?DJ#///)'@bTH?$_1Ghc)6imMeEkhA^dJ-i89UZSiE=$'Au8E_Wa68"'`BN>&dQUXW%tU?+lVFMQL6VnoS&7O7_r2e
%.BI7)$o94)`+'Y@`k0Viq?q^.JPtKsG1/^#)gPI\e-"T.VM@9b#7(2]Q/S4@alsUVpc@Q/o!4G*pRR=$/?Ohlp?ZF&E<UNc.ZnG*
%Wr/PM/6QbQ3h1/l.>,fG''UP^VLi+\?0uglUQ7^7AmN%=:I';&ce$2)QDDpPTg0B#Zb^$E>r?Y7=FrZO&Vh[<"_/#h/,$2,(/bsn
%29JUHT$EokWL"<5&]smVr,<UJ8cDZ49RV^0pL9RBQ90PlWIL5[Ch6.\1PTn9NW0UhbdEC$DN)IZ]7j:[KM",`qOu>\$OA!+8nkB,
%pS:HeDk#c&]_XLsk0drc(#G)pMG]=3$T4Z#">"X?d7%o`7mqkj7PEtYbTTm43BU_*q.#F@14k`VB)0!u*L7h7YJFJf@9VM3DUE+*
%940je+p2#'M:>G0lpaE^]Q%=$.D(4%jufu2E&0@W=G>uk_;qVad<F)1`Pcp0I0?h?4H:BD\-8Lj#PD!_k]8@hk/'%geRdUWOgYo`
%dXuiC?.Uotp]fL'd.sEd@[)_%CG8McC#eWQ,7=.niEb7)en1(=V\a/+9u[RRddKX$Hm,+D=radL16W7%S.*<FOm=A".P,QhG%:9I
%F.ZmCjR!H2!.-=-6UOR]@4Mk9a>,k%iH-CHjCcm[<i&OmgF8l(":7!'fod0hn6ek3?g5S!Z:,Q!+Mb1f'H*@;bU;F/U[eJr7I[%1
%)dVNfODQ=)@1+[\]i^OIg+@-^Qkis[[)+L4PSUs/C=p&nWjN5V>\G7daM*@h46!*`&nD\JklR6s?lV$p4;p\dX#*gYe>5UH`isR2
%?t!%$:(MNUT;U71j<&KW.Nf+V^PN04EQVe)boeo@m39Yu1u-X"rB$po*-Q+6F?so8BR7/K?W_Dc:='Kfa05iJ"'1MRr'BjEoVaVZ
%+-[==`t:+&%]]RBEn7Hbn'aOP(i2".Jr6MpgZl:?pCZOf$h?1FQG)%LEjmp]N@9amE%isj@oq2G1al[E7\A;O>L8RR'ZB8-/..`O
%ZWO$a7^Z$%\rf*udl_kWO<)4#DO05"\Cd?(7tO5M8:^@6:Z/DB-T-;D/q+o1IZ4mjRYiple-@nI1?'NlU'+F'8XV#/K+pIXA`WuS
%@X6En'Z;=%fM51b5?HcX;cl!sIoPd;OYlH<?mC9Cf6K*b^MTk1=g$a"m:@HV'V"h&!<:_2NLq>=_Q%?\i0e$afTP<9j&m_2K?GZ=
%;7%OjJXf7B=`i\<;1>$F[qtZahg[aTB<Z5^XN6)#c1Fj*_jUmIh+-5$jVJ:YJ78dWiK$@k7RE8D&6BQn?u>"P/)pg);bGPcKr"mY
%=?]1CHT*6]RV?p=3jo&Lf_7U8#O<e/3IBH)@NWRQRh;;H9Y&ukW5l>iX5-;%ZlV@EcAfFSptIE#p!+MK-eIKEl1YDfil`8[]?9(G
%)>Ts?3Ge3A,$fnn&I`pM(m'$233=O@Y$r_g>;/9Y1SGDBXtP78m>&cWj[QeoDJui,in9k;51\H$G-?P2">48/hf[CoG#pr<mV60K
%40S!(&#P1Z"4KYME]f.-EA.jSM14s32[7a4r=NpZ]dB6rKC9"-q,VI'(]!>lR`QpJS<q1$NotG7fNpiP/laAh'>9N#e>2u3)H0&Q
%VaS`0gu&<k.diA3iJ5),_%r"&X0/(+Iraq^I$.iV5(J:p6i?\*/:PuR8MJmE6hl?J]hph7m*tsOpW;SD:bT]]<-(Ah=b/Q%Q_'AW
%<cpY4&DUA`:Y%\3@pik]/KpfC&*CXeI6>ZRhaOBaY"8l0)?(1m-Bl:BLbmAmI;C*I0K,Tq&jF.lGY),8R$#XI[BSS48iOqt<X,'J
%B,Y<tcpNW(ASO;ZRgU+0DAAK?8X8'H&nOb)Xr>jZkMLUTjGOHA'&%J[E%bsrN!bbNL,afWfNJ>,)hfn1b#Te9[@BRrJ#XA9Y"NW-
%2r7',K-2"dVqQ]b]P'(+8XH=EJ+g-;>,SN%ig<fqK$"N/2rl.f_[>U<8gGH$N5A]?G#qe!9-Dt$D@>)rJZ&b]D9s1L;*FKiR=7.a
%&BaR=-HYaZ8Vju,B+rkIaTr7=4(Qm;86pls;ej`>8.e.%Z@O8))VCQKf/`bN`--TZWBfo2em@7&#oS)RX!o1KP5O>G#ll\*L(RJ(
%_A#!,&lO^!-OiDb7"8'N!LJE(4*Y8dN.aY'Qn2ZDhXY^b,iV>?F?6756shg!"Noik`[E:DmqVPN]6DW+M8+?o;m`)7pc:d[e;+^Q
%B1A4U,ci<>1B[CTiR%cR1loiepTI:(Bc$Z/CC\k\=%cA=;j6UMdGAqi3=3QqH&BP`Ol8Kn/ZcpA9:HYCo"i*AW$MjGr1GK->uY;'
%'KJejAI>TIfnP-d[OI%P&LJe7jOg96F_AD)/,KaTH%7pgE9K^mVb<]km2q]gL%]05rXGID\AOhOIqFo"aspYNk1i#gd*rUPJ;H!d
%Qq1Pn9Gio/FRY9G_pM)V@[M8r8J<<!8WYh,("EXfRY[.hJ8?VY0o3;N,n(Ad$<"Z-7PC0AP(i*`%^2"r=b?n+@;VC$#m@*4X0FD]
%hlrnDWtl;2Z;h-j#UtT2O@p12p<cG_1eiVPEo;!%G5g4tB'Nl1n]8,?OT8''9E[/p1k`^(aATKg$t]C!nZCh[FY`r&)GejL0qr86
%Dp'l";jTa3XTb@?Ck>8RbCjGd6B`&Sd$hUd\C5=uV"l!iM@V&1_8&I9/sp86mYR0al-FsNL'mTKkK3jh]H9QKaB=-e826LAh:ppY
%>R?CG4OTD#/nU!ao1;fA_[Afbj.4n3P1GRm5iZ5bMqZ`5(KtPi-X<K%M*"Zk2"S,jP$;\T=^e<;m'&&q'N.sk:b<GOkRX`9fRk4Z
%pU4nF;6@[&pe'#:p8_rm8pFBu)KZb*^!X3P>^)UC@-l;B9l"MdJp;4`pT^^dPA[#g/CjH;eMsVuUN+1MUhgQ/2a3o85Y`V$oIkX%
%1lD?/g,TaQgE^".?D]2Xo.$9=XhR`e7'M9=M,SCB5Qc+AOem)?2F=j9:V4X5Gsi*&(,KiZ(2G]o.mLhFa"0jNjGS6EIRWS`RY&l.
%[*DQOn%%33VG+TO.$cU364iquIE2DdLFs83A>cL2`!hbF.0Vd?aJ3i4)8+Lm+5b"T$u=8[Wpn:iIY^po=UK0d@*)eQU.NF5`3N&e
%^02j.N\k6b'NHDlY4eP\2!V.;MG[nSU.m$FJ;co*$\5F,Ao&'L'$)5T">l:O&S\%50#L71-W-pqFJs<LF'6_KNI7X+"4'%+Tnj/d
%ruTd"\osP@+-1:j?Trop;D307_!Vl)>em'!#PPq5DD4YW_>8&"Y90XL+&/.i<:;E:'R/qE8!LC`j+kUP;/d.F*&;$Oj6Ig=e1FQ'
%R/<*WFI/B^CW/h&r%R'DCIo,-2Kq"uGuqh%"_3!Dn5XH,,&4qOW^<bTgE]P;)UCjro#p:p66DW'8D/1B#l"a.>uVUm,YWno;@^mO
%3B_Y]%830+D\Q7)idR]l_`3Ol^gjGU7*2^elQ/frX_rSSU_FPQYmoJ^.?_XccQWP!n@R?)FEJ/5O_V3e-:N94`PQ5ZPE*W*A2L8%
%3rG-1>?BeC>E%IkS<sWURN<<7faf^KbOm'ImGosZ62kN:hHk;C+W6S-EnI@1po(mld8FhLbY8s3b=_2j/V4[.SWnY<J\)'6jRk&t
%^$1O[o:n,=@l]9Zg['R/j3m/R:*(I$WLjO\,_*nAb?AMF@"8iQL^1.C+qGsJ+!rHAScpptB%PFHP[n^.C-]+$6VgWX+5BHIe"_`W
%.Da3j9M[pVK),kP&\9!:ej/X3].jmMFi.58WRQQ&:RmH4er4c#kfV3WM-%KO^L-?0#>\%':g-;:XV1EP5W:,g9`e>1E/O4X,-pbp
%NsTeu$^;;an9bha,ABd\[M(hF9s+c&&?4DKVpm!6qH]+f-<u^`J^K[A?KPB7'BH$qRW)'I3$?l#^n-:A$t`3^YZVYC`H;:!p?:bB
%W#7MZjUG_8:l#:1V6g"]VMM`o@(JB`cg*ou%FVjN_h6JM$-VNXd"Y5SE"A&)$%O'>3!m?:^bF5pKJ:A98N"^/c\;*WMVlUR?OJ[]
%Or-"IHf8Hh11$gKK",\BiYll[Xkq7mlK#H/;[-hSmN$Nj[!7*0]-28#e7n#8#H&smIdj<d]gZ0@VWM2'fo>Jg.&19F\K"C7;\(Hk
%OGj?B21iXpW_XP+W<uHH8]9W;+Y6\T@_&_J?N=p,HJe5&L_TXWQ4'hafU0BB[iMS*YG;ND+bm@WT+dF)PibSROY("bJK\5/+$mVS
%(XPi6:6P=V,9%2Z(s!T*=u`*BJAW8`!Za%`rY.2F8Z%50gmo4D6o5dQbtqf\f9'K>S=ORLL`cjsdD1@Q;9Ehb3C?r:4tVG=94>Ps
%I!EKee)3p]h@*d!JhZi.(gqkC<afolAuD,PNM\'E`?CV$4+bt-k0jrfhM@4eh`"]m*f8UbEhi\"dJ^Xi*L!49:a*sgnHM5[-5t'%
%'kb.._@JrA4`*(q#W!))]buGc^&6JsRnPP8fcH./:3iWP.@Q5N&"P_]9\GfaJ%JhNgP6tA7mN*B6pSa,9^bi?bdgajEn%:H!lR1]
%q[&MoNK,kuLJt#+pl7)PZobOL6&eniW=3&Le-Hl]?qJZYY![UmciPo'F*Q1)18C46,3e`W%CQTZn9_JW7Lk>:LNm&A.#HXL>pb-J
%\NirQ0k45Me:LBD'@8T`QGpec*?l!o9\2b#m;X1t@-Ud/KJl7?&rDgiTq2bQO@V-M`(49;U9\:P>`^b`ZFEIM(3-%e*]tiUD(iP:
%\)S1A49k4caB&9iX$W;FQ2X%D+&']5;It`o&X#WJ:62:#bX8$o.Y#K#%u_@BbkV9nH].!8>5qJZJl_.KX^a==J';W-r&;pKTAe?7
%ABj9UPo".FShr>pI5(L&X0`=LEY^3JoH\X*;W<)b32pcIT#*`MpYDKO73O:cYY:U_[:A=]pak6NLo:;IjO<(5`T2hg,X<>MM@T1(
%'Q(.W]cb`[+?lfndKIbSB7':H"->?S6)J#"/sEu&GXLou]",3^dreWYgshqVS=k^*[kNfD3D!P*B:&9PbYS[mWaDSLbTR!(-VQ]#
%1b!Us^d0lbNL^,24dtYJne$%#']1=@L^ds]`l?`E#!K91e14(kl>5+9GV0*c#'.k"MJ>J@QT$!V75t^_@c3oq'u[Jfc:Icn)!p,1
%H+'h`CJWM]"_gQt3a;?B$M,Gd@Elc[^J5jZ_m4q.om+I)8"+d]#uHZjeU;D1qM_7[/^^b2^3k&.V68o%)hB)<!-SZ;<Y"1]i2E,S
%dP=%oTGPF)Cmj`M;?<?nOq9-nOXgQr`Di2K8`U7Qe)tui^GN(:5j#$g7r.f2nt:co8X5]3[Q_?BgJ$`S1uJkj5NMRfZ]cf$Ze@Us
%5EKHVn"1>KC6fFT_b!D?s6=C;G2CO"0;13:bj/^*/glK&',mubT/jH)46Z1jQ)::PJ])Ib%r8W&:i4s_X-Cn!ZVd6UPKqc.>Ki2S
%=R<*)8.<%;"SZ=Oi^p'd29b.G7)$o&A*mYdP0Z/9Z+rt@7[Vc&[tV%QX,<dQh8,C>H^92/=?ic>P>s-0XAX^TCab6II2'paXJ.k!
%>@d/9pZ91[i7^cHBdpdU%nU3Q(p$a>W$bZ$kOEL<Ih\Ndo=e8q_!otp=.p8-(RQSnl.<hL.fZ-%:*::a`5k$6WOjHF4Z^ha8)BgV
%RVP1dZDJ27N&LX%#_L3[U5]3ZT=D"u]u]BSiL,]21_,s+f"*6FZb6'/Y5I?4%&$pO&4iX/F,oHZ"g/EiR(/+(Z_^'.-:o.1pfOiQ
%mkPbnV:5U5AXL-9;hA\i62f4mHg#+bd,K#`FFbm'n=.m8eubc<0><Bi9+_RZP6U^82XR@G\C%X^'oNUpaCt_P/T]XEB;r%/5(K,L
%>*J;!RLstJ(UKi`Kg@^^.^>.9G/Jd_q@K,c>amq3CrJA<>-=DLaJ$r'>HSK/aC29tOq1#V)Qct=@W=4.>?D*n*cK8^&-?h\bn3@L
%`>,:m3t+uWJL9\L5SRjqC&"l(o5t@X9_QJb@hSKn&A+K08>F'S7#4="L:F!<M0nop/d4HtlAWGPjJ](XhVuB$7T8ZS<<!\%-ariC
%LKE3H81BPYVE/VBlhB(s)CK$14\]u$^uicI$Fb%T.ln*D@E9A8Ud.'GDN#F&_mB4Z9<,!]/UlQmG(C`8C78gClJ&)Yh"`;)@noER
%WA\b-EYZd+V'Y3NgLLhHeah@OIO+$UYQ'gmkG'icZQq-1c\eHVEsu/)Q=O)<aKIi:faCc]_h8aJ0q4gOI=jorC8bQX<s.&[2Q%(9
%.Df,lG5[N@?H;G^dQp[O+al'M;dsblceY]o$hUJc>s%3UXDRIDhL]#B,Z3#a6rdm9TPb1U7UT&E7M3ME[r*3A-=5h4(QGI^1\+k>
%MEDW@\eHJiO=n&%#bf/1c>#g_91toV;*]*e8Zb'&?]ip<N1?E:#06mT;B#,W!Z)d:_-XV]X$8=mo#UFnNCBEj,@+_'0\)t&FCW)D
%AJ^BWZuV#^o=40>Ac&U0LHG/_"XC?54Ds#Fn>a(H:%gQgNY&H)(*[KQ6n,JIclQ]1i72QH<Wcrhm@&mMXT%VI)VmRY?C9(Qr`L-?
%:[[%O?LaT[i7B(F+L_;X&b67r,2C5b;TtA]DZF-HjLPX<_!5SQi1\Zt#quR77fqUp1f<"0rPWE?aZLg/'8i1@"/:V+XM$=[rWIQ9
%ATJMN0jYS;cXZbml:&KZl05#fq$&"8#l;b7)G4Bk_UdKBEV0A*R7)1A"^7=KbH?k"'<ha-i]%=:XtmO3q^5+ROF.CI+dXA=0tR*D
%JK)j%kCB*Edo&=Q_]5`bf^U?XC6FY\JA=mR:T,+jC*]UV*FL@ZZm:JXKf5SNV:G'O$;(sTL5^]s"?'$&!>#XpRH$mR%,`JqmJ=n0
%>"nm[C//\'aBl5/1kbd/H&Ou2`!FkL`5!K'QIb@gL_![1"Nc:&B_`%LAg='HT$iFn[VQ_9WoLRn$X$n7pX4[;%oSsa,BHo4T5rER
%ns0K![;p#5[OETM#O3Rt_<d.+=Q0JuidHL#krCrJO8l<H^M&i@,;pYI,6ZbOL+/@*<r*?V0nkIi'LIcecuG^@KiOYXYYpIP5:jCb
%V;eTW.jS)j-2$Y&]+CXC#ddCA"g1a66KLCujKjLAWZBZnI4pC;&116VdhE'RS]3[l?]FI+eHWGrk#f"k)hJ7(kIAFXYB[CG5u0YQ
%B1qqfY`+6d,WTX'P'b*rh9bc_g/8\ienGTD,F?c*]:X2l[Ej9RJ&i(,CPn/RXN`;f>@ECFR#1AF1c;DsjcI"R.g:N4-(ubp-TDl4
%j+('`8[nK!8G`XM8QFOrAIYtM=^1@g0[FKe(^55Sb=)=kRZu_2J9ghuZAUDbL4D2OR>u$9NaQkg(TLOgAj9X%:[gUg+Js?uf&F(^
%YmX:*NK_@CC";Nn*:R<M"2p"[e]AE&?io"*CtKEu:D5!Lj@oEF$k_CL,dP+tWV>fD+TBDL6GB`G-q(F1A8KC,]nC7?;S]l[8#\ob
%;sp4e"$B&W8+"A&DhCsk-@jS,"8N0=Wj<n0`+[FG@`UR?Deq-h=GNJS;fp.pCU?)bI@USkZG2H*EbpR!,RE\bC"k!gk.#Mps(uQ<
%$giHB/iHjTIDI')!LYjjXb`.Ue4])`_a)hj<:*1e4+b?^SCW(P,.R<Vc8.G+(sJ4^%5iGBcY9^FfMLL/RBp!t*d2Oq^&euPjk67p
%';G1SgbcAd[-!DN[qJE"C=E'#>6(V(Ac9dP6dp'k*R%[Mg2$!4?FT[.(1!Fdp;/)B.m%uhq%+Y&f%0#ds-3M2/Z:!?JMGo!@!'Rj
%:D?F^7Q<8OM-IG7m#$1JiCI<K22A7i&[Tm+(fO_@.rl@2:h&XO(`3M^>7Tona.JHVr_.O:Lq8oLBRk8gV5^PbjdfD.--]-ma"WpX
%gE%>4.A!FMP(rE>3L3@p9YJ\ccYAH,.%a8DdAZ?_a!40?!P\+c]%P<iKRh0rf.c/%Jf_<Q&r]N@kttd[d)qh4R?F*D[2ng8%FoHS
%B/.^aHL37Y_R-c4efG"gc`O+/`]@haX04r7ZP(amD45<L7V>WVX>C6B7hbeLQul%+'6&"n?Y+,kat$&an>OGiMR61':[7KcVQP`>
%0($D__Ub8B)pE.@,:PiK8W,D/Srn"K*3;LuGCQBV80*B@/]1)1!@h3=WoL;"T>3glU^ea!,>H\eZ]WW%X>Y?,b*N8bo:`:H)tbfV
%O:eNf)QHK`8WlD>#:l>fo!lNS4?!%G\spl/9&4^*!RV(kk`nB`77GM0G9lUD?*JAj31D5FK^N/RP:m=PDfX)ZPjHnOYP5_7mN5>T
%6a.['DMUM&1GWQHaB^*kds"<bkk8iCV#[UdW):$e)!Suub+KS_4#Ee3m\B.%0Xl=qMm@"_p?<?@Z^C<qd%CTkP5AC`!Qd#C5IL-I
%Q9XW.#=lTRFnIW>I5IZr:Ke=0i2`qB.CsFuG"YDE!Y>>YdI;c$AD6DqX[s<R;rA3H^Cjo4k(?2+2uCBDe>hZDZi);/4JYNCSSj3,
%b[B>D;%ofUh]#-c.:iHrNm5Ds'o*/2V:3gp-H`?nAm(r\3\9jTmVoCf;[_pG9`kOKT^W1V=(=1@!i=PC'36>sR:=?<@Kcu^g'[g.
%gK=Lc[V4IMb+(FpM[DFs^tUgH8KZdTdqbGh!c*p1K6:Rb>MrPNa:guUdEup%MD\2u4aS7fetEl$JMO/l]g.sP,toDCoEK-:fsYP:
%aQ@&9UGW\"_.6XJc#>9KFXR@R`nEal[+`K>_0-7`+l\BQd8\Qdl?31NBT6?6%Ui-kM[u;Z!KJ,ajr&8i08^'O5AoUS_>I;Q[4[PZ
%`WW"8N0.$J6.p76r8q&\oJU_'n"tg#>3C<H<f6qU`@jA@!Wc0iGb%6b='[FZe!VC@VF^WJerY&E*@3g2L-?*n*'G32+PA%jXWcH*
%,hJik<(!EpK(;TB%JV]5/oT.C3B2o&17()6h@7BnEQJ(e3`BUR$8J0j%LsV2b/R2<PT,a1-k\Ok`\W*D[RYU!+=j6)BH#WB5^$$.
%"`n`"e%@n<a\qhZ@a7=4h%8McW!;H?)/:fDBSbiSSdgKAh$9AW.(a9iP7Dp)lXilq"*./PTYC9U^<`@8VAK`FCY]=V5?J/nA,[6@
%PeK!D]%TG:QP?[,/H]oq]&Pe+4P-n+qK]],bE2MKZdTO_io[o'A@J3?*8.Ym.:'/m.,p3$d0\8mnhru1U+l"[kBF6&_@4/oJ;FI@
%5kZ=X^b+r.CHd]q+E/:%j@Q0sHCH\KOjD&6boB[SB1&`VbgdP!6E$e6J'pbeG?=A?HiSkE'FY/r24F5>*e]6'!W+f<3Lu.nrJGR_
%)]ab]Z%:,'rcN#-l;l:115T7uHl%[u*Va#NR,`,&$<QH`LL=ZT2Qk@@=N7+qg!)l=+al5(Gb"*6mS,))YnZ)G27o,1i@pCa7CAUj
%VQ0W')mkT'Z3US#.qUD-jGZ<<XHQ\uHH.K5QYit^-3JZ.&#dCL>D_SXEYtZ]WP_;IjC)NQBIk:k[0omM`I^C[#,P"+o:03WeXN1D
%11J)a(U3(]&HKW8`pjEe,*0s8):k3d3M@-,ID%qTF.Ede)*(\`S4IPBW-+][:H/OY.&d:n.YmV+Em7@IE3XFrc,I;A)EiS=XA_V`
%Fjd-Om^@U-AtV<0>$>,4,2QED6=I/,&mEk,KN/oH*5.h:%O?)!Y#@'%Pse8S@0.8H!%5(uEgMYF.pS3/rU[\.'"p88b&FPF9K`"&
%Fi\/hOIV?RGMQK&J(?h)4p%WD7af;&Bf=Gr^>tdV*`ai@XmW8=7M;lR5I*4NC%t0,DC*%^Z?d5r+5%Rl69@@64hj[oqY1#9pYUH3
%_<3<S<qD>ZFaN/0-s#;]Y>MbR&D]Kio,n#.n,N6VJ,b:Rq6rTff3eMgFAgKcr?)(8oagdEANY>++24M_07#$RU-d]7G#*_d5Q9sJ
%rmuYTs7*j"gMHWU^]0?ZrqjI3s.G^6NAbsAQ[Sk3njgX'ci-Vl2t.?mER_eg-#N=LLViY05J4?Hiq'qHrI;cc]DqO1"7WY?j<*U$
%B]gJ%l%fmq?jCB7"WeR6^MRHgf:5'OnXf.B*I2oPEpDhH,h.R/?A!H_0NfLQ5*2$pb!uTGQj5XVTkO<'AR$O:e:.9CEr8_AO)-7/
%]Bpj7\2s?<a2,.?4uV`Sp9Ct#p9B&,Y^L>a3SH[*OrnN_35H^**Xk(#Jn`t&G,F*`Z!!-2O+VT04o?7Sc/ZGO5;nR0I.KT]_'nDT
%o6A$pj(StmZ$F">k-7"!j:W1oKdbcm;%fUn78d12Fq,(5LdlWuL#C+7l?68QCC31*m]AUmo5(qG!YDg<m7[^XP4O7_!.jp(><d/o
%JDPL@etTg(hIVhm%9_'Z:-1-;FR:STDsL("5J@mFXdP$D6SOsq^9dBTLfAVjFPMa9U.ES)m3=_:MlV#&)Wno!ma"O#9-T"Wf55H3
%7^/Yf>HP_ZO0$,n!,"gW5U@Xb_M'c`\$h1(kse/lX0c)Lm3j9P7^qg>h`l.Tqek7drTc_fYR]h-_^,_$\0aqirt28>/keJ@2WQhK
%,ao$ekO$FK35esHHYf7R\)7;rYT6mHoh%^TaN,7LcXb@p=5`TEb]II<M*RYhf3&qK"8R@a#prIo#LeYPVH!H<GUoC63ZTT-`%..`
%qgq'FXW843f@9Am]Ze%7c=ItF[^T?@guqVEWi^0"N4=CQ)!dSUO/X9)H+63^b]"dSbA(f^[P:$<C%oeVX8De?qs7V.g2X(Q`?UD$
%KCjs<)3:ggd$gn4h0Q7q<Z8C6XQ8fM)\)$O$N!P(K4^g)P/f5nTSJ@T;(.b%NOW?]B3&7iONDKb8fjJ,=1oA1NOT]K/J\TYTfcu<
%H,sd7p<8$VL'-&AL>#G7JJXVdSob(e2T7Gd<>ub1@P$?HTf+q/a5)8MD2'I")SA@Z.UK@!7[!Ur5JS1XhtKKjfI:A7%L"noc[5B'
%.op'7o?EKp!:+/Jg:eded3_AKb^cE4ZiAAaR1OEg=<0F(AD<rHP:"U!_11e6<o+!%FTefjIeJfCTHpSt5huch<hBUY,(kcZc<'*7
%>[]f]fO2p8UT>@E-%(<-I1;j7_,0XTCR1>FK*k=8k7%H0ChF&B]3<XW5c/br-YDP[6#Jems7]$1l]H<>F.IEY'?T`]-'/k6b/eA7
%Al1g[\hDE5IGUk@p7'!YV=L9;'RMU>"QT,VSKn?T(^;XEf-W`IL0;X.q@e_K(^b!j=ODYn!2FAiP!O$p+I?dRM9#r,\AJ_f1Va>5
%4k,$Y;s%IeK97L"\c>trO<6a'$2E?Y>h+s!@1[6]+AHB\&1o(ccfn"dXCn.0$dHK#qn_@>U,4rI<C:#)S+#gmZe#id'E&$to`:n]
%_XekNJEI&&oJXeo0QdNO.2`s'c3H9G5UfJMFLE8XTSJ>R_s7dZs"9p,=Mb#2jNmN\6.#@u22bbG=n2E&]:/Q-c7AeiOOc'72[=:-
%)WbtL3M<Fq\=VIq3.$sLr)Cp$I_K1gr_"R##fN,%f92YN'DI0"j'GKYWuD`."4<W_o!VpRXIq-!9cH%=/I0r/*UrHOeG7Gth-Y@[
%*R3/f[6j+9IbMIFM;?MnhL4!Mr9dV$m>$Isq:j1Eql[Y\MP[)3i'jh=!'GP;"%Bq^pJ#`.7?a1'%uL3IX`o;ijs_DC?pu7W+s12h
%T6(b[o+eO$9S6tp-8ZOg*4X*1ITVA/C%o30ahE,"6\J[q?Ad!OpGVLG!bAY7XI8SAY'aj;f0XDf:tp3ZVUnBs&d]P4Be]0k9I#f&
%-q6A*\/5N)c&t1@8eq9$a1J=1O<?D:OB!TAe;tcj!#f"b9msDe%_!SPN04BaFE#&qUZJ4Ip]-1gE,!Cm`\Xq$`GeJcBrRaIM,EAB
%FlY<G3oHHml\1G0[E9ZHde(EJ.R/aD6k7=dV0^1"eVhUl,337);'tI">Z7NP'd%SP2Sh;].Z)I98?8b[.WI9W@7ZRghb&>\MiHkA
%d,H2``0XA?!rCKe0@;hO=+DJ6XH"D`Id?I'9e]!b(YOti'0(lC]OVp#+ZNF*F1cj]TQi"rSViSbCos"dFoKh`CQfRZA\e#O<(oR4
%g9iR\BW3;Ac'cpn!FJ)jn,d7M.4%35P')p7Z[jfr=ZTu!l`#VS2/Tkbqif`ecq/&C'PX;9.206d/;HhC]pVDAK[LN&90ctp<Zb4X
%\Cq7F1qkEQg.&N9+@-j3g')"ajH=W+V)t[HK3a.;YCZ=L<Jdac>@_l:][s1_C:E^^\;!X8m8N51OA2%iG4Yk[4/JoBhAilL7@_'b
%GL\1i(Lu_67NH3eLu;nqXJp/_Ul,e:%g9.hT5-M+[_u#hc<G5lkE%ZMmlNF#lPThXJZS_O@/!.II7>DA?*!<eDfL76dR@s@HZ4'e
%@Iu#M=rqfjpa,B8$AF]3[I=W'HhgoTkSWY>_2s;_Lb8hBE63sRBaF9_D36sVeq6[#ft4g*gK/-i>/@Qu*\k[XH5co_7dTI=:C^k>
%I5Sk/Gpd8_O@mJOPEHF:e-lK;GmsmV>Yso4>`r:4k1V[sI6^sb\O"<iJM].X#0OhFdYuPm\O:LL],`.H#c=TMPc2/5GuIgse9^?_
%)>afjm]!u)mb"Tn8rRIsH2kQU9dbke($G=R9Fp9)UPR-0!jL:<mYj/C<W7HP+WfmgCW8L>?H$?D^^^slIg$j]j*UtG,\-T!/KWBH
%</X&g?'<6<RPl%mP)FL"^Om@J/>S)u#n^gf\1.kE4)sOTnP0`R7:;7\1:^1boLJ5CAfm`ti(\n1'o=q`02jkAng?<IBHU`sh(qUK
%&33qPR70r54:aP#+FO<X%TW7D7G5pE\m?4@(O2=taRc38_DIGZ04@JhNigS2"XD-")=%IJ'AbWi&J"pCE/!efdgWB]$.#PA:`"`f
%%KIe[FBh:-)=l3*eA/T)+DRDUhH`tfC9!t!)DBmD;9@h3P&cmsFsPO9k+o4K0W]PE[mIl/%$_G\h=^E^OEbf?k)5"'2*"H5MQhU%
%.UuQ;R$B!U>\=Za%$F*`og'B]2qhqnfbT@![9<g1BrAsnd&o2S4d\`4A)J(_@%.'IBg_Z3&7?UeQ_12h?L=OLS=sRuF*40el%q_r
%.]NtUe@IU>&E^-&\ThqM7Q/+;#Z;AIn4hbhipo%L;W6SKn?8ZlO6/*NK0K!7r_>)>X'ic><+*()!'dDFW`4FN_)=PWoem:Nb+_HD
%meg'""p<GHrHH?>i1n-G7ZpH4>.4tK^.P%P,M4rNKo.(0@@^-PJE%i??s;-+j+tUbHtoN,[I%Y#S;aCp<bW`OOZG=`AmqfUM49tL
%VJ9&"2eAFoH)M,!(XEF@+:Ie76kU>3auO=c;#5aXMV/5>3'9g)Ghag/0m,Na%_Kcb8U3hRVeR6unTNsQ4P@#q+i&`Dm\\'JAg;8<
%L"qi/9C0"!;C+b2fdPZHr`9'ZG'Z!EoJj&H24$QBC)iPF:iVde-fHUURq6/0_uKd:@[`[9$WS'\gl8*39VF`FCuYs43C#cL=!=>,
%8)e6eUg_k1^cbU,`U^Pcj#EEYB4S#NJ-$,13gkiP&1d.V!eC0[oBHY&KS&P0aRq!C*f`$/m(V6:;6+88/H;Mp\kq>j\H%c%;sM"V
%iT(;H,hSaQ:(QOrX?So=&sXBX8FPPLWdI+Zn1jE&/t4K&Gp(S+g$oV7Qq3[C-o_#-XO*W$p3SQO;G`V]].O`-LdX_.Uu5tmVdlP0
%G*7(6:u"UT9Z8N<otd+B7UVYfGc)7(6W+Y?cR8W$"/3P'no3Ds,<rSeeSU=P7D<-1hLckU@Zl+a,:V>^E-`^Y!5uZf2,6fl0@IuO
%_2`KEpp"5nlC!\!?agdC(LdjQbJ)(t_C:'Ydg<01Ace)%@u/>G1muLjg76"!W,+spC`laQ2k@Qq'W!RNatDTeP]\>+__FbaosQUr
%=6]Ek9VJ*&\9le\?[pRZf\WWe%2=:sXPtr(\#As-''d]J`">3PO:LZ]CiTZLQk<)uUM_)PObmecAC$Pm?mLUB7F[:e6"T!J#6XEj
%T^,oB25,enN'j<`K[)3'=?61n>*0X%p7>0MfA46p+-LPkWAX!Yi)8&L,j:mT&jZfEWogt2[6P4WI^M?fhuL%Hf7!Ke',j2@+klB%
%fuD1h6rnu(LuJG5%8,2h%"qTs(Qs"Q)n@L,T3Q`YOD4ZiFh*.=N9S>AE's&[QP&4,"LcCjG<8Ce]!fk<j3PC^-`T^?Z9ltU)YGi@
%au"/:Fh)[&"0ae$affHc<4ZY8%V0`jBOoLq2Y]@*c4pP=EmX+`;$p%?,XO"oF)iVsKLV7@^flf8@;ZrN(P8A4\0)KH1eu%QXS4Bi
%ZX#*4r9kQT<Q%M^TsJ2ZphA5c?gcX<(7<%<7l(@9`cnR0Agpdf(=]uL?*s()&jM!6/MT-"!<fq;9\$(KGhA/9dAaK.ABbgE7RdOH
%#>e:%?p'CU%j.M],sC^M7m][`k3lS+O8=qaCeu+1.S*Su?>$kBp;gtKRbOSR>Vtl?s7I&CI[#3PK:K0\rV(5[\Gs$fH"Kt,Z^uJD
%<nO0cr]sF!D?MF!=&2EqHfeDXZe@=NW0L]_<-VHc_@,ZOTCnI^B7W4P2#_qiXF?D%G+8_*m*rq*_m*-#b:WK0jFFoV'a_tTJ<&4n
%b\Cd5(aG'>0eej+JK<('f/qg(N&6URPGE_#qq(4/H^rX3l:Aq4lQ#>;[XL$)GUo@'pGK:$?)[+^$n?9U29HS0Oo7%gn3sQP#WK0S
%Tcu]dOY=u4@">JO:=mb%i>C`W])*!)GaLF:=<ti&k;`;Yr%I2?*8\,lp9SmSFWBH8[LMPIq!&n7Gpo7gpJnQ/?)[-d^t\C/OoNl2
%Gs^7<.sdG"k@$(TA"%Nj:'^*0SJ@u)#76q'bA;pIT;?Fe7jB".DB8m]0Ib!BJN\ZV(o$+8(GRRA<9"@_D$^=cARV$)Pfn^f;4*:Y
%OuPP8]>:0t\<6-&*U*dM_I\^A1e\lc<5pOTmW<n33_EMrr.%],@1b=OF&FSd?d7R7[n"&p%iD\4q&RLqL%DSk;-YaiO2or)![[(s
%I9$L=5gRL?C_--9h9S.G_-=k,6V*2h3B@Ij6:;pf3B9`64VP<XlA1b7f%kjaF?tMkJ-c3I;LA$lfI*,0!shu`i2'flb7G(8\mm$D
%l<GZ$>3nGM(k`OTU+tl/,slCPIY*CXc^6-n(Ys<K\:Msu_:$SMVA^Na&e\`^f,&D@1J$:^+g\aTX=16j5UOB_U=6'b$UX*NgP0hO
%VQMbfJ:J[`Z=d0cCjm.UP$L5RE>4meFoS;2Z-Q%E_fJaC(>shu0Jjfmn2]M[Wk1idZt/V%S9?&J4ki&F<WjWR(L:1#;gIT$D15n_
%)sAqbo&T5?`^JflbC5/"#TW:?)POVP`3([Io50TL3U6r-[RYW87g:$t!PYhqdq#Hf3IBqsIBX5,EnWmM^NLCpqnqYpJ6S*"5r<Q=
%c#:VX@R=9sVj@_7\<$O*>fFKH:^DUQ\n)b<6TL9*h8*HcH%[oN91r_]Nm8$eN(^1\A_eY*h$,k\p^p%`/^h(Z2176<hgK+`=pRb$
%CXIr'JNLCWJ04"[FtV-@3NqbdEtJ+>82L;"*=+OL'F_<:)-SYeTL<1?!"oRi"Al_k^uoN)EBOBIC7kP[',G*.JqgL9P=(Q[nUNID
%ojc0:80A/W)HWmHRj$ktBnADuhMn&Lkamn+?&59\?=JO+!gluh_1O3\CCN]modgpkJK3\h8Kn0H?g5-%Vg?K8o6Ga+lpY_;d'A!3
%SZAfegS#(P,n9p(91.GVaE.M[?uC[tLM/oJi_(%l=I(gC1m;sEJcs1##`00'K]7&AScMN=Wcg)@d#80<8ErH@EbWH8JS[K]W^KK,
%NXc?WfsaI]D"]se.t!i"Mm,fo:FI.`-KBJb;2/,2+orGh!PsX9$]4H:AfB-dr6%MbT-Uj_/\k`@`:,CK#ndP\@M4g/0hp8j<aJ"h
%M5u)lQ1M_*oTS-W$=W17L-q;d"<jj`MQrYO0&>.(9&(oHP\>Yt4\_/8iQT[u!.uC?V=?eT*"GRDIBLpfbdAKK8Uq)D>!ri-.mN`1
%q9(#uK6Gp%%MmeMi=>[e;Xh@"Ds[0eWYtE?/K1;e!A45E4*cbG5`8e*5eI]V%mYSUbBAKS!uaf"(b2"F[/n[iBR^!o"NPtgnt7iR
%\T;eXNf-TKeid-9(f8StgjlVbeTB=+BAN11irR&#aXjsXM:%ZFa]$]$jbbc\_h,erbVG<u)5\0lUdS/,-?9_M+'bV>o+<,9")@U)
%:`Q`;n<C9OY\BZ6@0acdB?B:3"#l)jL$_m:f]$j@W5744^#YjBKr0S\.t>OU$qu)nm@//HNu'R!GW+=@N)cOR%bbVkIqt0M,eHP3
%i&4$gCKhkn_(KObBLZ]QToTLYZL<rJ]6A1'AF[R%qGF;cFjJgG%o#;e8B\njr[M\@OpJi6f>rKALrCL;+)&d7.T0D5Cu`6/_+VU^
%4RoAnTOINDe7DMhOnF7?'u@+^9pDM!i;u%KVHgK@B*jO4<'mqO)C=#%=Xk=FTL,V#rGYkrC'#+Q^S'qQAC<dqo/+j,D@]UNS8s(N
%Fi)$n%jkN*1WQBCQB^*<.%H6)ifHC3k_2KTf#\b5=&sVq-,Gu8JWqX-YGgT':PUb;=;#=$fY,Xh(GcZ+j$U-?7FooB><t'-K<?I1
%<\3dSne?b!_\>Ld-.P?WHeG3^ERN"ZfO3_Jl%Kc$.3FN4j"bmV$d).r0Eg>6>(M`.S>P3c%s_g$fAs(*a=8"/VYs"78]Z+0i<pf6
%77Yi8IP:$6TjXoE#WYGeIqXW/ApjK+fV?ak.qX215bcbl@3K?gE\]0GfB#a*DHHmG3KHW57-_cO*>QQPnjfH!)bt<1.LN[#NWoYL
%.o,9&5s\YfGrd@PKfA^d([+,nZ2Y$f5-qWF;6`uI+,pWGAD9rjEQUg$+,u/a<r?[,i\+&&&C3e+eL!GN!R-jm_AXfGfNAqmV3\5K
%Iu:ZQpH8FbDMS"#+icbGHWMncB*t)n5@J!R1$r%F4i5f)VFErZ7IFP%6ta;gkWD55oG_M]8@^G\Lj^',XCUdM="9/V_T3Mp.S,jI
%Qp>L3dr_J\9bRQ;1eOOMAhpEo'IsR!_e>4/,_7E!P;+G#(J1\/&D*i?V$OIqb''[@&_bmBjffLM_9cp>RMKp,lAW&UgZ.)rrYnld
%1*Tl2>R)6<TdKitD4%I;qAYBQr)O_:`L5F\-jgH_mh'@\\lnf6FpE)-VI9;PbG.&pn"_YHc]BW&hI&f(^GRN-*AMjiT+8Z+Q/V1:
%CnOY_NoBG(Xc>8`pq''7=bA_rP,Dt8=76oWZF61gFj*pu&QDIcK$BI0DIq=##$*4F&=;7rE)RIR-qLlZcf.?7kJ3g(+EYU"]4FYJ
%)E<@C62E0@.Y>]`,OA;>5e<@Ch5t+KB(5MG5>4uorM6\n>4j>)l16s=>7q\j0Ne`0(@nS-OmgYt-'E4B,$sf/lB[>aAP_NW&2%:H
%nQ"$IVo_b<:$U5_ksBJcek509dN(/#'gfii#@hWe9o-O@=J9fBO0iHrgFX_(7`p)Zn[O"B,=,QWaPfPtEU-uCW`ibkYUG$)l\C3T
%DlT^W`i94%fC8>XP/7=^PC_)U/15D)4)!oFqH;o\We[;]!=<nLH.^W(3ZoHE1o7JUODqde/TpqjaP2<;gra^T""F!/LcR#D_@kCn
%5t=>32OG[fTC;-g;+uJBF[/J$@?tIb]ir9?'mqioL$_@[BK99of![3X)Y3$[VJ>bb53g'Q;i95^?nruY-mB?6k-JTd,^>GllhJPW
%mBj!U)teV?PKSBZn)?&$<Hq.MS20-,N4RUs)lH:"?SSg%D[M`%\MNm?As?ikiE\bGg:K#\EcYJD)'(:mdf.YQijFQnmnI"@%`YW\
%gUk*jVlat3jm@#LgaLXAgrW16WDB:4%sLDe_?lDKqI&1K4`7BkV.keU*/'leQV10o=nn\i780Zdq+&DgXPl5DUV*'9RFq/4:teLM
%d4f\dI.=.@WmM>2.EuulL(l15&ca1QAC.XkjjLN8O25SK57=R;\s]0i(k's>6etCGIYG[NI5=uG;]'B?NUBuMOL)c$`7j@5>!>Lk
%_'459KR)#8-QR=-/IlbVLVbj^nuH3"H.PSD49\1T>V94NMs5c0e>%.FFd-h:X?pdj2WW)obM/Q%OJ5meNm3k7S<2.N[5_2gP"=^R
%;pCLQL2G_8/^6H]OM&`R'NpiuSn7c"SrL`6Na)Z.CH.O3Z:ZuK)LJ2g*A'dI:in!#7#cAXE+H1&O!_[8C)_^"XidD,:FVsH2/qE_
%j]uY/k^`!Fo1]L7NU_S!B+(d2g0e_:]hPKW1i8.\S\q<0pSo0:PK1%2@",d@b*)!YldpbDc=h0BS(G0uW4"R'Q7Dj[pXa:FV6K*"
%O1%;-%#*5KQ"7^5%@aIs%[8Qse2Po3K$S"R@EFFu5on/e(;8'4ad3(apaDlt[_4@gH0\TS\\0[&fRlX=Ar83KT"E"Vd/FQ!nWdc?
%&a\TX62"=(l^\>3^oL!GI0pca&<Y"`L"esh1p*@*THN\ELX?VOdLJB5_0>9@r$%`ffqM%6pFenAehXT3WgVGE>M76-/%rX][#,@u
%4'o^G_:5FG;sF/u62?nl\pXY%;Oj)`P\uT+>TF'1/G?dIT'[26q;K<t$&2kf_6'mu&c5rR`kuU*d-*gPTadlUi)LN.dX5j5goTh`
%Lg+uSLuYlI?UgpNNEmFIbPt=.^"8B",KV;'mMS_8f]iMUlti^++P7[I"^hH$!B"32:(>]+?jrFU`bF^Y]dm5$9R\*@W>n3>3kAdN
%)_9n_d5[WIEGM"_SHOo+H-NaS46tC?`AfILHa`d/ZZVp`/X@dR?/^ZO21#Jg/\=1]XnT%DBZ1a/CW-1%WE(>8(@FlC_ha0a*NX5<
%eiM)7h-2+oYYU$m+K$d1ot*S"2UgKbgmdi*>oY+Umm[HTbH-I0ljQpTos2iP(&<;soVuc3hs,^JHHui$ruAGH5+e\qo_rT*ga1ZY
%8li(*oA8h(+1[tRe^H@KIYqO`;[:)q"KS,lFVrt$Y%iOqnYph7&N$smd]6P5"/qUD/6D)YHsn\Y3[>q?mO+J.m_.B>ScKnbPidG@
%TKrJ'QEaTd4,+]82N3:9p5A>:L],*5Z/71B'(<:;0XcY0]nRopg^il2)%PE?B&%;@#GY@9Hi7"<o61#EC_sjd[,KbX(1TA]8;)57
%ESQW"ia]=i,r^`tBH%`Bp*Pt5?frnF/aSG;J<B-qc3S0g=?kb4/3^TGns&h!Z=Iu8OWuUf?iVrG#tL,+Eh0`a&49n[jP"\Y*'l))
%G_TF?E3R00O2t,+hI8]B,%Wl=Tm%(cK&&TkdterKV%j0bWIq5f3F^)Ha.h1$DmK571cq`qea8J6=duDKnI-Hbj&bW@E8B'_9fG0b
%=f'r!X0[s#nnpQH]RSnQdr+$'c1L,V*99a!V[4A5@sQoK#NCl)3U_pB@B;m=M,h3'AI?I=0Z,[.F9TLVK70<VbK0mW)B9;VGJs35
%]ImS\8BNa:c>k.bBI``<<qL:/CZ1Y'B8tj1X=<R$&]+*XS=GA/6r?sE?'/R\D2qo8p*Qj?NLk9n2:_)V($SM6i:2\8(E5^tn;UXH
%giPoUasueuog4Ctqu2q;LA*?kGM7D&[A-:]^r7SZ,:On$*N(jti<"Nl9u8KGX`=@?b@-6caCc>B?g*&.C#np"oj6*mN4(Md-lYQn
%ih8`,P$k&?fO7/X@T&6+(+G25miS?Xh&E=lQ&Ys&Y];38,)B>l9_@sRR^9S141+l3fO[I8>)=T7<(aS_fW8VI:0`+'Zj(ObXuVfL
%Fmrd*F&t%$L8,h7dV%()p9oUm^WK%Wejs]$h9.4.Qdbr7DS"<dYi9LagssX*G$`e`+",p566SIN66Uk`4iYZ="t()l!7lpG4UM?(
%\3E>_MP%*(k"oH(^);^CF_C$@QVGhUc-mQr7YnC9Z$\4'6OSB:jF3$a\`5"hOR!IO/@!)'kF/t.*PH>HmAK<r$@LYHT6@DrAF5i_
%n%-UVAh2g5_aDuPD.f.41Rtb5Qc\KLX=$f8Xq,sWcXaW$>[`T$`bA"&%6*odO,W#g?1/XrGVu6&cX?O<oOI%/K))_+D9T`o?&Y"p
%0>!S<:%hFH]<atW?.N7B][!(l_e7f2*^,b5NOp+]]?Vr'Nm>t/YOZiQ<p$B_mMQU=hm"uomZ$X?h!Q9!B\YcMlUNLU?.Q]e#:s4Q
%^"4Vg@bW-oC*1rPmn(4ej<3PWWV=]/cj-QE$Gb(c,i<AbqQ@SHN:N7s7UTRJo2^'1keUrq4=N5Ph.h2K]OHem:rrWK'7&R(n=o=-
%4"p)2e+)kq(13-KQgHj9JuhX`gsni33j7>2Lst&?88=<KF5jClGeQ;5gS&qbe+)ce)#[.[_)UjLZon+(B$B[n35Bk&.SfhCh[#nA
%<<p]bb3Y(1S3+C+O*l^9mZ*$WK"5l&,C@sd*WHNql,Up8VbGGnT#Kl.'h$L,<9#JKa@?*-=Nh]ZjSo>(cA]DlLe=EE`?DD0^+%8E
%U9[&"Tp63@"\4bS:'X`<QNbK06MVkRbKc7#8F`Jd"29geQB,EqLP.^<`t+;T66IEYK1cuu_eXt_S-^;<^`P)4D5%GI3>*eaAAU`P
%#Xu("^Bj(t_"7]iH;/hlGt0H0=n?C8:Q\7)0"We[e:9J5+(C\[7YW*$Ib9m0gEED_PMV\C/XNRt+M<aLS]e1>;FR8)2boVM),ul$
%Tt8*R88U;)=eWQhOB5!?1sjt6=kiGO'-]pU(PBA%8kc'!\4B/$hZj2fH3g`eWHMP1qF;57+=`r>,3Ab,\J](T<n6>ldZ7b[)#$L%
%Wq&nmWU,*[[khM6-=gWCBK00J'Th"hk.$\aLMFJj<&fN0e`eWU?mF^8Pkp+5cZL2bg1@4KKA.E6-Ku:R@KH\0Ml"bX='=6b)uuj(
%eWe:,/*iSH/qUf,$QAZ3fn#!m=o;:gp2'F!-Wm5!e3nDtDj8h5)sb".T9<(CC)PG*%Pm9iFh1d\K>=>)]/Js/1b"&F0EN]2LjBkK
%a9iBiC`KT48XMOC,f`H;TS_7b?LLTX6Nf06oehE!Wq]sE%L)%sVBtjZK@E7SZb"_V$RPcNKGJmAeF,f*J%'!!q&q#8Mh)M#Bg9<5
%dL:N">[oVk*C"?\c_2!YJ9EAo*C!)_deUd34f<"'I;"1^AVdgP!I7p@<=)&UR#Y2NFXBd21oH-rRMe>A"K-!n:!et!1r7Zh[\a'p
%LPTd8=c=pDg+jnSa`q.FDsu)n^oM\%HD1^4#TKSRB7a5dL"8SR#]-].n]:bPN&@/U_[dEj/rTf]Jl;]FAW9;<XXuJ\qBq9rP+&dd
%!A/-k'dIpVojr(YYPA;f1(q`==Vh<9K\5["#mZcpe\C9gj>V59Y1KH<3UFu;9i`Z.nI%LH>M)`K$hN[ZZYg3/oB_7ZMYCC:JUnE*
%NX3H2;p\b+!4E&$GKnA)/[[m]Kkb`Wjp%=b8::e&&7+n--@Zl+*b='E0s@jAL/+HrTWAOhERFKVfch91\3JA:WtCPM<Z%-d0Hqmc
%!*dLA$_@9]-1CMZ/V">[4bgA\n7XZM[b6a;)R4ssKKku&UpN'G?GiHkYhA!^"(VCG9JDmmR=47lB=XBL;d$@5d.B%C)MT]#Vb*$)
%-t>c-/Ogj#qs^mF3q\Ug'_hV*Z=H-^6cO).PH%i@O;Wmu`@;\*l5^ONG(U1-0gHZXM[6\&<X/8Wem6s\UfhVICM%?)Y/>D$<:^@B
%BhW#_d;OV%(_[T:oX8.4"(Db"HlBdr5"QJ&m;lrY'u?lGYmC_\"Cm9hb;L\S(6qebofd;N-]RK:<,[)M60J'O;cENO%#C2:#'P!t
%Z7Jj\%W(3O8+M?'*$@iC#X7cRWo"0#A_d/*aYsK%"na0Y31Z(oC`U7J)W+nhpWK'ZJi;Q%"p<JY<moDUJFN/p^5cb/VH"Nu3[dK5
%8$T_u/.*HS3tGjCo1k2.<]/8P>;Of'"We9%+^hr-U'u@NFppC7mt3Cu0&A)7\5I#&[Cqj)C"q.q%2kjHFX'*6$ik$!FV>92ddV?I
%S3tY/L#R\P)c\G-\t9M!ju;LCZIoA:6\_B+""m(D=j^nl/GFt`nqUJ/1;)@Zk;!U`17Us,=P$brfV037)\ft!iG+M)A&=5R1D^&_
%XGRNoKl(!:J+m%En3?sKDu\-Js0'36]>+6DJ%ka!^]14Hfq%!'fSAceJTBLjXWm,UZ$&TS.`caiH,#'kG*dEf8`;R%\[`;HK'F\`
%'1p$5R6tSK_DGccqdWmecEl#p:7>Y8ZWQW#l#s'Q)@*L?7*9liq$&Q5kgZ:B5p[60+sRhTGZiH&&:BA`^a[#p^dmg(_jX-&?>K.W
%ISb]^ZHQ'HMb"0ZD8BgXNZWLQD$o%'C/\qu#&0gX$8H(n_`R[%&5OaORSTF8R(f5(SaqPEOKkM[U>4j$#'kce"02I5JO,LIN[I,>
%)-rT9-JbTkE^/Z-o(iBCoqDjf]Nr]LEr]dQ]Wjs:%RWS`6OPN)b>'Slh[EFT*t11#L#>!G2N,9^4q<UM0F^gRVu5GCU/s2W>C\be
%9n:lRJeCou\B>]2pYbfK*I?r0<W)d,Cot)sc,sJ)V?IlZc424o5#NaH?uDc(BO+a"mW_FINiX6JV//4C)"=m%\0m4O7*fm*Y"Sgm
%C5tb'!?A&J?97=c2a+cH@;)/B[;'O7kbb<-o&6FpB@Nf&<hdY.]W4I_eYJ=jd".Ds(lWOH^KJYedf:.`f+?$q?XqYjZ6\jn>/ZL/
%U$Z__>r2@86Fhmdqkb-4/trLPg=kJ,p16lNgM##>?K^)d71Y%l#'8AR<748aq)('I*8`+G5GH&tRalYY#oeX%akEnBBX.FHOtj;P
%+rC^K5$:nR037SeHfe$k.2enLUu"QlCNtpoLoa]:!-X4tlc@o_#(L8V_'>dg,PeU@MQB:)9e_un<e(,Je7tTVGCJ51j.ro':HD+^
%Y\?u8YAuU;)V@U<j0l<)DM?BA(])54NH6fAg*'n<TK;TRXLm%D[b?MZQX/XA(&)Pa#EZ0`]6n9:=S(m\lUX!eMRB<,ET2e]0/%#B
%Mj([4:=fbCS!j:-K6o`#h7NA-qrjRj:q,GkNA/<=D,HsurE%6cVuH>:R<;jAHejCu516r2;tJOZZa7Hl=3Grj%&`-5"X0aiq#m6F
%?gqo!;@5%/0V*U(+_$K]gnI8t(69G3o(f00g#.;&"@</+-0HA">!VeXld;jk%q*'Y*IiQY%%^Sg%JL[rHiFRL7i)MR1//<d!#aO/
%+BHHDpES6_-POIKGVfHr\dR%OSgeB2K6m:'KSuANBtNiFl$0)8F]T$%h1b\h@2V,TYD[gS$tSk(IT=f=!'RA[j3)\J_c<;2EAV[1
%F"_=*cl5uC&/0hu95"`%m@^_EU_9eLBB#$]>eDZWXS9#X`:i\F8%dI'Z05Q416\%.V7O9<QeRk6a?[\$rXG-(>#^\N*cIpHQ#/8f
%).r%bpT[pB"j1MpN"JZh0[8OQ^d'PtRRSeh'<<g2qEVFEbM'Q`e,8_Gei_&D,qMY,9ef<tV($PN$e9N#WusX6E0@Vh".@#j^5gR:
%[j)Ra61Ii=P6Z13?hN(tAHoX#Sm&+.G'j(?b>s,1#OqKL^u%)9gCC`C9Cn!n2BS=D568=^J48^:ZilUDKL!p`+MVoejhNqO<fl2d
%`nFb)!.op>a3t4=XN(\ko&QJmGeDO3[dN#AYlK5(J0,0W0=1`YLmI1F!Q=eFVEaSS0Ymi-cg6+[1[E-a#T%rudfo6Hp$d]s"n6"&
%r)`rKT`sqB*[(#b0q&'[(I.u0m9]*lWMB,s!<fh+3*kc$)@t/D/:SbbhoG<^4'_abb'SfYnJ>F/Sr?X]&AU@8!H)>ZbNIlCBALa^
%_2f?#@g2d4!IoSL+;$';&-)*@M23T>=/qeX9*a)i=-7dd*]WH%R#)@\]$'m!r6gd*m&>*&co8k_6/X#>R8MD-=:^<TnJ=B0s.k"4
%-a2g9Xt!_3(mB%PJHlm'@#/01.KidL7kTsg'\J7/bof>2]<M#c1tE+NB)EZ%deTN7MSr1RJ235jp0AbP.e`]ZA=Y$XEE\k;CE&>H
%n0L/a7q0740PYqp^i;)BEB1o5Z'0V&A03ndmr0X!T]en91r%UBFrB>U]pMB1=AFu[qc-45-M6HOHW_$PE17TQHF%fk^]K\\aHE;d
%a*6*CalN3:f!O$!:V/826gJ`>g(hS$G=TVqlb0B@VQt[kM01u2_^BU3/'4=p*R3lG^-B$2G)%_e9lSs@^C)1gjD2^VNng6XV=:9<
%rT,L9E@Qb:9iVn[^d"X'qT1c*cR@SLFVLE%d[n.l^Jmc*CfE"bVu]YX'`%qYjHCATXsN1R'<atQJ;EdA;ikHH&t[^3K%:(YBYc]k
%P;/=_$:I(n_8qS$o),kB?'q?#jX3s`U`(j@![[@:O]DVS_`X1Eg41.kW#n9X.C&:QFdPHi:a-hj9I$#P%nNdtZANe;)9mC-=1&MR
%)7gA]T:p3GD8C-el\;Anh%IbhJ4-t1A_NtAMJ(ECgB5Tu&*YO147'KcL&<W<[%S3#P@jaF"(&SE5\$PfBI[;%,=mp`X`(;Sp5E&O
%8K5Lp$MPp\&cAS(k8OGUXe36>]HLM@B.W+lcKf$-?8rc9f4CN_C*L72N+4HccG5MqFm`gX`E1?PMK-cqh^aR8>oN7V;Mq[;?tce:
%e(uVh&*k`G:1,YEU>Xb\h3?l^_c2!SeCB_8,R5sW,"q;rD+9tXO\e:\k%3q*;Qh4^g;Q#`UF`*pM[Gk<7c9m'g;Lo`!>^]#HrE;1
%W&;jGeOMo-cqFUUKF:NLqq2^Ujr;&7Y#*`qr53Kt[<@6RMStQ]iF>r6MU37Sk2S7@Kss,c?rs9Uf6NoLn$?:CQ%Y@-r7j8Ee9sg(
%XTbhLXi-><&?ocG-Vn^PNDGDqF4Di-N)H"A6I;pX'X0>;mjZ0SDT_b#6&,U\>M$uiXM_ondmt[Sfrbp-K;fu=Hcf;l+>#sT:/SIe
%,9`]G?<6;X_&CL#o3gi-@)P6-,;#ZF)3;fCbKMG=$Cn\a6,N!%XD@9Ek+VSWbr':GPJSfcVt1,jfFhL2/5j(Y>Aabgi[ZHB4NB[p
%KWAts:E+2dB#JA5*HF=pHgk?G!iJO1jkXXo;?>`\Zc+Or9>o)JP\tY10Tl?_05D!LUZgW_8XWXuc3K*:p.W%n1ZdE"(.6)4PdH)=
%Z?dUg;PRM/0LlkM8/<pHr$llY>%klLX_Mi'qn63HZ<QM"l[UM(XM+*e54ra>VU2Ro_:4uOVkdkX`S&6/]j%7;0<?53)qVnM:M6].
%UOB`#MSGc8j4B8BJ^s<cGDrrWfD=M3piEuUpc(Z(rJgo`l!Il>!7U$J^[YK3`n;N0Jh,9p!GcC"g(u(AK?Q.>9ceG3#$t*6pjl6S
%VJO2V#Te,V8hRh2b\9h%>(7@[jTjj?mq")Wg3#ZKi.5"-;0)==KO-kql_Ehr-2PU]+BEM0Z>BET6tg=OVj4Yc/Q6AX:g6r%8Z(9@
%P\G_KmS6<M&fCYcaf4Fhpa.F^_`G#[Tugok(.qalf(a?\'gMDGf121ipn8\T[5J69"ceY=`5fmee>#DNo4dFjn$"OB\_QJNYun^G
%NbNd4B8KVm[clgpX,BPKQh*q$#HR%n*:j8mq:M/3B*ZK<X^c`^f]?b`0jcAL'VXLFo^;m%$!trT02582XON??Ll=8$6dXF.Kd0,>
%9HmRCYI+&.bqTp%s*b*t"FGJi"pA+:0b:pI1K?].o+KkDKrF`+ni.4YT4+hn,FUahZDO)a<g[?c`_4X)AX\e4K^A8RH8O,f%45+c
%Qq07B'*]--+8u/KLr(3-1TEBB7Ut:YK/MrX^a^??7!Wmc^_n7/RAS77;[gI=KTV^B:91Ds/sTj;a^3RL0!=_\nCNZ,IXe,MPZFm8
%,f[SVCT?6>+fR5B`,X4--a!4J;Z2pj>$R`=A4O9Pq_1n*@!X"gPhs!#2lbQXP)D@0Oh_03Jq3W4[7!S)E8ZG0`Z][GSFOd-0-sP6
%"Vmh+,>=)!SBXZ#DN(45bP.Z#b?mAbSfk_K&_`4Ee4k-uf!;X1'T8A?"cFMnd=u4g1a!*0pk/>J=s8\FdrZ(*l8\=e3A%igoh@8R
%B"*L;:gC.U-^l_q@Y17@2"Bp1K)qafQ`,ia=9i7D"$.K8C.M$Ma_T9($^q"\N1rK=)g9dC7ieb=4Xd-._V&?CLSIVFDI:t\Fqk%J
%,1L')K,s4kXB9.?1Pb8G*OF(UAfd*q3&Ve"ObS;^o[irRe?;]jkop08m"KHIX8n(;2N?JD9!q.79_P`ULBNKj.d0q2^_**PMJd,q
%/O=(Nc(1?q5QY,'%@Lui-P`JP7Jujm>04RiIKiKBq1GABl`,eqL>D4eY7njtXQmn+,I""K#=ppEeuB<+JWX7*c^IFbp_Wu*_#!TQ
%5FseW8El!Oe[_L7U/5WbfNZsdT;e6cA\o3?5sanLQEb)2*/oTH-pje^^REQ'D6^j;YrWS5Y_/OTR3"K0-Hlad5,`IDZ9EkqS:VYe
%kL:K'$B]p81pWp.Z=E`6;,N[ZJlk*4H7Ra62&I)9r7f\M=9]UP!s2OLJ]&)8^J@drAm1DDSh7IS2Oa8(Ocb1dBkt"V<RVY:S!*32
%g#BnP_7:*'<(SM'c$c9mhIqtc%U,=i^St@&$J(^cD/UDffm"%AP>+S4IFGEk<='RCpR#4O;KXNo`7<=\!QF88#`fao*J[c7_UpL6
%S)-,t_!"BYf[1A2j?4pE>Y,)4.o2)bA]+nc>h!5NR2H:@Dd#PDQGu5.7?UKnb?\PU#;qY-TiE7nYl]^EP#X)*,H!mI.oEUP\,m;L
%:VL1P`2icEC/p%<cW5IF9Vo4h(%CTGFFTPuVpV=l#$8qjjq/XuESb7oN`VFt8d74Zo/-^+=2Ga['@&"s>/%,<8#!FcQtfIP7qimt
%=SZ.,B*ZS'CT-cr7eC6mSJ7h8#)Ek[K%DtKFjY0leUk1o[L6A98Dq2kc5Q!t\jas4NtAm.'2At^YAT=],J0`HFX"dj]fVAZfVu[&
%<gG!Z7X<,,*HFY1(!<43;R>B`]7I/d)a_8Ooge7)M\83hh%=,)(D`7]]&PL)$9SUe>OX;D>-(H3_QB*eh2uH\B*"(T%jg)<CP9%6
%HE6-9>i(eGN9FM=SmW/0Ar5m=#UtZ0nHg+$h8BX.2DC'Z,8bSI2=LF]cWkn8,O;p3q%F\77M(OuN&9#/8tFc`Xi%P]k>>qse]KX!
%=$aPHXGspNTe;.8LM+dWD[3K`^Rt]<R$.8i;!o?V<pYe7VJm,'W_%]#2Iu*@!&62&7iNZf,<HdXqMa&OnACYg_c2X/9OjM`lKWT(
%dX7g]`C:9H]jg'P1pq&TSM@[SkdH8X_RZ,DAYiQZ2W&!$TP>tb=0hd\o@&WQr.cLn3u98Kl*I*"_-T'G$A>Q]Z;%)f;b05R,og^I
%HDPnjYt`Wi:$5,jUsEn"]$qU3`H6]g/*O^b:I`>CbpHa%ir$YA`MuN#S&:>AfBC#1'EU@rcA%,lXq:Y,#h(=\8l#GK`71^$^um!0
%,Q`%)#OF]nJn8+-1[Ve_^1GFf`sg_>W7MJD@NDoJLFK384C&P/Tljta*YWYe*!V4Ir0n7X`<$qCOMBM&E5n#&eC&;?aYs9"+)G(^
%"Y9N0EYn(oE(%fUTmA#q&gTnCf+A&_Z?[N0!is6b(.W,:j_6d`#,5l/oVtUIZRr^1?be)fXrGno[[e1BHsXL@)7OQQ(S_-JV40Pd
%80/m-dgkNmQX\JaZ'l!d5NG+9kkR_jSQcQ2ode.P4_(&4(m+#6>idB!%eOU^ItC^gEgnt9\.I(fP5@kJ=,4]UkUm)69:Bs\%6nI,
%;]:!sR_7of/f/+Cg8ugM!=b"*h6!d7G0(kXAR<+^O!%I%Hd._RIoBeF:(L)%Dc%.Xl+uME[0_Zo^-9)?NaU(jiHIr#lK2>OOR-pg
%fVViKKi1\blD-kPm60,bF-[H7F+9J*FOo7T;[^JC>&,RkR2=T&Fh6%s[1)e)P%JCN_4E2]PKKcK\P-+*DZi]SG1TOR)C(0EcKX1?
%eZh,/P.CPm4qTB.CSWC;`GfK2Ak^k=BF1gLRYZM#g>c^YEN7=rhc3GfM+ulr[2l@"#j[kJ:Km%Z8K[<,f51p*@WKnE"WYF9G+_Od
%M;:XS&@!H6e1;+facoYGo$LilmIiAl@ATc*P(seq'>3,C03&?]E7G-p"UPP%k/lRYh#Y_:GXo7<,rE7?*!tF)VH^<SJ]%Z:fap(H
%J-FiOE:^$A23$Ol6F_U3D\2Y\CY?[>f,6>I3-8'/1-r!?J[l$s#C+,Y^9ne*r@Uc8al%rT26)+mTdR\!77qJM;aL&5DZkfd;II\Z
%L1d4rrNplYLZ7VB^0Z_I(P<b!Vfg^G).T2?,KS?8'es%%I&N!&:sM1=b?Q&HRT.GM(RD8,1NbAE]2U&K]hTSE94`0UB^ao6Rug[d
%.8i3G(WOMo6e_j+-#9u,DkJ9I1+;NT?)1j;s'Nq_EBhTr_ib"Y.s@*6U5B[O*&J<]*X5'Ud6VPL+koo\-<hOD1uH^I1K7:[bX!^*
%n/?Xr(#cR!XiDT#Su+qZ-<>)7"tOJqdlO[Hccc:c@?JE,T/A(TT\4gJ7DlWM"F;5cJlD)==]=X'B8%cah/HP.Q6t'.mU%Xnn+8#\
%]4s^CB)GdcfdEq8I"-9MHA'o;8TA%P7L^p6;Ff>1"s/b@>b]9JTI5XfEJ`+:Ek_WIA]p<c]3l&9QL'ZEo.=@O^:,lW!>GB$\[?B4
%q>)pbRr/Fbl]<[#(,B8P;1i&X2c6EF1iKa5#813]o%&Ml/aGT)4_aDLSp>;TGi1K7A$7l#]EI1&QdO*DDP\enEqo3SBZ\NfLdmR^
%1\FLu^T\5"N1IKI9q$Is]R2V_2Gf*0OZcocHt;QC28McS'1\%_f*DV@`OrB^qtMqTlqtG%gcA+lAFlF76A?(GZ2+W9dH)RR,?C!G
%PGbh6LckU(Z]J/p>p$<P+M_PWDJ?H*?(af<SL9D@grR+n'J()BHC5nGr)H4D'-4/f$G.0e+E&M@PIID/I([D.d@rHf.IQR)@bJ#1
%DjT":h$9M3C#3b;nul`^4P^SEZT-dAQ"pSfEl4h1054HjV9Hs>$@ep7WEg66X88>*Olq"l8%ZCjQI*dLdUn1^8d6$-XSk?J3Y@Z3
%<PRW49YY+D:*P/-$o[]!`fQ*FB9QQ?7'6V1[:2m0#r,Oan^adf+$tdgdB?aN>EPm/b8[>8WUGXM[@nm`=bj.pn3Zat9U"cH9H4B:
%<KdejEPAp!i#k1b)K7KMc,e"$/+*Z,D5A+G>3_nTYC>&qO4R()QLiCKNV?(`<)L"m6\mLd3u=?T/@bm(1:f!n,!gmZ)Qhs',g"`u
%akFGGF0gV\+\r"M2!M-=FH]!^=MV+KRXc1%<08.0h_<&\^/r4`Ij^:3j\Y?(#Rf+7Mf"o-=35)fZ"N6nf;afG#iFh0KrH5@CSdta
%.I`gegZkS/T+ll<o*0.dMYhi%X%io+q*&_de)?7o[Q6fbAb'K#s3DNHXM&7N]m,LMPr3dCS-.plgbmnNL%VXK>BI+`"C4XjPS,P%
%BH;ZTN+g=n!Eb.)+u_>9"ljPU2_EOF[*d;o#8"g;e"5oH`KOT)dkmq=eleLZp:c,S@!'fB)or^Y&-1#d0s:a@7J9`^70"d`A0\KW
%?O2;qBGf56lBJ;a1;Y/96Z0?;0pKf*l/$1AD49TD^F*)EP<nbF9Fe_hA!,fkjL._kg9!2W<2G3)ksj"]6SAr.6"Sl`4*>nFIAGWO
%`mI`Z:<]8iWH.@Z^m*,=7jIIOlON]p$aiWo%mQ_M\W.9KZ)?`^jL4f4kR=S?eoc(,%%sAp].nG\ab.EB//Pu*De+]Hlc_A?Qhfc7
%/8iT96h>Ua7]Di+k3RiR3\D`\Ekf.*i[fpd!]Sc4"ju;U((T.WU4_:cF!AHjK5>WNoK*tDdg#;%/,4`e3=`lo?;$LQ\m$:^kUS0s
%FTkACCVYccfVJ[tVd'*6!qeT/XV$]JZ6;!=$6Q=gXTo,PiRJ-O;n2KpUY0(V5UZ.^_toLp2g%+KYrY]5.!<6Id,uJUXFtYh%:mBf
%0@EGV+2UQUV8XOA97POCeTnR:\s9amD2>7uVNQh)$C+b&d`H$fem>?Q(u2\9agIEG?r#,G$/i@qFtRQ5qK/FqDk>SQ5GaKLJBhME
%?RIlRZkGh!Wu>\h`GK8LOIs+m_Z=6oR`>!3Z4Z/3_og2-?%X:+9@J&-<rkePZ\/!#*A3u?mnocBft?=UN?K9a@mUhs;?M(]L.1X6
%_k(8daWK*ZS(XIX8`$Ie_K2U=BSUY9Y/Nt-Zf7]Y&W_OoQFZs5<1.Ll438,smaB6V+fBSQHIUg%E7;q\(]R3*Fu't$Mr?m*^D"UC
%jHB6(IbmA/(Q?<?SZ.L,"hlf@'u]b';&Y\WCLE5S0X4F`!4Q^qA5N2;'uM=9=_7\CdU7mH`sm3LH5JT>WB!!dM5k&[XL(adT5<bL
%^3#Y*Ro5jSiP:pIiLX=*!H=1=FsNU(q:,[g!Z(t,Cn/(1/qaP/r$G'-MQ1%eQDkZi6j$DO/g*'"0l6O?og@KmK"r[eYKh^E$6m68
%P?hkM#Hto!I!'[nkAf?+?e$NHA@oNNOE;7q]@\-R":jL^i$Q-:Zd-LK%t4YN[R+fBaA3pX1<I+&9h-=M2gmahY&?P;3,G`*V[/*_
%C9'YF]DO<55<SOS<\@[1]E9iF)q@eeC!u/[^_B:%`ljZt??+'$Q-l$)M]CP+>U3B,,m:FH,9\G#M.f/l'TR(Nd"uuM)&f]#?trqK
%&_poe"HV,C7DU,>L5l8JR3,:QnqJK["X[gZ1'1Rc<#<r@U2msrQW!4eMAp^s?`tjEFOHg`a&qk:aobAE\DUGre+-c8cH<"WgQ3Vl
%3Z&i.9i;]tUpW..UOX2+[dc8i'nnpJ?")Do_KF1aerIc9,?S$B86#mFMQYf?d7KGs@@m1;P7QLQPb>#%h7d%:3/P3.qNS*<Gj+0G
%>eP&CpVKl;6>UYr>I020K3!Ghndb2g[Eb66l9,C%<)3Cfk?s9pDe2h_4IEDc=3D3F'&+QCessE<f+*n$]mLdldkX(LHkpWbHa\'h
%Jok5$1p(8Pm4;h;ann";S/XEpKQM8CWa1)RqJ;=Ok@$R/(u'`n(]Xja&S)0:<Nm2m&SfoA"#23.&1L32p=m:!62C"p+&9H#P&-!!
%mb(R]TW7tqPG,Bd4/Dr`1TKmWHu&D=m^`<&BH$`K!>3ggAZZ:q\.tm(UU=\MV`jOC_qMb341N\E;6^Oa#Eg+/J2V4!1A7Z$;K(SF
%);&M:k<7P&!Y,EY<g_84LF<p2X[j$*"A*0=:$p4_ipLBG+]s4q7&6q9bD1856N_@'kZmM16O?@-8.NbrTQVt^'/Y^"iLf87hnH?j
%>4q_47k_ZhLfk@Vo]9kC=lD9lELL=@@AZ##0Gah^,""o8'\h-K/KpCu_@I=#1RPbh`sh?046,!8$dYnj8S#q:JaET\Z("fR-?a3;
%)lDk*>7Xk@_I9gI]->STiXIdR%4WVEp5;`ClHW8t7R80S8trPi)?moZIX%`bFujEcT+bsSdLDpD3u((cX&4l=j`WUH(?qc69n3`m
%O%'u2I,@15KuJa$,&#MQOL]8mhV!<sl[n$S<3#]?M;^)],N$/0iJXOg?P1QjD"e8^Pd8L%9'q$AUt&tb>"7jH$6bu^`;+L?rphtB
%7PWd!S=%kBHM/oPpXQA#oBI7[PJ5]cg]0g?$P"@^TW<WAAMO`8F:N^=F-+'/rSgnM!cD>YJ&=m1UdAHkaB\ed$HY\O7$RZ?[=WB&
%rs?`uCgsPT[u]!-'Q;02gs3&s'\4H=@EKP.W5+Ml9`ncO5m::oVK+=(TF=]d?KE@&9W+rNH?X6J6J"N0!r-GcT4@Bc^J)T4Td[L0
%UFCEAQhhMPnaSq>mop`TP?Sm*"\B"[+NZQN@@@[(8Ie'E"S81TUl'OD+IJ:1J_-=EDbY;H[@X\*>bRLI,8f!UM(>f(BZhQ<.nk+f
%gFQW`-N=YiR!0HdZPQj?A*.6Ym'1"/4_N-:Z.J=m6-I!:gO>,'0t8O2?!/Ni\\bcu&@8J\G0;[RA4Bi=d[$VDZubFW"Tu%7),3)b
%nH3k-:daTs2S(GE1thql-JRd*$oWP@raQUF,]qX?-a!5W$"(?h@X50b:?<35f[[Ae+rk>H;6t!SG-&1/_aQHKh>l38/>ja?q;K\u
%(s2N-POCWD`Wgn"^D6l/Y6Ju7i/TXLNAq.d*'m$7]9L%$6@XR[2Ud$:`3C+%ZZ)<Bca"qZNT+T\DhPmSZ-2*`(MVJ-LJ24b+Cmoc
%d..X>L'2!.@)a*Ed,Sfo+ek)%!FNegSo>7'RKX74RQ3&Pf\+!<"sEu]Ju"#ce4d,)%1nmXW8:Z?+7(?0-+02F`btVMI]6G9YdZLN
%Nt,G5,F]mn_++oTn:nO5+rAL.i1-f9)F8A"NB*,e:9Y`@e`[0hjT0LUFUt$:AB2C>X`j'&%+uJUk#kh.CqJ"]&Z(_pj@;$2Y!K5k
%s-YK,7VftJ6V4pO@'a;7-%.tmLgqI6X<E_JMq,=,WBPcrZ#UuGShU=!<KWVu2QPIeLg<H-@aV==C=_54EZeCiib&7:!4)fPNrV7H
%65/^:CIMi0YqbXo\jto-,*W@DhP'VoGU3'U?%N.u<_Vg+l]FfT1I7)s@RUPEG=QE_$pYq/f5h`)6=uAcH4BG,T@`NnEfn\;ipNca
%QYYcdE&DTK53/pOAAVl;A/(b\hWWnk#(Pu#!$2?n45u^LH(Foe"$8$9Ck*(%<D`T;%OBI':G`VZC-0TgEE:e'gfZEV^ch,B[PulP
%na+*G5q]D@g:aX&ESP`0Fj$=ZfS[0:mSF4>gP+A<4e)93Dsm)omJm.:lZf&]Nq^ZPpAjO.JSSoqm4$N0RP(/5ZD4igr:l'l$+SoB
%q1hJi3oT'orpJ\Col'j.?hVE5=g=Yn5P>h's)X9t-;8t`&*t`iIe`mA?f&EehN9'dIes?G4)iZaTReZh/,V-6;/-4>+=*X<>1?.m
%AJ\MPOB"VIFUIs3'u+h6j2V%]aZ$Q<U!*sk(_PB;h8A((m+ATCrGR2\bMV`K4Qh+^B`@k_s8K'PIK#F:nheWVA(B)kdC33;Qg^[U
%V"!aD$fi:0\O3?Eh$%W:3ER$&24o%l6BO$h/saZOEZChH#t*)W<Qd>iIHDoI`4deO:BLFd7I*hFVjTNEf@J)DO92M'FF;K[C>\rY
%pHJ.PkK'AY?+VM$;Y[LK:dt(AZ,Kbk<V2qL#QCD?3)H-f!&u[U%h]VBOnB@_-"qm/3s/"<@9_ZO>70pIlm0YH#;gG">3JdkCSS.c
%\aK*8YOWE8[eGFHHure45)8VHfaHt=%sFu0%WW#c_.T/>Bp,]K!bonIT:[31QYW=YPIT:l,bF&W7X[@A.j>s2)`Wm<a?k0=5:pAW
%K=n2:abUKj36M5>T(($CJTOUdC:V[]Tr;>G]n8CAkhJ*dfG:3hF-Ob9a`@*8SOM2VS<;Q^qUIr.gCm!OTWC[X`E(+UV"u-[f"k4C
%:?BhG8g?D]lSr1@C*TDm:-/a;@SnPY:dJ!YOseikYJ^idC?FG$55!D1LD`;pL<71@Wt6)INnt%MEccd-"Cbenm<bFK,b7-h>Rubf
%%Ro>'#Js_i8o.+I"Hu[Ai?$54XE[jeW)H4TmO&]<)FrlHjUMkp`b:7(*sgud&g[?8Q*q.l!Z(sCUsaGpX%kb!nI@Xa9d9N`;HFE4
%O/(Cb%8DJ!mFsSfJo`+f*N&>"D",!A5&tiCm#C@5a<Fu>\8<)9FQ0i%jp6^"H_-J1KIu)6[4Wq(9.!d=*":fCBA:MK-Y7hH3lt6M
%N%irBq2(0'NR#cmJ">*Rf3hrX0$b"Ps+"g;J,69[j&2o##)-$f(5-geWPuoqhc#S]LU.eX^^9/WIG9k1G0?abkrqPl:LkY0o:lQ9
%Kmo6lgp;jm`G6V7alH:nOJ<f37A[F=7)WeF;^3lO';3"Q4H'm^6B4;XmU1N7_iIu]r6l;_7_;ib2=T=maV97u4(U=dqURSY]C=Qf
%!1_:S7+KD8-TE'O]r?%j#.:0Oc1Yu!rU8dS,an`nVD$+`LP)+t8dhF6WFbfK+H[eC"0:$3.Cp+X'XOB<N#RJhN=o[1>t4^hDcC]O
%pMPK41+KNn.O>&pPWUi:n'0i1_`PeOVtFT(l9T-lHUka8YE+gt^4&5^:IZ#/_[p`FLAT+6EpSrb,&eS!Ng=5/XX!t"hr&,dUfFEo
%b]"l]+]ab99p[\F/5aA.;eMXO>Hn++.3Dj(cLYlLW\s`*Q`V)&s*:4@o)*Nl2-dU\GgdoYd(Ce_LPmEJYl!*G_h`%`We!%'$rh&$
%5fjUdQeU/5(!jYa+0@oFe4Wr0M+LjY^#CFiH>&daQK-nF8Eb[>&lam1=H*q'[krGrUljtr]QOA/Y(t$%o"94mppBk>a[tH*#cD)q
%FdY<#7p#8WV_!nMSK'K0N)PSC^Ps(S>MF$W7*G(g'8eEn\g44@"q,prVUSIY=o=F)4mMZWOk8sIN3EFgWM*dqr5g6p,PP\bgMU%n
%'1J*6^Nue"5=37MGK[8*GoHL&[NSh[AeuEE5V_bFJ4_?JTWDS?mm+ff(6Xl"ln.p>`](kK+ij!9^Q3D2[c:Bp_4J"nZVZ2`G*"?(
%-oHGF*_[W0=/%/!i<i=SYqQ`0`cT(tbt,m!)O_S(qLI;Kc'6\q#SX-X`'j5oNeAuX%c,,B9eTIdh\3#$m7)ft/@qo,')C$9cX$>5
%'hbFMG'kPAk4#OU<TilP6,[6-+_sVH#g0JX[ShTslNY]2lLD*=)D=Z]g.uI4P0C+kQYBcI1P):.eR^:/-Gc<boq$.CZ)&P]&hu"\
%`Jr^Q@]@P,NJ9/JW`<_s^;uA4RR14JM/+m4@X+m4eRL.%=,eY@F^-Vb;q,Bl\*)Unm_j$-9Pouon3fQXh9dBN',N&BH/,2ZV@B]K
%)L*m9q'm1J9\JTtiQIZhH?@^ihANH@bGNBF(EW+0@l0b;haDkXqFZiG'Hm2oJDA`KK4DhY36<,hI5Aq<QAtO>-EnN8\Sm]JY!CuM
%9cVZmC?]h8a=G;TC6<#[RD]D@(#[`GbsueS[(Q9qQah;4_;&3o#em/!d,XWELR;9>/q+juDa2f'<:9Mice5uPY!k562X#eW$KP%2
%\E1q8+aL-^TWu<pBrt>l;81Ir6n9]WZ4%-o_K>->S@D)BaVKYBFeW\M$L"1XU2.\A3K[29]P\E>5j.O"FdXNW5l>\/WSbUfQdJPU
%1CB@!dA4WV+R"'m&5u#!g3H*B50;]HGX8W"SrftU?o\J4*>@TJ5d;6rrDt9iFmnARU%n>69is.(H7jbY)ldJJK)uamY8T8J9BcSZ
%[<b7`f#Si],(#8&W0FPO6bYo6WR?[lMKEVtntK(ULh.LZ9V3l,?_uJ2(JqZsG_c$Ncn)g5QD;[^.':PJ(Z.0I;p-.PHO3%!.XQ!F
%:r-$>]4pBh-X"!LoScrHD25O2Q*X?[3`<05PUMtYoetHrod[1`&D^6,r0Zf\O.V3eK7j,`?bV]DhV+OI)_63!)Y4/!MO7VM]9!"`
%mVub%]/\JPDXe7;lkPd1Rkt-pm$6mqnrh_1+NW_oT+aU@7sSd%4Clh>benq6aK*G(hHAV`3]-sig&R/H:IIAP#k]?g8I,GU9_%C[
%.c'p.5nu!H_*@>K`+ir_:8:c98>!Uc#$NQ39$@9gS0^GnOnI#QpOtm68,fbF-tca,lFtsUB(YZEn'AoCj%XuU:0(so$O2*>>oN7n
%P)eNs>F`3XRl<bh,O1ah_jBFuM^D&X5auoeN?W7S;j9Bn2f;p1Q]67grIdI9`nK=k,SV4[d?(J,i@N'_SN'<L%Pq)^]D)]\Z]foD
%N6*jgToB\37HZqsGo.Xq4@7IoT;EsCZqn<0kL(>6UWke@JraA7@in%iI^9Q&LC\:qkWV4'gHeAR,.%cqPp3q3dK)lf]u5bGf]G>]
%H\cBn\*57F8XAXJW:F>WMR+a*Ouu&^XYSG6GuDA(bkFNM,31NGo5'5?ZoCg:H9Ha*KgrN0Cpc%"]X?9OZ4--#1K/YnmbiLE=u1L)
%<mdA^>7mbb9V(/ekngR\*kO]u^Npm@k##qb.!%gh?='nd9W*YZN(>[P]tnGZEiV'hVIXqrMJ7.,L@;UG8K&-2qJc/%'M`!3"%Xs9
%#q=lV9^lphEiRr9eYU0\jSlX%;/>%K@B61p94`h6$Ff,2,Y*:hD$[1X=^!aj84<_nohn))K0EHbGi8QVc2VVfjB>P[MiIVAokf&0
%ch5lB.Lu$.4H7du2h`IS9WjdE_\>Gbo#M=QUp^OD.(_o=NHqak[<;OCO*T+"JpP,HnEfdV,NCL_N\GicGp0%\4A/9.)S-e@!-V9k
%b4&[XY-+1>f\\0Mj2J+<NT3mT\Ool::'oHrY>pCMEA-^hmFbZrNkUuk&K'*!OnTg>)A>Cpq$&-p]mV1b_W$*:#s$/d9)7c)LOHS=
%o6pB,Z#Y8D4:Tc;V1<XL#gugYA0EGrM8BoG1U8$g*"(>ukS2crP2af5dhXU,CMeZ)&"0FHrO<T@<!cQ?<FKhsc:pT)3Cd'A43c[0
%]2NH&(J;8sR)d.O?:>@A1--rl[LQ6W#k<Z225&!&EQ/9^@SI9D:s@J]>R!\.I2i=UL01Oc6m%F_UHS=0hFM++7ReF=Hi8Rk"2h8%
%XTDGsU/"\1YZ[,R@l`b6>pS5Q-DIFG0UG;nY9EVmK(j<Xmc2QF(i_n+Bd%:Bn+RD16#bR+]"+G7a7=dB+hOSR4--(DKdC_jAob;`
%\C]8X(lV.'[Uc46!/:l.$:QEbqE7$D?*UA3W=*gj;2:fZ1O3nlIP'5.8q)JY='(oG%M&8C83eA"KUr;i*KO1R;3p7Y#Ig"mQ/Y=@
%cN0e<D*D(3V"Ri(d/4)&q=i+R%l++:@F*EAf<JXG0iW0s<%*G6G<PuEG;Q8__]Liu89a)VP<gS5jVSjqAP&hI>CK-K6A@EfM6n3o
%#;YOcegA>rI_k!F9dcp<M"_sWc+[nT`ACTjcUC!O_c_`LYXAUdnPt3O-hgNH7BTb>_B8k"0JWeh#,\=i;2j1R3q+[sRA(R4Vc/JQ
%WL28I&61^);@4ho\'J;>43AUW:p1aHL?2NZXGEiV&.Si+.;5Zum\@'XqKg1/*L%EVb-G.'3$D:KAd60FE4IL7WmkIm/0[EC%oVd>
%Ta)r?d7tBP,o',J/lMCu=0JLp+YTJ<014`)dlR-k%7Nu)fs([3I3G%2.Ys)HB8c5m_^>KMU=HS8e@tCRE1^S_OX>hL?+J*\^Woj!
%k-O\Z5k58I/\-=7OIK9(p4MNgCHsM+S]nmr]r@l2>>QDWZ"TR/NI)/([MDF$`c:ciL.35N^T#;499U;0(`j>,0qQnd*FY7fnDaUM
%Of#F$Y5f1#krjDaqH4M4,[7,Y$ALkh-4If`r"r(1Q\HCdZXb;oarU1a/Lb(AT!_br]h95_TL[08/aZ>842ZC;T!.tAM;[8<:mB>o
%=#+1*<Ol/.a]hhiLiF*8:?2/3,uDh/gIoj*.j1&Ad+6oDO%l&N22alo8bnPEq%%<`](a"THQ<FR_d0d+a)rT1PB&BRZ^ma)TVq@3
%"QQcd<ERKLQC@Ulc/Q+1:?g4dR$7on8AYIrRE;kR].@KsEhIHBNj]g.g;3hG68Q2HK)@*CZ[AO-5-!VLD;9/.i1MUVhmkWoV-GZ<
%UQhSM/)&21,oK(*o9H($&,4hAjO_qo6/;!mor69hbV,+AiVK>Y0E$Be9PdJm%r5od/5-r2(Fh;"0fG7BN81MH-V3Nd5P\X+gd$"n
%d=p#`cjC![:VT_8c'*#N]mH2_a3r"%dTG>bI@,&En1<DX4^iG8/r%5N5msdF&/&7&ri7p`V4.O,@(GPgnfS3)JGD^M^pL)]S(;+s
%+10&"q@kLBN>Gmmgm)5)+Oao\Zl0EZa)?r\0gIBk^"$:O3baEb]AhD5A#\`T`!Ru6%'-/"JF)dcBli09>Z$>_RQeB_ZWg,hMp_[k
%64,$Q!2L5.L?MhSVo6FR3CX;(.\1=oXW=AK61Q&<Gddfo[S3qKPmrZ)@9HNO6#,$<Qt^I[_rBn/FW@"Ml:%V"dFdBp(J0u+7a(,b
%G5e[f6fn95T!tVZS4D5g!L/D,.X!0aM-"m))RAYk52Ab^SJjGn?4U7AjdW=gUem)]`Ep?i=!`jaTW_MYG87[=]n_$^6BB?!L3m]s
%8M?NsIR*uB5tC-Gdm-M%$VcL6Z,spTT53V3e0MUs,uPp":mE!&76i;[":&CJ-EEm9Wr;Gs1t_N8AaME\nj-9U1t3>Tr]E5K3QBIX
%(LnHKI>k6*8WPU/:mAtX0m<!IGT,Vh1qo#*%uW+82TFt)E3?m6EHR$'I>k4l8m[Hr[5@,rN3W.WpZ"!Je2HSFLR=9+l*hfWfp,qe
%6X9ON08?t@-iZ*CebmD`&<dOM`lfOfhttk.htm7rCd,fSp>u,V/cicIU'/Bpc#LS^`*ULXeOqMDT#,DuC1VBDl/##L!91(<HRYMT
%BWgCb0E-ZY+%"cP&Oc57IeI8.n;d25NVNL`10H:RO!`jNOj.D=&tr\&ej^#^af1<#W$t=!Sa:];*PDW9#hB(]P1\1n-ibk0Yg6.(
%jS&nZIOs2u*[!fHh2h.\;!SJkl-YZRr8d"2[V!9]7Zg3;?0iqU@/lf:Z,*JTY@"$o%f6KKDu*4qI*uR(U@,4?m9kCC1?mX6P[aCk
%f"+kXe8Q0E6)oKu?0F^!UX?_OcIP7gC!fQ/_VqmHHBXVp;sbakhQffO+pk?<G,7=$S3<f(j/SbnlnMl'^D*Fg-$qmKBN5B<&^XDN
%`9L[R+r=1RF]a#):bIbC-&_D?54p!sWp)Y0CWq1IBUc,E)Y.l7Vng\B/ZF&fg"er0>4]CiIjJCu9RWR5UORU.YU(A_Zkc1@)g*%G
%?6KrjQIobSf<%r%&3>)BTH\)17]N*`_:XaA"]p<m>mm[Og*<W@p5`Nir,O97E7R1K*hRUWZ5<:`W)@uf!tDC_q6:_."I,48PlENX
%3ZA"ocbkj)>[t*PfJj5-is+DnDOfFZ2CLR^q/B:6Mo4HT_,:[VK*rqH\64[O#1>#HPHO'Zjo!a:FYbrHe(*03]E(=E+O(,s10%%g
%5Q$7()h.@;#'Xk?4G!$#O6>sJJ'haJEaQOFEVZ7+ps\."i3_1@86rC-eE-"Q^QuNkc$d=V/M6^?bE%/PbFee/Q[ekL5QCJ-rTet4
%cZuGBr\&d#bM,7oH-sWUDYn@ed,$FeWP1%%pic$f[J2ubQiHBTIt%!mIs]j]\'+g9ci<j>Im3nK%o68%Z77`&-HiU*r)6AaBE(Z9
%GB!GT%PD,:='p&JqY\`:?eQ+fo7(P:J%fRHhlhKk>Q<An\pe%eORN)$oTX,UPDTj@lh#sEbKaNdl[T=jn%\Rf6iVknmNb']^TYrr
%r5TUFmU'_1TYdf_Q/Yg!LUC$[fh3,`&^Bph*pq2u6fN]dP-SR>^X.QVpXu:]e#4"6^\@H&)ranPo+c#M/gN4&ABJ1RHU.=tI@s[=
%*fmqiin_)W&Y!\<lKro.03[F>?)XksRF2d#5>&IR:RuL!KJ0n/nMGj""=7tN]-2;$r0BA3(ES5aCUlUqJNWVEKjN#N4RIHOGMi,7
%c_40`Z#*`F@Oi+;-P@E=EK\n_d:DQf.6BMI!GURrQ*>qKW/4L\$7U$t;I%RD?5kb9?IE'M[k;bF!rXjr0\:>j*2R6_k%'&1U?N#B
%H7N%'1XFGt,6/oUBnH24DBanncFtoN=-q6)1cMW5);224[:_B69CW,+:M>RE65;kpm]-i(KL+uI(J;UeBT4'M>d2-M<DQkW)L6jI
%UHB=gIFfk[-5*ODHcQUZp2OOPe9f4'qjjDtR[#(E6Zhm9J>57]!TO+rWD@"Ra@5Z;K27"'mG6M2;.9.HHG7WM`AObJHCoDP[qY99
%a8G9N6JZ:Z"F=naS"Iq!\X*%jl<DBM$72%k,G:6mLm4mQH41KU8uiQ\L6R3<Btc<e@dF]>b-,^S"">qT^tV7$Q54&24l[g9TEs<J
%Vq\lF?I#4Q$-`!6I:ohrQP4f7"(uuuKT#$m*r1?[W$iSj.-9;mN98TVJ%t6e\ifPDi&KUa#?M5cDc#V$8PTRP8&::MfG$l6&1hLX
%DM06P\bSR3a+373p;o9/6bUNNW7DgX'$`6'[3%B((l4hS47$8Y%K?F+rN8j3P,sD,0JrtN5t_k,0oedeee?$!au,Y6/O)hUkQA(D
%EAERkOcW)Zq\+d)'6LGC*-D!&%Rkh38U)&IbXJ05/'sAB+*4Kl94K%5>tEo/?B,rTKZ*QVZdL69"9\0a^W;O\#a@EFB3J(m8;A>#
%+;k<kd<m#-ml/!L``XtWQR9ok]VS%j((i&=XTiP3rd$f_17>/3F7mK;5S[Y>F]jbLfXHl0@XcQ<!s%!)dm/&ram[.#IqKpi4m]Q;
%5\U[FmPRF>)a-k[]B7O]6o)Yi`Z<*;bC++<W"kZh0o(=ED#B[b4O/O6qiak&N#hW)Im-AhT(Ds,!ik)oY3utDDfU965VN;35AqSj
%R=N==^`UQ+]6c5=Nqm>_HG7UhP"]`_IOlYb\'O8)7hX!Z34nNn)2W4NI4GgrEroW1c(4/U=:4BY;&9j0W>dc%9bZXagS<C8O4YK5
%-TCZr%%j$_\F=fqa5c$%e'E6dr5S#Bq:!jT'PjFI4t\KYae/)Rnnqg10DGJ3hBsmF[a=r\_K+9o%-2UGQMW"!m2)4t:Zq+m9]?='
%2^m,^<adBH-uI$\pg/c;p*@f>CkMD#8$ZBpR'YUL2C$LXM`\]U"_V^rl"OmD6e@lc4df^UgmQ=JRDG3bCSS&=#RW3oA=*Oq,<=i:
%\SULKMJUDFp4?PL;dr`=q9Y.-C1K3&,-lCc69)ii9.6&h,:lBoJ/;aib:LLFV3S$ZDGJ')oOYUARJohqPXru%;RG?[![WEslh.6X
%?M<T\m-S.DJs?Jm)'iRSrHW2*C%iEI>B]u1Gb\CEq:;ejGn2F0Co<,1VdCBB9j%8D@B<YMp*iBrL.il9E.`tMZ-=e112*moL`M!!
%Erj7#/]]rLb];E.D,mFPm;p@GquF<g[A]fea&;3g#'F&R*8XtjWo&4]HQj_IE,gl84:u/ZH&k^HfpUaB0LI)\(n0m%cmWR"Fkok1
%O]8PAU5Daf%ZF`P/M;?X&^5VbIE+DkXgj'RO_WI_gb(ZT]B=Lg#&[ks#C$c;5,7WLqZh"Wq+c-]]$^(+?Ot[pFW@"bBh-tei3[99
%UC+cZ8BWsa2"Jr>T98JZ5c_XeM4+sPa#m0.Y!g[o4JUP^&7$>A16aV7]XkL_6U*`AI%tVsE@Il@$a$/!c@#MO3u"gE'/+I:r67#9
%YB]r,h%B,?a8Z^e.jV+>2=(:'_5hY?Z_Qft#-U4cK7EdVPoBC40pZ_t]_[SIps"Cl_f_qB-$X"@jfaF_TBp):dX@C1s1tc./SGXJ
%\s.^0&gO*eKdD,fX,ENI6W[$+DqM$mgt?.l]IX4E1q?\O1Zlh!Wo5g6qSG.SYUN\F$Vagp/"Hggdk&JOTF6Zua1/&f3Wk`8L]S)d
%[F>tSY9'ukT\6CsC*B3mGuYSN1OR9<`CHF4p;f0@b_BUkTl8^Jat7n3Y4ES@Ua2(UGJ!?sWE\7tr4c3UXV--*U=^HJ/+E6=V9XVW
%4]Mj7<ZS+7Em91Yo/2`7`9),`.CT7DiZ&i@c#1eop\`[aR"+![!;7phLWEJ<rW3s3AHtp2UcdWFq][9UOs@kA\J]<0G,tFh*c<QH
%GJfGA/<1J5hKOG7\*FuJbN3R=C)(>NjD6$lOd','ohRZKjskEd)1Lj"I2$Wg@=07snCIRllZQ-6l[XnjOA;!K[Aq&G_[iZ1O3C`6
%5k\0hbd'?f+Ys+,Y*jA[#NCP755WNK!K&%G\hXGI'O2DHP=='[D<=>L\^]*^r[NK3DqN1S.jdtf6pl&HU;fqUmE#`7<NVd#AYgJR
%MQWAP41>]Z$?I45N\10fqB-1*XPFMRX).VSEGkt`h`)`4S_](Z4)FUL5o)Tt]jV43Rc?6uXMY)a1$IeV0fVU])H=i_=QD]M?rE#`
%KCnRnrcTOY%U#C4F*8;)YgsPi@um'l7`A`-TMG9qMb.nO8>/9tp*qN(/+WktU8k]$-`khI!d!*.UL&umKNB9QDG<WX&'$oW8*)SR
%Ugea@:ii@-+uun)N(&0,i>kWi!8hS""/%qs7mZhL;+@dXoIb6Op^sLakXSV@(s)X(1gT=u:eqUbZ\/Qlcmgn#=O%[[&rLE+:q0S%
%kf=+->rc)mDiYV)&*cS*JP&4&(HR59W2<CWTYoUkT^Dm2I/?M.S^e+I7;Ji>UBch;2,NI8`FRNJS-h-920U:X'KjRHl5hoqIs#%X
%W'EjOa`h't?o_rSBTLhEZY)REhXR1Nn!SMEoHa@pY>8Y*qGmEQcWo^&61e5i[g+D(61^6a`Fe3pr]oX<bC4s]eZ=J%Abpo@qf,4Y
%(*j&rTM+#IF=M$\M)XJ3LmmMk_K_u<Lq)aB16Qg4'pMT*5MoiqB7fcpm_)!3<P'k-&VN>aFpii?*8@:iMeUf!;!#;#1e+QQUI<4q
%eX^]/U.[kT2,_RqH3r]rn.NR=b#WYA\(1#ukgF$t%>B/<^DNR^M+V^MQ#g'.n#aE:@r.q.)tREUI-\WFm,FR9[eqMVn$,Do'#bBB
%noD<)P8Ur_dQ+>%QY3'Ga#Hk22Z8j*'$t3F=W2S^:I(6(;D4'Okutp<aQQ2h?PZRpk+SQiHRZoj?D>B/GZ=Qh>69RF7o&*D"($0#
%pSVA4Y5-^;*Pg+ti(19DJSMhC$D5L\pg0%<"3ZcV3@8u1lq:<tesG=m>8CO/:\JYk=)(UX0s60W</)2E5@/!fgmPX[Q8QTMMi`a(
%"]6p`i6p2BX.h15-QCACq<X.2eS=V:O`RukXrC5<<?cK2&TP0cI)u>CM*VS6H+#^GYWD*i*^YMia:t6g,r(93TFYD%Qti[!G;[]^
%%ZOq5#6E]H#`cDsEqN)J:>]isld6B&]Kf;?m"^KuCJD#XSq3olY0aPI`\)_kg.\sf4^9T9-$5af+'c(C`W!Tuqq`nWFm#2k8PZ_5
%"-jA=@==IbF5EQ/e+&01HKaa9Rmd,Jfc/UD6^XJoW0hfuClI[g(NTQ'$bRDPGh2Npn%@q6NP,8\`\Vb7o5Ok0H&2g[k&K7NVf'#k
%+GN'$[`P;*hn5(F.8r6DC0fH]`=sh"`3UN+;_MD>e[WZKY#fl29n.da%`YsbB\kbHTZ%>lbqW3`,Tf<&fE%:oi8$Aib#b/`GaY%2
%lGVi_l9R.)p9Ri-9efY:]6C7o`Uku=S5B6YQkj9!Nqa''9S$s4O4tXQRb4FQFm#,iW,u6p%ur+&2H59<$5<W:bqTB*<\1h%9IW^$
%>f_h5WbS@Hf2`ki?)>O>7PRp0.<"Y<-CN"R'dU(-RHe'Wq!f9%pC,pQ$O0L]Z3=5_32XR8K2Uus8KgkC,h(MHhFONQiSPp0`uNbP
%e(\-=ED5imm_LWkcd+RSh.L_H9\!Wie*o<:<*ef:DN:\$T^Tq;0tiXtK4Xlre/QO%2Y\VehBp;jRGMQ(NF[@)EgpTcS!][UHCM`0
%P3ID'5=hZ\0B5MWeL*1pFKHkPq9\tj%32-g+7nq[]<itn![FBfIiPU(I=Xi-V6PkfH%ro^h"i4]bR^Xe#$bt%6.\EZg'Tsf(?pH]
%WX/7L9[-:p.sfEqU2?B0$9G&E,F`s+aPO&DcRYaVjVL<K4jirT2WIT=AF%kZ$W@Wtn(@@=a-8JOP3%[5.XTAe[nTI/e4)]t/fH4c
%'M!^so,0uNe8P-<2ITK[\tIuKnflm@jr;EAW!O?2Y,O_\C#V%Bcbob\Af*^!4"P;+%(#K?=f+V1Xn6tHJPtdBpX9\4D;sGTVJP4"
%j$,T,s).34SESY?p$M/lJG<BQ:F"E!1s'5i[nQakAZB7/`7XN0;d$nkVsL!Ll\MXja.20hm)Ig.kE9I9he02L$2;C3>j$*DZWfB3
%PW&5\jW*XuB^IY=)pbl>>rn>L2n?B@s5V;aWd`/.T/c%'=k6Kd:R%V:O66&,IqP3!RX`Aj;a0)&J\_ap(G1+lArjr4^)ffb_NHq&
%f4@$dq"Ccoo\b)QcqOq^4`/Y<DngVYRGM-A\8]4"j(U1(o_XE]5"%+&EqM*f3FZ2ARXgc=#XD'`aVs@?5NE&4ca.)A+j5PGjj0gh
%jb'DcdW&91rMic2i..EdG+V_Pd`Rmfd]6FPl1p*adu[_5]kW/Fdp,.CjHW\gWQnca@YU-^jCr(:nq^/tI&ou;iFmP:%b!%.'h<G,
%he&p'LO^ofK6A%,CDD-**]dC*mnd!f^)8t%WJ%L-IHas?j]hmp!NhT1^(.kbTV@m,(0%Xj@\l,\C95U+BhFDh%U_LRr5I]Xm*[pA
%Mm1+Cn%SF43BSt4(!8"/;5a(D&F1(7[!!27/X4&daK8)PbU$mP6B05fYu7;SO"a8,Ne;4D60VJppKD/S85^et;LH_'eR@O:O!84H
%%X\WPC#90I"7uapr\odr.n$59#7"f'Nhl<ZWb;ALE^8e'&E77o2%JE2WSfFs;Y!A4jG8K[/K5i<I4G6oih46+(+TpOC*_>?`-Pb3
%M3m_5s6SFJC]gM'3DfiOd]aE2PNdsdk,I<2_igeMRu=V,3ED+,-PDcT%qhWI9(3+#C-12beaiklV_kkaa!)f@8b@#=Xe7%kG+`No
%m3_,N(Q^?!X:]Xp]t:!WROI%hTl+sV*0aLtau<JjIL[0<8ldIIp?0WXpn72*0t/HYS)E[8C`S?\#AXGPc0DDuSM7pi=_?/?LUQ#^
%5d/?uE,E<+R(^+E#!Y@;9M@e`@AjT5S,*Bb9fi2$%E'2_hA,L@K=(-2C.)V.=L/;''<.7>GYYthn8HB9p`*l>p]Me82o__t`$*):
%!5fF7<Sgp4+uT#akRl/l;7p'\nSu:^1hMC[dirFk8>g3S-u,=?crN]e$):B%l4JnR<DXeMe9#W`&arb*f*F4mpW8OCO@Ur<<.+!l
%,QUK$n0^"66E2KRCMTOt?].H+:4,@i,QeVqprQ0$`3^62/X@['eiHjH^oceV>]uXIcE""s=M%?8iX9M34n\^$i-`\HmB]8H/W8b,
%\`u_I]a`J:DAr`tAhF)RJqB6BaJ.HfKZVi+18PO2f,uP.`Fk&EM,epfX?'=[>:H!&\$'s;$$*D`pe2rDH:ATaE5o#Tam_mGeDZrB
%gqH%/JE7JSm`^fGbqt8Z8<$RS`0nIIhd)(/O:tGne_=MqF=)=3=@Js!)fN`M)c7b>3b63mcHE#t]1F=+N7QWA,3AOTkq>Nh'.1M]
%;:lSoZ)5qhh5^P/.i'a@Pbh2Q?diIU,C43)8t!q%7d$08K:aGoIr!;:*@:?(ESm<+OaLd[NtC5GCt+M=Y`JKmEDD\"$WEC5')H#h
%faho[ho(UuR7:F0pH]u_?#12GB2`Nm&2hOUFO%/('eJZX@es5q:qVgOK9>-;>h`oXqC6!INOD3dH&]U/,(+_)6p.^3JT%61<q.c8
%3C89%%$eYsR`@_o<6\k=:;]+j:P82R/NV"?4m'Mqf&;1:f3XF7gH`pqM@HnY3gI(X=gM)r=&@`10lE1<e?`qo@,X3$*dn_m\B;Ns
%$onZ6m<e5q#PGPb[VR'EdD6gRU;_mX]Sp?KI#V1-?0J[1?acIkZ^b1%03c8*DN#Sd/)S;.b0!*ad_c^j?gZiX*9+YHUp5!(&uq#7
%'=U@X)UBTV<'^'?M41SiY128F.lZ@TgM0O?rQ_p#O*r5X@49olZ#<%hM2_l-gVT8L!f0tqm$Vp#)gF@,6#6!#521NiSM1t)eVIM@
%*1OW(A$A3u(#9n&U6AU::1o/4#kBu8>71\@dNbV[9@^Xn$I]tENueOeTE_3dR^%L#;j5[gf[)n>lT-S]3+E*U9SRg7Hg5FjVGaM6
%*E+Wf(Z0t/^=cNo=iG3ZnW@4$9Ma8<[OlKAr/20`PY$E'H,hF4.=9ggEj$a.5&DHE/Jpr'Dk8U\88mPr.s&=HC6U/4*&54>0m>_V
%B8qNNj\%2Xc#<<H'/a!NaoZ'`'4q"UI*K'gVa.MU=%[NpqRFs08"Vm,Ze3mo_l-%WT(HHnM,m\WY=Nqled`elfI/5tQ,47/d8,Xo
%[_n1Q,fVkEr+uh"ndq(m)Oj!&W)C-Ul27-5qUc+'juU9%)=0NY9`.44cZ$@iLFfL9##Xq\PWgQmUaU.+*T!F%,#r7YFEMM'5?F,<
%Q-f@540Gq*[.i)$?3kW0'&Krc@25!$`c[1pHgb\+7saLY)5fPb:`U&#FE(\RfW5l95k/-AY0?#C>:)lYS)U,\/6')%p93+`kJ7hH
%4`5LUO:ZT&O[KeGVSu%W;"]2`D?`dp'2_1q/s5mH7V/`NT8FN3k',bR?;i1Ga(_?*Ils4.FQ/*m"*tSKcr,n8l0oX)4rPRW1kj'(
%8o0J\Z,;o.^1e`GMIBL[H%=3>'cZK*KG@[t.;f);[AR0F7=\"r\Vm'biY.`Qhgf`rrh?0I';AX0RlP58jT\.!fD0Up,?TbdZ)>a;
%6oZMZh=2?.lHqHWQ+B'\HpCs'N,h"a?=PtFomj_M-f.ori(c]?QN0O4!-U(4dZe9m_&9!4`FG'b'J5.+o]a)92=jWeSi-0<pi#4o
%)Eu)Fbb9K;%q_0U!gN-A7-f%$I9'*k\j<_,Ga)IQ+JW3ndB%(?J8:TKlS3n]n]RW9';1`^ci_d7d((BF9?F7S;h'T_!.nPY`#:>0
%DA8oJ!ECqD\k#cfU_U^5C7ph_*U%56$WG<.+(K\">fA@;T>0sV!VC$GZ#Dl8$B9r0;`.2c$o=32HdeTon>!Xo>P5#rnZ*.eYURsW
%a,ukf4t*r!TD3HU7m`>V&%PHuhI*3c/B;dZ#'kpG7]7s/bIc+#TXTmtg"A1GS!X$Kr)u4TB69=E^poRjK'(kC!)pFZ+:=nN)=iKh
%i9,V1Ha.E"D5["E;&KpJU*-e`Y#N!lZt_aQoH/:_+=@Xi"aC;Z)g&V%\0UsuVt)D`QY9)W:NEQ/6@q_0;k((T`*#?r)Iu'=lB"1E
%/s#G%Y4Y_9aG\%jMCQ@N:o+\Id8lgCfVH*-n"/]Kr:Yo@8<'9V/bD)LH0JE7VGt^,gjZ[#pX+FeA-(eNUA\8FNaWAF,OD6SEp7TG
%C?6es8:p-+`VOXtld#ADF^lP6j(PGPE*YqZ99't;QN#aC2aQGb'?r-l]1=763PtZ6`*8S@gSHGM^JOS(S:#m1gcFF`DgdT5qla?I
%OMWZoIX.MU8jj;RY[^H#ZVOZJ4"F60knJoUO_rWLhi[.]GE=:OILWM%faF#P-?eXgbe69`D;DT?k'atS\)a<B(0/Di2R*3=Mq3gC
%s1AuM5.M\[g"Gb,k4#gXi1all[0,XQa[uYu84AA!Fp7!QRXdVo@m/!E4ibeEjaFo5+0@oFChJH*N`i&",*?6U)P+9TA""RrRE0p:
%6gsB+botJ&aY4.k0%QS-eU?tp/de%M=d;ZLC74^VY%3\_d\ZS#aeh\ActS%^h6aL28]nkElb#Y72@V+N^]6?a\gh8=R8aE\I<./B
%P9Z'-WE?c#g%qCrr-2&(<Pf3?#HgBp1E)BbmiIl`Nkb@pXqGISY3Zn&fU/Gd<MK,gp$1A)r:qSBd5"U's07LgqVmS?Hq^H@]a`>,
%*h[P<<''HoWoh4][?J%h9G(leS$s)cY[/9Tmahd=*d2cA"7t_O3:b"T*q?9@Ott[#$ZoWB:?n!E(J*N6<^rA81*r,$-22Kk?=D`1
%3d_rh6g'7=FQ)?s?M\1.\>]:h7<bu-pN!+N.92#pCrJtS]cYRkoA#,Yg4XG)R"&!Zf/PLFD:](nLX"g%3M5\f[>rdoS1EN_BR#=p
%Ff6:M%pi:=3d.rp*Yg=W(A!S^Ec^me[cS1oI>*<NpZom_%$nRZ;lqMN7,=1L,qA;EK%56GYH_Q8I(#!W'mGLaNW&*p;^KuIrc&Or
%Qscu7g`.oCP65CjY'K<JDf=^5#jNII=>T<"`A07lTRA`SB,-O@f\^4m/P>U-mF[8X>qcP+O_\ML;)HkY@e7oOTkf8>FUqtb3M'RT
%H1_&V>3-6*='rL);gP0cI;?f=7i]0PA>UcJ^-BT/[P'-K/4]8B/qkp3;EK1S-O2fFY,dsCF/7-3G-QH8.+fW5Sg54#?*Hf3IW,js
%;eI[@bP#rJn%6L,.0G"$B:[EqEuHF2Hr7Bt?&LSLqd+W[FP([#EG`9ZLLK47\2`@a9S\pf!3oE;g+YjpTX$r_eB_G582rosM?ER;
%I9AUs&_2-0MI8$n.+Q;/]SGa`(YEk2@LX@T:lTpKZ3(]37Y[]m+0'+Tq"#aQ7j'kZ+'d2A8]\o2p.-3E9-6?WVs_a6*91->+rKl/
%gI#%J_@p`BH&6;^s3_L:]BDG\&0`\HqaT0O59eQT>qZDtUR,<t`j]<8M%'uVCq5eh[Q;5/7B)k"mF"o5>0p"E#PY)o]Ch;^h&Sma
%lUs*E+TT*NV6t5GZZuCRl&NDSZ#gi91.#o"ZiIOk1k-mV]nW-^/qE2K:el`FSSAXs2NN9UMeFi$3Ku7^1l[P7.9_nMS8Q+j8)Af`
%PtMUk>8K*AjQB0h;gP-D--gs2;%B*UNp<tP*j%kA7r/.,K:g3CPL:;^\@A1/+3amKRa6lfb"#.oV"u+2m'R5QgSXP@mQ:TB2Oi_Q
%nk1Om4o&eE$GIo:Xt:X*[!%5F0Vr<riX721e8Ck+&?TQNTo1ITlo=_$XWsW&a'fUIcilCLZ7"cs]MJP1!B'mDW_tK%'YO,*<W,C*
%]ZJciOY;3$R=<_lMKARap@GAu:BDrPb.^\`fZ:gF.r$(;,5aHK\0;<s>9<HnEs9Amo(*@@Smcfc*RqZQjl'l4<6MS0AX2X1GoF:*
%Z7&ZpnMD*^/Q`]IQk7osYd`L.<8k:oe<7M^"[d)aOLXgo8%?N?fo(VV@Fj$2MHkKJRq&'X)2($/pdhh1KFmLV+2'BhMiYE9>io.[
%$qZd*bs$7:?hQ?7V\oeDn`cWdrn,tqhF0dUaUYS`Z>W\P]5I!7^i>]0,I.GZn/F,=UCm<Jq2uiPmNVG7g.#p4FFk?&YITZ<8&pp8
%m:oP'^%\sFB$\PHR(iMG1Z2Eh]K4A"a-Ig,<A?b0crG$fLZQ12\FHqsi_20Q/aPG<AXVZ.>2(Kqik/XYZWE$bT,&*6VFUlefV'nH
%k&Wl1-T`iE@@t,tO0=L-ne%p*nRUmK^5gIWRKljuHt=EA^JsroqdRe_o/dkQD;3u!hP\W/D+)*r=s)\jUE#bpLcBK$bE[CcL<niF
%fZ3,coB+WY91<NcOo$h\h`XL<+>p3LTWih$e7\E2q4a?[D$=CfYA;c3_lKc2^fXPFT5K>[7bZGO)C;1YOq#DlqA$h0=(1Pi>.3=*
%`Q+=oDcUfM)arY)*``)]cOgG:&Ys3q1>jEOD+V6gq)jb2_egFkU@t-"8=/jLq7seJ6B8>5-Enbla\f-e`/-r@:j*aUG_&Ri)9L&.
%k/:eEpd&Jla1,65ifU5dGHA#E0CY+lYNM8!s6W5S:jT(Y?[bfdk32:EM^l2\Gnla6\C'ko-<!0*b;g9lU$*$Kp#<JYNQt40SW\hS
%>09sh.&aoaHLnl.rL!0/Gm:J0At"0G5;c?TMiAk@)S@r;Hod##e<CJDP_)-d&X<U&a<2C4+!o.+6HEDhII^f%>>M%Db(%47+0I'K
%<3sU\X,<pkduY+:5/2"G<m`Y3fh$453Sk(=#:>W\5Trc!(QppY_D-g5@r+#gU0MGgM[sr8g@7U,'k\'=+g4W2=nX4eADY>;P(]=A
%mk2M+i+)tiH25/i79\6tD;'SY,,cY1^T&sY?fSA_CmF7f(1KRbdWhWqAL+D$ciV>E!EniTQKN]UF2l$e'GE7=F(>;+OAbI%&aMVu
%S9$biYjhS_QbE8Q#bT$uIlWabbHKupc)*^VWK-cXJdbQYi^bNZn3P'+i46Hsc_[StA?roZd,l;_Q0G-R+q3.(XC6Eib>\Vd.>IT`
%eZ>lMDl9Weg7oF)D?]:1!Ri84rCF(99tP0$U*!"eFR,b>#a0Vc)gZp_AFCnL>jZ50<3\1P6h+`%bibRClG$+=EIL?J'p3t]<VF?N
%FZ5Fo`LT8jj$'7h>Xe'1q-9G=2XaKl5SC>2^QNot0fH_qLVQEk?0%TjH/C9hq1L^)-<dHK]Z_a0h?l(2_&?NQG.BSV7cHmk3IZnq
%6m\DK6*A>q%C%knV<V\6U1Krf2r=d>GVbF?4oE7*plg-',ab+H.7_EH'`iB9'IZrUgRK(Bq4OPdg2o4T=:\dm4EAf%&$]d#*IF:-
%%uN//iige&5brW/a-J$tXSEQ$m8lrWCBj"NQ*BC@4NblkGhC0.4HZ\=.O9;R7p<0\e!s[)<5i"O8\tchJB2Ki3;+lVqZDDN9g?@n
%k[Z9.qEal#0TG&3pqb"<V+\0N?UJVd.Gl'#P9!`p/6V?p+ng7uf^?)a'd''1qt0`Ln+Q'[FZt.O(=mn797aG1>O+PM9EHtM'[g!0
%*"c"kAm>d3SN*Ri2s.dN-om`LE*e<pf7H4]]"QaA@XC$!Mi-c&8I][h18!CPeO\U`EH%>j>1%ebXK)aq?Z^tJX%8H1Cn\AbiN:5l
%2fCk3_j=(*JW?+++Ak#VCt+p5`==!iBm=PNgl2tu&37n$,UHf#IkK0KIOR;*h91-4iocI!c02$*I<EMp)EO_3E&h6t&9]H3Nba@R
%XM+o_FmVAU@g&l;("VBAE"GO\cKa%<6Q%fMC/Q(&E7h#6gVPhc;!'08.JG-!c1>'!qd>^9o/4MXTKHacOW)6>=<olN+<1d:IGMkj
%$s$`t<iH5!s1X)%>LLgRm.$4`,O1DS&"mGrF<j9P8"O/uQc[?*oR$[TFtoQZAFIe_073FW"ui!M<JX07<&#,_bbl8B)7#kaR&O$t
%W2f"pEpL(r9pg$L0u[E[4gUF#Uj9)[,E$#0$Ha+eS^Xj-++9n34.epmQls>Rb"cJrokmDeaqoKSant'A$DbkO32!giMTu/7[,UT[
%5qFJh1*r2`K$XpX7>AbcZUcu03>pM-4oL28kb)<-_<?nE&kfaQa7-&"h>bQh*@oXhT^ac8W)>l)"-7YFPMucZ`9c<Z=WfRj.gBFf
%@N4U>OP6kZ<4uq^Gt]j[jRh+k<%*_SOKeXXAERdB)WdFi.VDqR1J1i^GL(=`IW,Je#*M+6BG`u:,B-bJ`s2JEj!]iG9JR_0Pk\:q
%Jf_uVc1-ag*n9Za8@H@^?elc'8\!`D[!sc[T:T4%TNhY0,d,n(V"mZWl$E70\[CE,]!7;dm2()H07Ncerr;3[06/9W:uAn@8puE+
%Z)D"\Acql=B0=s$>2kqh.H3N3"$O29j=R1td^PL#*JY3jFqU(69\p'R=bLFFZ*dt0inbj3&ePuAO+)'fdcBUGOmV44o)6a2-@=#u
%YW=F;XZYJ7?9NZYe=Y_PIX0gdrc[.hcZA3[.r<R-'IU?dX5k3J(Y/l(<sGI^(-m!d6-kU)e`Q.@JGZoE0ES/?f;32AL9=A4-2PS0
%e>%;T(`Xt#bS_H]Q&Pd+G\/<6P&pYZ8FDOV]7*80=<dqZbJ&!XI6i[RXZZpeMUF2EBjW)FY:Be'Di"QbO$B3tk.1N+H*B`jLttRd
%eKU_@1+=1/#1X8>@mEQg'r%4]JIA;81=8ZYdQeSO:p1<h4`hCm3^Rq=)-"%qYLTHnF9n:_D_`ci5"G<d#fKWP+I"eifp>B5jqoB,
%Pj6&Nb8qqpCQ>uK67m"*^M-ao8gp3jTZk@l`>0[?PNQQ6?*QKS\IUnR'%0cCqeZ7"b>1D7)$%2g8QJ1P_PSl2]./^0:$kco[8QCH
%)^NlgE%39H*1WLoJ-p:GFdNJ"a$l0ki7KSA5uggN%6uGueO9VVa[^c5r&eu]3VpYTELqL@BqNKtPo=+SWeuDb4;mTGpCl=$n+!-+
%lI<B6fn21-L\gq\r^%H&\i#9XS9(&1$__+;SF7UtG#45uH>,CP:#p#OaAfF!fM)ZT'GG0\;\_lPMW7_%i<c44e/^mP&Q3G]jqK5\
%nM"6E:F[Otj7?]Ek6F'qS<.])dO`M2FaS#Y0A-2O1(jUC]Qt.V@m@M"$@39cS$*GV#!dV>?"/E\Z?'F2-h;8l*/684\9IE0Y5cEr
%gq2TJ-ZVpV-"tC?D1OaDCf!Y0Ua!#DEpa=YaG<O(8g[o(RqHRG^C+WYdh,!Q@>N`nRRt($E<0CBF$13J&<X3.8.n9WC$G?Jr6$gZ
%26fCX?@c_qEmVop["R&5GR5"o/>\r9r1'kBf-MME@B*@h\D57M/!9GX,A/B1dJ>9(U'afJSYFg_'FcfPKd&bA\oElHk,;MWo>N\9
%mcLFp\=Loi&#JjGj;C7.hU\H0$pY\(!bUug98lDig[_,sP\PjuHd;%<V_WiP1(>E['V]Lj(10?&[5`)4E:KbuBhFsa4;Ms;FZS!,
%Sij:b$$:D,T>.up%JSD8h9lH3SnD9UQF9_m-@TnZj\n"J&_.Deeu*_@lBomY$\$[`4Bruh#F1$<GtWLQ"L:<:aqY/\&sLAgUt7k>
%I-[_!%XRgD9JX5YDH[*PKJuObS3(mE(TVG,/(&2bCM!t=c+En0#C5nn%rMJmPT0lp+aW$X&h"%8<gAo2\?&GZ&IfSHZQN>K.dbN0
%(mJ?4di0c>=td3>d4rci%L]f+1.td[<'ju1JLGksK1ld/0jn>U_1W;tTAT3t?G;K>(GC>5D^j7OC0"9e!Hi#,+GeQs6)r.o(=cq\
%?nKFX6P2D?.P08$QOG3V8E+Jl<&h(3ZUa7!c7CHCW&Y:XK_9=Q,)``F5[&=DOa']Bm'eZ$p,UtFq$TS=ks8.4^Hgi"2(=jH^3-KA
%p*H^,_hObSO&K6'CbrB4p?>0Q^^L^S+?:A$FQ03D$+3'3h&bk(];[Oel'f+S,g(HM5EEa2q;ZWmerDN;A!eeM:]J\u8e)WAU&VE)
%TBJ[eJ+o).1Lb/oLDfN+Pj26;f(`uB#?i8ClL0[DLG0g/fZ.0RX,]G5C^/#GH@(E"e4K3*6]49$,d855I`:cbP)7hP?au;[i51T8
%SP1>/"XnPZ9p"H.8g0Hq+/G]UEH2f`n&22\Bh]3e"R0M3cQHS9A/MSYXN9#p<!b8k[<dmMXg3deWl*)Vl@Z%cO5adD<hoAELgV29
%=(EYVDApUq5-8d49F1b2IQpmogId`%=$3JDLQ[;(NpPE4Bf,fPKo#D8O[27`=I1k!b\[-_*0DqKR*;=l?Ok)ZY@[aS9`Y"^s7#c4
%pCI;cIm3kXs8&XCIf5%/rqMg%IQ2n.ptu)?07Wn<J,.!3J+L^qr;GOOb?t;=o,h?<iD4s?Z1,g6kPV5Zs72L@rq12ZrlZBjrUp3i
%oD]38:"KjSn.5QlJ,Q#=rpThN)1!7.~>
%AI9_PrivateDataEnd
